

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

uint __GetColor(int r,int g,int b)
{
	r=(((r)>(255))?(255):(((r)<(0))?(0):(r)));
	g=(((g)>(255))?(255):(((g)<(0))?(0):(g)));
	b=(((b)>(255))?(255):(((b)<(0))?(0):(b)));
	return(uint((0xFF<<24)|(((r)&0xFF)<<16)|(((g)&0xFF)<<8)|((b)&0xFF)));
}

uint __GetGradient(uint colorStart,uint colorEnd,uint8 pos)
{
	pos=(((pos)>(100))?(100):(((pos)<(1))?(1):(pos)));
	
	int aS=(colorStart>>24)&0xFF,
	rS=((colorStart>>16)&0xFF),
	gS=((colorStart>>8)&0xFF),
	bS=((colorStart)&0xFF),
	
	aE=(colorEnd>>24)&0xFF,
	rE=((colorEnd>>16)&0xFF),
	gE=((colorEnd>>8)&0xFF),
	bE=((colorEnd)&0xFF); 
	
	rS=(((rE-int(rS*(pos*0.01)))>0)?(rE-int(rS*(pos*0.01))):-(rE-int(rS*(pos*0.01))));
	gS=(((gE-int(gS*(pos*0.01)))>0)?(gE-int(gS*(pos*0.01))):-(gE-int(gS*(pos*0.01))));
	bS=(((bE-int(bS*(pos*0.01)))>0)?(bE-int(bS*(pos*0.01))):-(bE-int(bS*(pos*0.01))));
	
	return __GetColor(rS,gS,bS);
}

uint __GetColor(uint8&a,uint8&r,uint8&g,uint8&b,uint color){
	a=(color>>24)&0xFF;
	r=((color>>16)&0xFF);
	g=((color>>8)&0xFF);
	b=((color)&0xFF);
	
	return 0;
}                                        

import bool AddWalkPlane(Critter&npc,uint priority,uint16 hexX,uint16 hexY,uint8 dir,bool run,uint cut)from"npc_planes";
import void FlushScreen(Critter&cr,uint fromColor,uint toColor,uint timeMs)from"effects";
import void RestartFactions(Critter&cr,int p0,int p1,int p2)from"factions";
import void Log_factions(Critter&player,int crId,int mode,int level,string@param3,int[]@param4)from"gm";
import void ChangeCritterSpeed(Critter&cr)from"speed";
uint papik;
uint brass;

uint8 GetDir(Critter@cr,Critter@crit)
{
	return GetDirection(cr.HexX,cr.HexY,crit.HexX,crit.HexY);
}

bool IsNotHuman(Critter&cr)
{
	if(cr.StatBase[(67)]<(5)||cr.IsPlayer())
	return false;
	else
	return true;
}

void _ItemInit(Item&item,bool FirstTime)
{
	if(item.Val1==0)
	item.Val1=Random(1,8191);
	item.SetLexems("$number"+item.Val1);
	item.SetEvent((2),"_tie");
}

void _InitRope(Item&item,bool firstTime)
{
	item.SetEvent((2),"_tie");
} 

void _InitUsedHandcuffs(Item&item,bool firstTime)
{
	item.SetEvent((4),"_unlock");
	item.SetEvent((6),"_hellno1");
	item.SetEvent((5),"_hellno3");
}

void _InitHandcuffsKey(Item&item,bool firstTime)
{
	item.SetEvent((2),"_release");
}

bool _tie(Item&item,Critter&crit,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	
	bool onSelf=(!(@onCritter!=null)&&!(@onItem!=null)&&!(@onScenery!=null));
	bool isRope=(item.GetProtoId()==(127));
	if(IsNotHuman(crit)&&!isRope)
	{
		crit.SayMsg((11),(3),12952);
		return true;
	}
	
	if(((@onCritter!=null))&&(IsNotHuman(onCritter))&&!isRope)
	{
		crit.SayMsg((11),(3),12951);
		return true;
	}
	
	if(((@onCritter!=null))&&isRope&&onCritter.IsDead())
	{
		if(onCritter.GetTimeEvents((42),null,null,null)>0)
		{
			onCritter.EraseTimeEvents((42));
			crit.Say((11),"Вы отпустили тело");
			ChangeCritterSpeed(crit);
			return true;
		}
		onCritter.AddTimeEvent("cte_DragAndDrop",4*__TimeMultiplier,(42),crit.Id);
		crit.ModeBase[(540)]=1;
		crit.Say((11),"Вы тащите тело");
		return true;
	}
	
	if(onSelf&&crit.StatBase[(182)]==0&&(!IsNotHuman(crit)))
	{
		crit.SayMsg((11),(3),!isRope?12943:12990);
		TieUp(item,crit,crit);
		return true;
	}
	
	if(((@onCritter!=null))&&(((onCritter.StatBase[(182)]>>29)&0x1)!=0)&&(!IsNotHuman(onCritter)))
	{
		crit.SayMsg((11),(3),!isRope?12940:12993);
		return true;
	}
	if(((@onCritter!=null))&&(onCritter.StatBase[(182)]==0))
	{
		if(onCritter.StatBase[(72)]<0||onCritter.IsKnockout())
		{
			TieUp(item,crit,onCritter);
			return true;
		}
		if(onCritter.Timeout[(238)]!=0||onCritter.IsNpc())
		{
			if(onCritter.Stat[(67)]==(5))
			{
				brahminTie(item,crit,onCritter);
				return true;
			}
			else
			{
				if(onCritter.IsNpc())
				onCritter.AddEnemyInStack(crit.Id);
				crit.SayMsg((11),(3),!isRope?12949:12989);
				return true;
			}
		}
		else
		{
			ToAsk(item,crit,onCritter);
			return true;
		}
	}
	return false;
}

void _hellno1(Item&item,Critter&crit,uint8 fromSlot)
{
	if(item.CritSlot!=(1))
	{
		crit.SayMsg((11),(3),12945);
		crit.MoveItem(item.Id,1,item.Val1==0?(1):(2));
		item.Update();
	}
} 

void _hellno2(Item&item,Critter&crit,uint8 fromSlot)
{
	if(item.CritSlot!=(2))
	{
		crit.SayMsg((11),(3),12945);
		crit.MoveItem(item.Id,1,(2));
		item.Update();
	}
}

void _hellno3(Item&item,Critter&crit)
{
	crit.SayMsg((11),(3),12945);  
	
	MoveItem(item,1,crit);
	crit.MoveItem(item.Id,1,item.Val1==0?(1):(2));
	item.Update();
}

void _hellno4(Item&item,Critter&crit)
{
	crit.SayMsg((11),(3),12945);
	MoveItem(item,1,crit);
	crit.MoveItem(item.Id,1,(2));
	item.Update();
}

bool _kickme(Critter&cr,Critter&attacker)
{
	uint cuffs=cr.StatBase[(182)];
	uint8 escape=(cuffs>>29)&0x1;
	if(cr.StatBase[(182)]!=0&&escape==0)
	{
		cr.ClearEnemyStack();
		return true;
	}
	else
	return false;
}

bool _release(Item&item,Critter&crit,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	bool onSelf=(!(@onCritter!=null)&&!(@onItem!=null)&&!(@onScenery!=null));
	int cuffs_state;
	int keynum;
	int nohome;
	
	if((@onCritter!=null)&&onCritter.StatBase[(182)]!=0)
	{
		cuffs_state=onCritter.StatBase[(182)];
		keynum=(cuffs_state>>16)&0x1FFF;
		nohome=(cuffs_state>>30)&0x1;
		Item@[]items;
		
		if(item.Val1==keynum)
		{
			string name;
			if(onCritter.IsPlayer())
			name=GetPlayerName(onCritter.Id);
			else
			name="жертву";
			crit.SayMsg((11),(3),12948,"$name"+name);
			onCritter.SayMsg((11),(3),12946);
			onCritter.StatBase[(182)]=0;
			onCritter.GetItems((1),items);
			onCritter.GetItems((2),items);
			DeleteItems(items);
			Item@cuffs=crit.AddItem((690),1);
			cuffs.Val1=keynum;
			cuffs.SetLexems("$number"+cuffs.Val1);
			DeleteItem(item);
			if(onCritter.IsNpc())
			{
				onCritter.EraseTimeEvents((9));
				onCritter.StatBase[(517)]=nohome;
				onCritter.StatBase[(519)]=0;
			}
		}
		return true;
	}
	
	if(onSelf&&crit.StatBase[(182)]!=0)
	{
		cuffs_state=crit.StatBase[(182)];
		keynum=(cuffs_state>>16)&0x1FFF;
		nohome=(cuffs_state>>30)&0x1;
		if(item.Val1==keynum)
		{
			crit.SayMsg((11),(3),12947);
			crit.StatBase[(182)]=0;
			crit.DeleteItem((692),2);
			Item@cuffs=crit.AddItem((690),1);
			cuffs.Val1=keynum;
			cuffs.SetLexems("$number"+cuffs.Val1);
			DeleteItem(item);
			return true;
		}
	}
	return false;
}

void TieUp(Item&item,Critter&crit,Critter@onCritter)
{
	uint8 follow=1;
	uint8 escape=0;
	if(crit.Id!=onCritter.Id)
	onCritter.StatBase[(182)]=crit.Id|(item.Val1<<16)|(escape<<29)|(onCritter.StatBase[(517)]<<30)|(follow<<31);
	else
	onCritter.StatBase[(182)]=onCritter.StatBase[(182)]|(item.Val1<<16)|(escape<<29)|(onCritter.StatBase[(517)]<<30)|(follow<<31);
	bool handCuffs=(item.GetProtoId()==(690));
	
	Item@key;
	if(handCuffs)
	{
		@key=crit.AddItem((691),1);
		key.Val1=item.Val1;
		key.SetLexems("$keynum"+key.Val1);
	}
	
	DeleteItem(item); 
	
	Item@[]items;
	Item@[]items0;
	
	uint itemscount=onCritter.GetItems((1),items);
	uint itemscount0=onCritter.GetItems((2),items0);
	
	if(itemscount>0)
	{
		onCritter.MoveItem(items[0].Id,itemscount,(0));
	}
	if(itemscount0>0)
	{
		onCritter.MoveItem(items0[0].Id,itemscount0,(0));
	} 
	
	Item@usedcuffs1=onCritter.AddItem(handCuffs?(692):(694),1);
	Item@usedcuffs2=onCritter.AddItem(handCuffs?(692):(694),1);
	
	onCritter.MoveItem(usedcuffs1.Id,1,(1));
	onCritter.MoveItem(usedcuffs2.Id,1,(2));
	usedcuffs1.Val1=1;
	usedcuffs2.Val1=0;
	usedcuffs1.Update();
	usedcuffs2.Update();
	if(crit.Id!=onCritter.Id)
	{
		string name;
		if(onCritter.IsPlayer())
		name=GetPlayerName(onCritter.Id);
		else
		name="жертву";
		crit.SayMsg((11),(3),handCuffs?12941:12991,"$victim"+name);
		onCritter.SayMsg((11),(3),handCuffs?12942:12992);
	}
	
	usedcuffs1.SetEvent((4),"_unlock");
	usedcuffs2.SetEvent((4),"_unlock");
	usedcuffs1.SetEvent((6),"_hellno1");
	usedcuffs2.SetEvent((6),"_hellno1");
	usedcuffs1.SetEvent((5),"_hellno3");
	usedcuffs2.SetEvent((5),"_hellno3");
	
	if(handCuffs)
	{
		key.SetEvent((2),"_release");
	}
	
	onCritter.SetEvent((2),"_drop");
	
	if(onCritter.IsNpc())
	{
		Map@homemap=onCritter.GetMap();
		onCritter.AddTimeEvent("come_to_daddy",30,(9));
		onCritter.SetEvent((16),"_kickme");
		onCritter.SetEvent((3),"_respawn");
		onCritter.StatBase[(519)]=1;
		onCritter.ModeBase[(518)]=1;
		onCritter.ErasePlane(-1,true);
		onCritter.ClearEnemyStack();
		onCritter.StatBase[(517)]=1;
	}
} 

void _drop(Critter&cr,Critter@killer)
{
	if(cr.StatBase[(182)]!=0)
	{
		cr.StatBase[(182)]=0;
		cr.DeleteItem((692),2);
		cr.AddItem((693),1);
	}
}     

funcdef uint PROCESS(Critter@,int&,int&,int&);                  

import bool RegisterProcess(uint8 type,any func)from"ltp";

import bool StartProcess(Critter&cr,uint8 type,int param0,int param1,int param2,uint time)from"ltp";
import bool StartProcess(Critter&cr,uint8 type,int param0,uint time)from"ltp";
import bool StartProcess(Critter&cr,uint8 type,uint time)from"ltp";

import bool StopProcess(Critter&cr)from"ltp";

import bool checkTDH(Critter&cr)from"ltp";
import bool checkTDH(Critter&cr,uint8 type)from"ltp";         

bool ltp_ropecuffs_inited=false;
void ltp_ropecuffs_init()
{
	PROCESS@___pfunc=@process_unlock;any ___pany;___pany.store(@___pfunc);RegisterProcess((34),___pany);
	ltp_ropecuffs_inited=true;
}

bool unlock(Critter&cr,Critter&targetCr,uint16 pid)
{
	bool isKnife=(pid==(236)||
	pid==(4)||
	pid==(517)||
	pid==(319)||
	pid==(522));
	
	if(!isKnife)
	return false;
	
	targetCr.DeleteItem((694),2);
	cr.AddItem((127),1);
	targetCr.StatBase[(182)]=0;
	targetCr.SayMsg((11),(3),12988);
	return true;
}

uint process_unlock(Critter@cr,int&param0,int&param1,int&param2)
{
	if(param0==-1&&(cr is null)){param0=int((34));return(0xF035BCF3);}
	
	if(param0==0)
	cr.TimeoutBase[(234)]=(__FullSecond+((30)*__TimeMultiplier));
	cr.DeleteItem(param0==0?(692):(694),2);
	cr.AddItem(param0==0?(693):(127),1);
	cr.StatBase[(182)]=0;
	cr.SayMsg((11),(3),param0==0?12947:12988);
	
	return 0;
}

bool _unlock(Item&item,Critter&crit,int skill)
{
	if(!ltp_ropecuffs_inited)
	ltp_ropecuffs_init();
	
	if(item.GetProtoId()==(694))
	{
		
		uint16 time=0;
		
		if(skill==(213))
		{
			Item@lighter=crit.GetItem((101),-1);
			if(@lighter==null)
			{
				crit.SayMsg((11),(3),12985);
				return true;
			}
			
			time=Random(crit.Stat[(6)],15)*1000;
		}
		else if(skill==(211))
		{
			bool succ=false;
			uint8 count=0;
			uint16[]knifePids={(522),(517),(236),(319),(4)};
			for(count=0;count<knifePids.length();count++)
			{
				Item@knife=crit.GetItem(knifePids[count],-1);
				if(@knife!=null)
				{
					succ=true;
					break;
				}
			}
			if(!succ)
			{
				crit.SayMsg((11),(3),12986);
				return true;
			} 
			
			switch(knifePids[count])
			{
				case(4):
				time=10000;
				break;
				case(319):
				time=9000;
				break;
				case(236):
				time=7000;
				break;
				case(517):
				time=6000;
				break;
				case(522):
				time=5000;
				break;
				default:
				time-1;
				break;
			}
			
			if(time==-1)
			{
				crit.SayMsg((11),(3),12987);
				return true;
			}
			
			time-=(crit.Skill[(204)]*20)+(crit.Stat[(5)]*300);
			if(time<=0)
			time=1000; 
			
		}
		
		if(time<=0)
		return false;
		
		StartProcess(crit,(34),1,0,0,time);
		return true;
	}
	
	if(skill==(209))
	{
		if(crit.Timeout[(234)]>0)
		{
			crit.SayMsg((11),(3),3401);
			return true;
		}
		if((crit.Skill[(209)]+Random(0,150))>300-Random(0,50))
		{
			StartProcess(crit,(34),0,0,0,1000);
			return true;
		}
		else
		{
			crit.TimeoutBase[(234)]=(__FullSecond+((30)*__TimeMultiplier));
			crit.SayMsg((11),(3),12944);
			return true;
		}
	}
	if(skill==(212))
	{
		uint number=(crit.StatBase[(182)]>>16)&0x1FFF;
		crit.SayMsg((11),(3),12950,"$number"+number);
		return true;
	}
	return false;
}

uint come_to_daddy(Critter&cr,int identifier,uint&rate)
{
	int8 y=0;
	cr.ClearEnemyStack();
	uint cuffs_state=cr.StatBase[(182)];
	uint16 master=(cuffs_state)&0xFFFF;
	uint16 keynum=(cuffs_state>>16)&0x1FFF;
	uint8 escape=(cuffs_state>>29)&0x1;
	uint8 nohome=(cuffs_state>>30)&0x1;
	uint8 follow=(cuffs_state>>31)&0x1;
	uint8 leavemealone=Random(0,300);
	Critter@daddy=GetCritter(master);
	Map@daddymap=null;
	if((@daddy!=null))
	@daddymap=daddy.GetMap();
	else if(!(@daddy!=null)&&escape==0)
	SelfRelease(cr);
	Map@crmap=cr.GetMap();
	if((escape==0)&&(leavemealone!=10))
	{
		cr.ErasePlane(-1,true);
		if(follow==1)
		{
			if((!(@daddymap!=null))&&((@crmap!=null)))
			{
				cr.TransitToGlobalGroup(daddy.Id);
			}
			else if(((@daddymap!=null))&&((@crmap!=null))&&(daddymap.Id==crmap.Id))
			{
				Critter@[]friends;
				cr.GetCritters(true,(0x01),friends);
				while(y<=int(friends.length())-1)
				{
					if((@friends[y]!=null)&&cr.Param[(67)]!=(5)&&(friends[y].Stat[(106)]==cr.Stat[(106)]||friends[y].Stat[(106)]==5))
					friends[y].AddEnemyInStack(daddy.Id);
					y++;
				}
				AddWalkPlane(cr,0,daddy.HexX,daddy.HexY,GetDir(cr,daddy),false,1);
			}
			else if(((@daddymap!=null))&&((@crmap!=null))&&(crmap.Id!=daddymap.Id))
			{
				uint8 findPos=1;
				while(findPos<=10)
				{
					if(daddymap.IsHexPassed(daddy.HexX+findPos,daddy.HexY+findPos))
					{
						cr.TransitToMap(daddymap.Id,daddy.HexX+findPos,daddy.HexY+findPos,GetDir(cr,daddy));
						findPos=10;
					}
					findPos++;
				}
			}
		}
	}
	else if((escape==0)&&(leavemealone==10)&&cr.Param[(67)]!=(5))
	{
		SelfRelease(cr);
	}
	else if(escape==1)
	{
		uint homemap=0;
		uint8 homedir=0;
		uint16 homex=0;
		uint16 homey=0;
		uint16 EntX=0;
		uint16 EntY=0;
		uint16 ExitDist=0;
		cr.GetHomePos(homemap,homex,homey,homedir);
		
		Map@homemap0=GetMap(homemap);
		
		if((@crmap!=null))
		{
			if(!crmap.GetEntireCoords(0,0,EntX,EntY))
			EntX=cr.HexX;
			EntY=cr.HexY;
			ExitDist=GetDistantion(cr.HexX,cr.HexY,EntX,EntY);
		}
		else if(homemap0!is null)
		cr.TransitToMap(homemap,homex,homey,homedir);
		
		if((@daddymap!=null)&&(@crmap!=null)&&(daddymap.Id==crmap.Id))
		{
			if(daddy.IsDead())
			{
				if(cr.Timeout[(238)]==0&&ExitDist<4)
				{
					if(homemap0!is null)
					cr.TransitToMap(homemap,homex,homey,homedir);
					cr.StatBase[(182)]=0;
					return 0;
				}
				else
				{
					AddWalkPlane(cr,0,EntX,EntY,0,true,1);
				}
			}
		}
		else if(((@daddymap!=null))&&((@crmap!=null))&&(crmap.Id!=daddymap.Id)||(!(@daddymap!=null))&&((@crmap!=null)))
		{
			
			if(cr.Timeout[(238)]==0&&ExitDist<4)
			{
				if(homemap0!is null)
				cr.TransitToMap(homemap,homex,homey,homedir);
				cr.StatBase[(182)]=0;
				return 0;
			}
			else
			{
				AddWalkPlane(cr,0,EntX,EntY,0,true,1);
			}
		}
	}
	
	return 30;
}

void ToAsk(Item&item,Critter&crit,Critter@onCritter)
{
	string player;
	if(crit.IsPlayer())
	player=GetPlayerName(crit.Id);
	else
	player="Кто-то";
	if((crit.Stat[(0)]+crit.Stat[(6)]+crit.Stat[(5)]+Random(0,10))>(onCritter.Stat[(0)]+onCritter.Stat[(6)]+onCritter.Stat[(5)]+Random(1,15)))
	{
		TieUp(item,crit,onCritter);
	}
	else
	{
		papik=crit.Id;
		brass=item.Id;
		onCritter.ShowScreen((2),1,"AnswerMe");
		onCritter.SayMsg((18),(3),12955,"$player"+player);
		onCritter.SayMsg((19+(0)),(3),12956);
	}
	
} 

void AnswerMe(Critter&cr,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		cr.SayMsg((11),(3),12942);
		TieUp(GetItem(brass),GetCritter(papik),cr);
	}
	
} 

void SelfRelease(Critter&cr)
{
	uint cuffs_state=cr.StatBase[(182)];
	uint16 master=(cuffs_state)&0xFFFF;
	uint16 keynum=0;
	uint8 escape=1;
	uint8 nohome=(cuffs_state>>30)&0x1;
	uint8 follow=(cuffs_state>>31)&0x1;
	Critter@bastard=GetCritter(master);
	Item@[]items;
	cr.GetItems((1),items);
	cr.GetItems((2),items);
	DeleteItems(items);
	cr.AddItem((693),1);
	if((@bastard!=null))
	bastard.SayMsg((11),(3),12957);
	cr.AddEnemyInStack(master);
	cr.StatBase[(182)]=master|(keynum<<16)|(escape<<29)|(nohome<<30)|(follow<<31);
}

void _respawn(Critter&cr)
{
	uint homemap=0;
	uint8 homedir=0;
	uint16 homex=0;
	uint16 homey=0;
	Item@broken=cr.GetItemById((693));
	Map@map=cr.GetMap();
	MoveItem(broken,1,map,cr.HexX,cr.HexY);
	cr.GetHomePos(homemap,homex,homey,homedir);
	cr.ToLife();
	cr.TransitToMap(homemap,homex,homey,homedir);
} 

void HookAttack(Critter&cr,Critter@target,uint8 force,uint8 pull)
{
	if((@target!=null)&&!target.IsDead())
	{
		Map@map=cr.GetMap();
		uint8 dist=GetDistantion(cr.HexX,cr.HexY,target.HexX,target.HexY);
		uint crit=cr.Id;
		Item@Hook;
		@Hook=map.GetItem(target.HexX,target.HexY,(1524));
		if(!(@Hook!=null))
		{
			@Hook=map.AddItem(target.HexX,target.HexY,(1524),1);
			Hook.Val0=dist;
			Hook.Val1=cr.Id;
			Hook.Val5=pull;
			(Hook.Flags=(Hook.Flags)|((0x00020000)));
			Hook.SetScript("_HookWalkInit");
		}
		else if(Hook.Val1!=crit)
		{
			Hook.Val0=dist;
			Hook.Val1=crit;
			Hook.Val5=pull;
			Hook.SetScript("_HookWalkInit");
		}
		else if(force+cr.Stat[(72)]/20-target.Stat[(72)]/20+cr.Stat[(0)]-target.Stat[(0)]>Random(0,15))
		{
			cr.Say((6),""+crit);
			uint16 targetHx=cr.HexX;
			uint16 targetHy=cr.HexY;
			map.GetHexCoordWall(target.HexX,target.HexY,targetHx,targetHy,0.0f,4);
			target.ToKnockout((((Random(0,1)==1?true:false))?(82):(83)),(((Random(0,1)==1?true:false))?(86):(87)),(((Random(0,1)==1?true:false))?(88):(89)),2,targetHx,targetHy);
			MoveItem(Hook,1,map,targetHx,targetHy);
		}
	}
}

void _HookWalkInit(Item&item,bool firstTime)
{
	if(item.GetProtoId()==(1524))
	item.SetEvent((7),"_HookWalk");
}

void _HookWalk(Item&Hook,Critter&cr,bool entered,uint8 dir)
{
	if(!entered)
	{
		Critter@Hooker=GetCritter(Hook.Val1);
		if(!(@Hooker!=null))
		DeleteItem(Hook);
		uint8 dist=GetDistantion(cr.HexX,cr.HexY,Hooker.HexX,Hooker.HexY);
		uint8 distMax=Hook.Val0;
		Map@map=cr.GetMap();
		uint crit=cr.Id;
		Item@Hook1=map.GetItem(Hooker.HexX,Hooker.HexY,(1524));
		
		if(!(@Hook1!=null))
		DeleteItem(Hook);
		else if(cr.GetMapId()!=Hooker.GetMapId()||Hooker.IsDead()||Hook1.Val1!=crit)
		DeleteItem(Hook);
		else if((@Hook!=null))
		{
			if(dist>distMax)
			{
				uint16 HookHx=Hooker.HexX;
				uint16 HookHy=Hooker.HexY;
				map.GetHexCoordWall(cr.HexX,cr.HexY,HookHx,HookHy,0.0f,2);
				cr.ToKnockout((((Random(0,1)==1?true:false))?(82):(83)),(((Random(0,1)==1?true:false))?(86):(87)),(((Random(0,1)==1?true:false))?(88):(89)),3,HookHx,HookHy);
				cr.Say((11),"Вас отбрасывает назад");
				MoveItem(Hook,1,map,cr.HexX,cr.HexY);
				cr.Say((6),""+crit);
			}
			else
			{
				if(Hook.Val5!=0)
				Hook.Val0=dist;
				MoveItem(Hook,1,map,cr.HexX,cr.HexY);
			}
		}
	}
}  

uint cte_DragAndDrop(Critter&cr,int identifier,uint&rate)
{
	Critter@Hooker=GetCritter(rate);
	if(!(@Hooker!=null))return 0;
	if(Hooker.IsRuning){Hooker.Say((11),"Вы отпустили тело");ChangeCritterSpeed(Hooker);return 0;}
	
	Map@map=cr.GetMap();
	Map@Hmap=Hooker.GetMap();
	
	uint16 HookHx=Hooker.HexX;
	uint16 HookHy=Hooker.HexY;
	uint8 dir=Hooker.Dir;
	uint8 revDir;
	uint8 dist=GetDistantion(cr.HexX,cr.HexY,Hooker.HexX,Hooker.HexY);
	revDir=dir+3;
	if(revDir>5)
	revDir=revDir-6;
	Hmap.MoveHexByDir(HookHx,HookHy,revDir,1);
	if(Hooker.Stat[(77)]>=4)
	{
		switch(Hooker.Stat[(0)])
		{
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			if(not Hmap.IsHexPassed(HookHx,HookHy)||(dist<=2))return 6*__TimeMultiplier;
			if(Hmap.Id!=map.Id){cr.TransitToMap(Hmap.Id,HookHx,HookHy,dir);ChangeCritterSpeed(Hooker);return 0;}
			else if(dist<5){cr.TransitToHex(HookHx,HookHy,dir);return 6*__TimeMultiplier;}
			else{Hooker.Say((11),"Вы отпустили тело");ChangeCritterSpeed(Hooker);return 0;}
			break;
			case 6:
			case 7:
			case 8:
			if(not Hmap.IsHexPassed(HookHx,HookHy)||(dist<=2))return 4*__TimeMultiplier;
			if(Hmap.Id!=map.Id){cr.TransitToMap(Hmap.Id,HookHx,HookHy,dir);ChangeCritterSpeed(Hooker);return 0;}
			else if(dist<5){cr.TransitToHex(HookHx,HookHy,dir);return 4*__TimeMultiplier;}
			else{Hooker.Say((11),"Вы отпустили тело");ChangeCritterSpeed(Hooker);return 0;}
			break;
			case 9:
			case 10:
			if(not Hmap.IsHexPassed(HookHx,HookHy)||(dist<=2))return 2*__TimeMultiplier;
			if(Hmap.Id!=map.Id){cr.TransitToMap(Hmap.Id,HookHx,HookHy,dir);ChangeCritterSpeed(Hooker);return 0;}
			else if(dist<5){cr.TransitToHex(HookHx,HookHy,dir);return 2*__TimeMultiplier;}
			else{Hooker.Say((11),"Вы отпустили тело");ChangeCritterSpeed(Hooker);return 0;}
			break;
			default:
			break;
		}
	}
	else
	{
		if(not Hmap.IsHexPassed(HookHx,HookHy)||(dist<=2))return 8*__TimeMultiplier;
		if(Hmap.Id!=map.Id){cr.TransitToMap(Hmap.Id,HookHx,HookHy,dir);ChangeCritterSpeed(Hooker);return 0;}
		else if(dist<5){cr.TransitToHex(HookHx,HookHy,dir);return 8*__TimeMultiplier;}
		else{Hooker.Say((11),"Вы отпустили тело");ChangeCritterSpeed(Hooker);return 0;}
	}
	return 0;
}

void DragAndDrop(Critter&cr,Critter@target)
{
	if((@target!=null)&&(target.IsDead()||target.IsKnockout()))
	{
		if(target.GetTimeEvents((42),null,null,null)>0)
		{
			target.EraseTimeEvents((42));
			cr.Say((11),"Вы отпустили тело");
			ChangeCritterSpeed(cr);
			return;
		}
		
		target.AddTimeEvent("cte_DragAndDrop",1*__TimeMultiplier,(42),cr.Id);
		
		cr.Say((11),"Вы тащите тело");
	}
} 

void HookMeleeAttack(Critter&cr,Critter@target)
{
	if((@target!=null)&&!target.IsDead())
	{
		Map@map=cr.GetMap();
		uint crit=cr.Id;
		
		if(target.Stat[(72)]<=0)
		{
			if(target.GetTimeEvents((42),null,null,null)>0)
			{
				target.EraseTimeEvents((42));
				cr.Say((11),"Вы отпустили тело");
				ChangeCritterSpeed(cr);
				return;
			}
			
			target.AddTimeEvent("cte_DragAndDrop",1*__TimeMultiplier,(42),cr.Id);
			
			cr.Say((11),"Вы тащите тело");
			return;
		}
		
		Item@Hook=map.GetItem(target.HexX,target.HexY,(1525));
		if(!(@Hook!=null))
		{
			@Hook=map.AddItem(target.HexX,target.HexY,(1525),1);
			Hook.Val1=crit;
			Hook.Val2=0;
			Hook.Val3=0;
			(Hook.Flags=(Hook.Flags)|((0x00020000)));
			Hook.SetScript("_HookMeleeInit");
		}
		else if(Hook.Val1!=crit)
		{
			Hook.Val1=crit;
			Hook.Val2=0;
			Hook.Val3=0;
			Hook.SetScript("_HookMeleeInit");
		}
		
		Item@Hook2=map.GetItem(cr.HexX,cr.HexY,(1525));
		if(!(@Hook2!=null))
		{
			@Hook2=map.AddItem(cr.HexX,cr.HexY,(1525),1);
			Hook2.Val1=target.Id;
			Hook2.Val2=1;
			(Hook2.Flags=(Hook2.Flags)|((0x00020000)));
			Hook2.SetScript("_HookMeleeInit");
		}
		else if(Hook2.Val1!=target.Id)
		{
			Hook2.Val1=target.Id;
			Hook2.Val2=1;
			Hook2.SetScript("_HookMeleeInit");
		}
	}
}

void _HookMeleeInit(Item&item,bool firstTime)
{
	if(item.GetProtoId()==(1525))
	item.SetEvent((7),"_HookMelee");
}

void _HookMelee(Item&Hook,Critter&cr,bool entered,uint8 dir)
{
	if(!entered)
	{
		Critter@Hooker=GetCritter(Hook.Val1);
		uint crit=cr.Id;
		Map@map=cr.GetMap();
		Item@Hook1=map.GetItem(Hooker.HexX,Hooker.HexY,(1525));
		
		if(!(@Hooker!=null)||!(@Hook1!=null))
		{DeleteItem(Hook);return;}
		else if(cr.GetMapId()!=Hooker.GetMapId()||Hooker.IsDead()||Hook1.Val1!=crit)
		{DeleteItem(Hook);return;}
		
		if(Hook.Val2!=0)
		{
			if(Hooker.Stat[(72)]>0||cr.IsRuning)
			{
				DeleteItem(Hook);
				DeleteItem(Hook1);
				return;
			}
			else
			{
				uint16 HookHx=Hook.HexX;
				uint16 HookHy=Hook.HexY;
				
				MoveItem(Hook,Hook.GetCount(),map,cr.HexX,cr.HexY);
				if(cr.Timeout[(234)]>0){return;}
				cr.TimeoutBase[(234)]=__FullSecond+((1)*__TimeMultiplier);
				uint8 revDir;
				revDir=dir+3;
				if(revDir>5)revDir=revDir-6;
				map.MoveHexByDir(HookHx,HookHy,revDir,1);
				Hooker.TransitToHex(HookHx,HookHy,dir);
				MoveItem(Hook1,Hook1.GetCount(),map,Hooker.HexX,Hooker.HexY);
				return;
			}
		}
		
		int chance=Random(0,40)+(cr.Stat[(72)]-Hooker.Stat[(72)])*0.5+(cr.Stat[(0)]*4-Hooker.Stat[(0)]*4)+(cr.Skill[(203)]*0.8-Hooker.Skill[(203)]*0.8)*0.5+(cr.Stat[(6)]*2-Hooker.Stat[(6)]*2)*2;
		chance=(((chance)>(95))?(95):(((chance)<(1))?(1):(chance)));
		
		if(chance>=Random(1,100))
		{
			DeleteItem(Hook);
			DeleteItem(Hook1);
			cr.Say((11),"Вы вырвались из захвата");
			cr.Say((6),"вырывается");
		}
		else if((@Hook!=null))
		{
			uint16 HookHx=cr.HexX;
			uint16 HookHy=cr.HexY;
			uint8 revDir;
			Hook.Val3+=10;
			revDir=dir+3;
			if(revDir>5)
			revDir=revDir-6;
			map.MoveHexByDir(HookHx,HookHy,revDir,1);
			cr.ToKnockout((((Random(0,1)==1?true:false))?(82):(83)),(((Random(0,1)==1?true:false))?(86):(87)),(((Random(0,1)==1?true:false))?(88):(89)),5,HookHx,HookHy);
			cr.Say((11),"Вы не смогли вырваться из захвата");
			cr.Say((6),"пытается вырваться");
			Hooker.Say((6),"держит");
		}
	}
}  

void HookHoldAttack(Critter@target,uint8 hardness)
{
	if((@target!=null)&&!target.IsDead())
	{
		Map@map=target.GetMap();
		uint targ=target.Id;
		Item@Hook=map.GetItem(target.HexX,target.HexY,(1526));
		if(!(@Hook!=null))
		{
			Item@Hook=map.AddItem(target.HexX,target.HexY,(1526),1);
			Hook.Val1=targ;
			Hook.Val5=hardness;
			(Hook.Flags=(Hook.Flags)|((0x00020000)));
			Hook.SetScript("_HookHoldInit");
		}
		else if((Hook.Val1!=targ))
		{
			Hook.Val1=targ;
			Hook.Val5=hardness;
			Hook.SetScript("_HookHoldInit");
		}
	}
}

void _HookHoldInit(Item&item,bool firstTime)
{
	if(item.GetProtoId()==(1526))
	item.SetEvent((7),"_HookHold");
}

void _HookHold(Item&Hook,Critter&cr,bool entered,uint8 dir)
{
	if(!entered)
	{
		uint crit=cr.Id;
		Map@map=cr.GetMap();
		if((@Hook!=null)&&Hook.Val1==crit)
		{
			if((cr.Stat[(0)]+cr.Stat[(5)]+cr.Stat[(2)]+cr.Stat[(6)]-10*Hook.Val5<Random(5,35)))
			{
				cr.Say((6),"не может вырваться");
				cr.Say((11),"Вы не смогли вырваться");
				uint16 HookHx=cr.HexX;
				uint16 HookHy=cr.HexY;
				uint8 revDir;
				revDir=dir+3;
				if(revDir>5)
				revDir=revDir-6;
				map.MoveHexByDir(HookHx,HookHy,revDir,1);
				cr.ToKnockout((((Random(0,1)==1?true:false))?(82):(83)),(((Random(0,1)==1?true:false))?(86):(87)),(((Random(0,1)==1?true:false))?(88):(89)),5,HookHx,HookHy);
				if(Hook.Val5>0)
				Hook.Val5-=1;
			}
			else
			{
				DeleteItem(Hook);
				cr.Say((6),"вырывается");
				cr.Say((11),"Вы освободились");
			}
		}
		else
		DeleteItem(Hook);
	}
}

void _InitSexItem(Item&item,bool firstTime)
{
	item.SetEvent((2),"e_SexUse");
}

bool e_SexUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	if(!(@onCritter!=null)&&!(@onItem!=null)&&!(@onScenery!=null))
	return false;
	if(cr.IsPlayer()&&onCritter.IsPlayer()&&(!IsNotHuman(cr))&&(!IsNotHuman(onCritter)))
	{
		ToAskSex(item,cr,onCritter);
		return true;
	}
	else if(onCritter.StatBase[(67)]==5)
	{
		cr.Say((11),"Оу...");
		HaveSex(cr,onCritter);
		return true;
	}
	else
	cr.Say((11),"Нет, ведь это даже не брамин!");
	return true;
}

void ToAskSex(Item&item,Critter&crit,Critter@onCritter)
{
	string player;
	if(crit.IsPlayer())
	player=GetPlayerName(crit.Id);
	else
	player="Кто-то";
	
	papik=crit.Id;
	onCritter.ShowScreen((2),1,"AnswerSexMe");
	onCritter.SayMsg((18),(3),12959,"$player"+player);
	onCritter.SayMsg((19+(0)),(3),12709);
}

void AnswerSexMe(Critter&cr,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		cr.Say((11),"Вы согласились");
		HaveSex(GetCritter(papik),cr);
	}
}

void HaveSex(Critter&cr,Critter@onCritter)
{
	int initMaxHP=cr.Stat[(7)];
	int recipMaxHP=onCritter.Stat[(7)];
	bool sexFailure=false;
	if(cr.ParamBase[(733)]>0.6*initMaxHP){
		cr.Say((5),"Демонстрирует свой изувеченный орган и расстраивается");
		sexFailure=true;
	}
	if(onCritter.ParamBase[(733)]>0.6*recipMaxHP){
		cr.Say((5),"Демонстрирует свой изувеченный орган и расстраивается");
		sexFailure=true;
	}
	if(onCritter.StatBase[(67)]==5)
	{
		onCritter.Say((5),"Протяжно и нежно мычит");
		onCritter.Say((5),"Протяжно и нежно мычит");
	}
	if(sexFailure)return;
	cr.Say((5),"Принимает порцию сладкой любви");
	if(onCritter.StatBase[(67)]!=5)onCritter.Say((5),"Принимает порцию сладкой любви");
	cr.StatBase[(7)]+=2;
	onCritter.StatBase[(7)]+=2;
	cr.StatBase[(72)]+=2;
	onCritter.StatBase[(72)]+=2;
	if(cr.PerkBase[(395)]>=1||onCritter.PerkBase[(395)]>=1)
	{
		cr.StatBase[(7)]+=5;
		onCritter.StatBase[(7)]+=5;
		cr.StatBase[(72)]+=20;
		onCritter.StatBase[(72)]+=20;
		cr.StatBase[(7)]-=5;
		onCritter.StatBase[(7)]-=5;
	}
	if(cr.PerkBase[(394)]>=1||onCritter.PerkBase[(394)]>=1)
	{
		cr.StatBase[(72)]+=5;
		onCritter.StatBase[(72)]+=5;
	}
	if(cr.TraitBase[(563)]>=1||onCritter.TraitBase[(563)]>=1)
	{
		cr.StatBase[(7)]+=2;
		onCritter.StatBase[(7)]+=2;
		cr.StatBase[(72)]+=10;
		onCritter.StatBase[(72)]+=10;
		cr.StatBase[(7)]-=2;
		onCritter.StatBase[(7)]-=2;
	}
	if(cr.KarmaBase[(483)]>=1||onCritter.KarmaBase[(483)]>=1)
	{
		cr.StatBase[(7)]+=5;
		onCritter.StatBase[(7)]+=5;
		cr.StatBase[(72)]+=10;
		onCritter.StatBase[(72)]+=10;
		cr.StatBase[(7)]-=5;
		onCritter.StatBase[(7)]-=5;
	}
	cr.StatBase[(7)]-=2;
	onCritter.StatBase[(7)]-=2;
	FlushScreen(cr,((uint((0xFF<<24)|(((0)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF)))),((uint((0xFF<<24)|(((0)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF)))),10000);
	FlushScreen(onCritter,((uint((0xFF<<24)|(((0)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF)))),((uint((0xFF<<24)|(((0)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF)))),10000);
} 

void _InitSheriffItem(Item&item,bool firstTime)
{
	item.SetEvent((2),"e_SheriffBadgeUse");
}

void _InitPoliceBadgeItem(Item&item,bool firstTime)
{
	item.SetEvent((2),"e_PoliceBadgeUse");
}

bool e_SheriffBadgeUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	GameVar@post=GetLocalVar((7301),cr.Id);
	if(post.GetValue()!=2)
	{
		cr.Say((11),"У вас нет полномочий");
		return true;
	}
	else if(!(@onCritter!=null)&&!(@onItem!=null)&&!(@onScenery!=null))
	{
		cr.ShowScreen((2),4,"answer_SheriffBadge_self");
		cr.SayMsg((18),(3),107930);
		cr.SayMsg((19+(0)),(3),107931);
		cr.SayMsg((19+(1)),(3),107932);
		cr.SayMsg((19+(2)),(3),107933);
		cr.SayMsg((19+(3)),(3),107934);
		return true;
	}
	else if(cr.IsPlayer()&&onCritter.IsPlayer()&&(!IsNotHuman(onCritter)))
	{
		cr.StatBase[(90)]=onCritter.Id;
		cr.ShowScreen((2),3,"answer_SheriffBadge");
		cr.SayMsg((18),(3),107930);
		cr.SayMsg((19+(0)),(3),107935);
		cr.SayMsg((19+(1)),(3),107936);
		cr.SayMsg((19+(2)),(3),107937);
		return true;
	}
	else
	cr.Say((11),"это неуместно");
	return true;
}

void answer_SheriffBadge_self(Critter&cr,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		cr.Say((11),"Пока не сделано.");
	}
	if(answerI==1)
	{
		cr.Say((11),"Пока не сделано.");
	}
	if(answerI==2)
	{
		cr.Say((11),"Пока не сделано.");
	}
	if(answerI==3)
	{
		cr.Say((11),"Пока не сделано.");
	}
}

void answer_SheriffBadge(Critter&cr,uint answerI,string&answerS)
{
	Critter@asked=GetCritter(cr.Stat[(90)]);
	GameVar@citizenship=GetLocalVar((7300),asked.Id);
	GameVar@faction=GetLocalVar((9971),asked.Id);
	if(!(@asked!=null))
	return;
	else if(answerI==0)
	{
		if(faction.GetValue()==0)
		ToAskJoinPolice(cr,asked);
		else if(faction.GetValue()==2)
		cr.Say((11),"Цель уже состоит в полиции.");
		else
		cr.Say((11),"Цель уже состоит в какой-то другой фракции.");
	}
	else if(answerI==1)
	{
		if(faction.GetValue()==2)
		{
			citizenship.opAssign(0);
			faction.opAssign(0);
			cr.Say((11),"Вы исключили цель из рядов полиции.");
			asked.ParamBase[(800)]=cr.Id;
			cr.KarmaBase[(497)]=0;
			RestartFactions(cr,0,0,0);
			Log_factions(cr,asked.Id,2,0,null,null);
		}
		else
		cr.Say((11),"Цель не состоит в полиции.");
	}
	else if(answerI==2)
	{
		if(faction.GetValue()==1)
		{
			citizenship.opAssign(0);
			faction.opAssign(0);
			cr.Say((11),"Вы исключили цель из администрации города.");
			asked.ParamBase[(800)]=cr.Id;
			cr.KarmaBase[(497)]=0;
			RestartFactions(cr,0,0,0);
			Log_factions(cr,asked.Id,2,0,null,null);
		}
		else
		cr.Say((11),"Цель не состоит в администрации.");
	}
}

bool e_PoliceBadgeUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	GameVar@citizenship=GetLocalVar((7300),cr.Id);
	GameVar@faction=GetLocalVar((9971),cr.Id);
	if(!(@onCritter!=null)&&!(@onItem!=null)&&!(@onScenery!=null))
	{
		cr.Say((6),"Показывает значек полиции Модока");
		return false;
	}
	else if(cr.IsPlayer()&&onCritter.IsPlayer()&&faction.GetValue()==2&&(!IsNotHuman(cr))&&(!IsNotHuman(onCritter)))
	{
		GameVar@oncrit_citizenship=GetLocalVar((7300),onCritter.Id);
		cr.StatBase[(90)]=onCritter.Id;
		cr.ShowScreen((2),8,"answer_PoliceBadge");
		cr.SayMsg((18),(3),107910);
		cr.SayMsg((19+(0)),(3),107911);
		cr.SayMsg((19+(1)),(3),107912);
		cr.SayMsg((19+(2)),(3),107913);
		cr.SayMsg((19+(3)),(3),107914);
		cr.SayMsg((19+(4)),(3),107917);
		if(citizenship.GetValue()!=10)
		cr.SayMsg((19+(5)),(3),107918);
		if(citizenship.GetValue()==10)
		cr.SayMsg((19+(5)),(3),107919);
		cr.SayMsg((19+(6)),(3),107920);
		cr.SayMsg((19+(7)),(3),107921);
		return true;
	}
	else
	cr.Say((11),"это неуместно");
	return true;
}

void answer_PoliceBadge(Critter&cr,uint answerI,string&answerS)
{
	Critter@asked=GetCritter(cr.Stat[(90)]);
	GameVar@citizenship=GetLocalVar((7300),asked.Id);
	GameVar@faction=GetLocalVar((9971),asked.Id);
	if(!(@asked!=null))
	return;
	else if(answerI==0)
	{
		if(citizenship.GetValue()==0)
		cr.Say((11),"Чужак.");
		else if(faction.GetValue()==1)
		cr.Say((11),"Администрация города Модока.");
		else if(faction.GetValue()==2)
		cr.Say((11),"Полицейский.");
		else if(citizenship.GetValue()==1)
		cr.Say((11),"Временный гость.");
		else if(citizenship.GetValue()==2)
		cr.Say((11),"Гость.");
		else if(citizenship.GetValue()==3)
		cr.Say((11),"Гражданин Модока.");
		else if(citizenship.GetValue()==4)
		cr.Say((11),"Привелигированный гражданин Модока.");
		else if(citizenship.GetValue()==10)
		cr.Say((11),"Метка изгоя, преступник.");
		else
		cr.Say((11),"ERROR, сообщите ГМу или администрации");
		if(asked.ParamBase[(800)]==0)
		cr.Say((11),"Еще никто не менял доступменял доступ.");
		else
		cr.Say((11),"Последним менял доступ житель с номером "+asked.ParamBase[(800)]+" в городском реестре");
	}
	else if(answerI==1)
	{
		if(citizenship.GetValue()==0)
		{
			citizenship.opAssign(1);
			cr.Say((11),"Вы выдали временный гостевой пропуск.");
			cr.Say((6),"выдает пропуск");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,1,null,null);
		}
		else
		cr.Say((11),"У цели уже более высокий допуск в город.");
	}
	else if(answerI==2)
	{
		if(citizenship.GetValue()<=2)
		{
			citizenship.opAssign(2);
			cr.Say((11),"Вы выдали постоянный гостевой пропуск.");
			cr.Say((6),"выдает пропуск");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,2,null,null);
		}
		else
		cr.Say((11),"У цели уже более высокий допуск в город.");
	}
	else if(answerI==3)
	{
		if(citizenship.GetValue()<=3)
		{
			if(citizenship.GetValue()<=2)
			citizenship.opAssign(2); 
			
			cr.Say((11),"Вы выдали временный пропуск в верхний город.");
			cr.Say((6),"выдает специальный пропуск");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,2,null,null);
		}
		else
		cr.Say((11),"У цели уже более высокий допуск в город.");
	}
	else if(answerI==4)
	{
		if((citizenship.GetValue()>0)&&(faction.GetValue()!=1)&&(faction.GetValue()!=2))
		{
			citizenship.opAssign(0);
			cr.Say((11),"Вы сняли допуск в город.");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,0,null,null);
		}
		else
		cr.Say((11),"Вы не можете снять допуск.");
	}
	else if(answerI==5)
	{
		if(citizenship.GetValue()<5&&(faction.GetValue()!=1)&&(faction.GetValue()!=2))
		{
			citizenship.opAssign(10);
			cr.Say((6),"ставит метку");
			cr.Say((11),"Вы поставили метку изгоя преступнику.");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,10,null,null);
		}
		else if(citizenship.GetValue()==10)
		{
			citizenship.opAssign(0);
			cr.Say((11),"Вы убрали метку изгоя.");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,10,null,null);
		}
		else
		cr.Say((11),"Вы не можете поставить или убрать метку.");
	}
	else if(answerI==6)
	{
		if(asked.Stat[(72)]<0||asked.IsKnockout())
		{
			cr.Say((11),"Вы транспортировали цель в камеру.");
			Map@map=GetMapByPid(10,0);
			if(not(@map!=null))
			{
				cr.Say((11),"Modoc entrance not found");
				return;
			}
			asked.TransitToMap(map.Id,0);
			asked.Say((11),"Вас выкинули из города.");
		}
		else
		cr.Say((11),"Цель не обездвижена.");
	}
	else if(answerI==7)
	{
		if(asked.Stat[(72)]<0||asked.IsKnockout())
		{
			cr.Say((11),"Вы транспортировали цель в камеру.");
			Map@map=GetMapByPid(10,0);
			if(not(@map!=null))
			{
				cr.Say((11),"Modoc entrance not found");
				return;
			}
			asked.TransitToMap(map.Id,0);
			asked.Say((11),"Вас выкинули из города.");
		}
		else
		cr.Say((11),"Цель не обездвижена.");
	}
	return;
} 

void _InitRegistrationDocs(Item&item,bool firstTime)
{
	item.SetEvent((2),"e_PassportUse");
} 

bool e_PassportUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	GameVar@citizenship=GetLocalVar((7300),cr.Id);
	GameVar@faction=GetLocalVar((9971),cr.Id);
	if(!(@onCritter!=null)&&!(@onItem!=null)&&!(@onScenery!=null))
	{
		cr.Say((6),"Показывает паспорт гражданина Модока");
		return true;
	}
	else if((citizenship.GetValue()<=2)||(citizenship.GetValue()==10))
	{
		cr.Say((11),"У вас нет полномочий");
		return true;
	}
	else if(cr.IsPlayer()&&onCritter.IsPlayer()&&(!IsNotHuman(cr))&&(!IsNotHuman(onCritter)))
	{
		GameVar@oncrit_citizenship=GetLocalVar((7300),onCritter.Id);
		cr.StatBase[(90)]=onCritter.Id;
		if(faction.GetValue()!=1)
		cr.ShowScreen((2),3,"answer_Passport");
		else
		cr.ShowScreen((2),10,"answer_Passport");
		cr.SayMsg((18),(3),107940);
		cr.SayMsg((19+(0)),(3),107941);
		cr.SayMsg((19+(1)),(3),107942);
		cr.SayMsg((19+(2)),(3),107943);
		if(faction.GetValue()==1)
		{
			cr.SayMsg((19+(3)),(3),107944);
			cr.SayMsg((19+(4)),(3),107945);
			cr.SayMsg((19+(5)),(3),107946);
			cr.SayMsg((19+(6)),(3),107947);
			if(citizenship.GetValue()!=10)
			cr.SayMsg((19+(7)),(3),107948);
			else
			cr.SayMsg((19+(7)),(3),107949);
			cr.SayMsg((19+(8)),(3),107950);
			cr.SayMsg((19+(9)),(3),107951);
		}
		return true;
	}
	else
	cr.Say((11),"это неуместно");
	return true;
}

uint ClosestNpcByDialog(Critter&player,int dialog)
{
	Map@map=player.GetMap();
	if((@map!=null))
	{
		Critter@[]npc;
		uint dist=10;
		uint id=0;
		if(map.GetCritters(0,(0x0F)|(0x20),npc)==0)
		{
			player.Say((11),"нет нужного человека");
		}
		else
		{
			for(uint i=0;i<npc.length();i++)
			{
				if(npc[i].Stat[(104)]==dialog)
				{
					if(GetDistantion(player.HexX,player.HexY,npc[i].HexX,npc[i].HexY)<dist)
					{
						dist=GetDistantion(player.HexX,player.HexY,npc[i].HexX,npc[i].HexY);
						id=npc[i].Id;
					}
				}
			}
			return id;
		}
	}
	return 0;
} 

void answer_Passport(Critter&cr,uint answerI,string&answerS)
{
	GameVar@myfaction=GetLocalVar((9971),cr.Id);
	Critter@asked=GetCritter(cr.Stat[(90)]);
	GameVar@citizenship=GetLocalVar((7300),asked.Id);
	GameVar@faction=GetLocalVar((9971),asked.Id);
	if(!(@asked!=null))
	return;
	
	uint guardId=ClosestNpcByDialog(cr,330);
	if(guardId==0)
	guardId=ClosestNpcByDialog(cr,352);
	Critter@guard=GetCritter(guardId);
	
	if(answerI==0)
	{
		if(citizenship.GetValue()==0)
		cr.Say((11),"Чужак.");
		else if(faction.GetValue()==1)
		cr.Say((11),"Администрация города Модока.");
		else if(faction.GetValue()==2)
		cr.Say((11),"Полицейский.");
		else if(citizenship.GetValue()==1)
		cr.Say((11),"Временный гость.");
		else if(citizenship.GetValue()==2)
		cr.Say((11),"Гость.");
		else if(citizenship.GetValue()==3)
		cr.Say((11),"Гражданин Модока.");
		else if(citizenship.GetValue()==4)
		cr.Say((11),"Привелигированный гражданин Модока.");
		else if(citizenship.GetValue()==10)
		cr.Say((11),"Метка изгоя, преступник.");
		else
		cr.Say((11),"ERROR, сообщите ГМу или администрации");
		if(asked.ParamBase[(800)]==0)
		cr.Say((11),"Еще никто не менял доступменял доступ.");
		else
		cr.Say((11),"Последним менял доступ житель с номером "+asked.ParamBase[(800)]+" в городском реестре");
	}
	else if(answerI==1)
	{
		if(!(@guard!=null)&&myfaction.GetValue()!=1)
		{
			cr.Say((11),"Поблизости нет гвардейцев гарнизона.");
			return;
		}
		else if(citizenship.GetValue()==0)
		{
			citizenship.opAssign(1);
			cr.Say((11),"Вы выдали временный гостевой пропуск.");
			cr.Say((6),"подает знак гвардейцу");
			guard.Say((1),"да - да, временный пропуск, понятно");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,1,null,null);
		}
		else
		cr.Say((11),"У цели уже более высокий допуск в город.");
	}
	else if(answerI==2)
	{
		if(!(@guard!=null)&&myfaction.GetValue()!=1)
		{
			cr.Say((11),"Поблизости нет гвардейцев гарнизона.");
			return;
		}
		else if(citizenship.GetValue()<=1)
		{
			citizenship.opAssign(2);
			cr.Say((11),"Вы выдали гостевой пропуск.");
			cr.Say((6),"подает знак гвардейцу");
			guard.Say((1),"хм, постоянный пропуск, хорошо, проходи");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,2,null,null);
		}
		else
		cr.Say((11),"У цели уже более высокий допуск в город.");
	}
	else if(answerI==3)
	{
		if(citizenship.GetValue()<=3)
		{
			if(citizenship.GetValue()<=2)
			citizenship.opAssign(2); 
			
			cr.Say((11),"Вы выдали специальный пропуск в верхний город.");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,2,null,null);
		}
		else
		cr.Say((11),"У цели уже более высокий допуск в город.");
	}
	else if(answerI==4)
	{
		if(citizenship.GetValue()<3)
		{
			citizenship.opAssign(3);
			cr.Say((11),"Вы выдали документы гражданина Модока.");
			cr.Say((6),"выдает документы");
			Item@pass=asked.AddItem((910),1);
			pass.Val1=asked.Id;
			asked.ParamBase[(800)]=cr.Id;
			cr.ShowScreen((5),0,"handcuffs@PassportLex");
			cr.Say((39),"Имя в документы");
			cr.StatBase[(93)]=pass.Id;
			Log_factions(cr,asked.Id,1,3,null,null);
		}
		else
		cr.Say((11),"У цели уже более высокий допуск в город.");
	}
	else if(answerI==5)
	{
		if(citizenship.GetValue()<4)
		{
			citizenship.opAssign(4);
			cr.Say((11),"Вы оформили документы привелигированного гражданина Модока.");
			cr.Say((6),"выдает документы");
			Item@pass=asked.AddItem((910),1);
			pass.Val1=asked.Id;
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,4,null,null);
		}
		else
		cr.Say((11),"У цели уже более высокий допуск в город.");
	}
	else if(answerI==6)
	{
		if((citizenship.GetValue()>0)&&(faction.GetValue()!=1)&&(faction.GetValue()!=2))
		{
			citizenship.opAssign(0);
			cr.Say((11),"Вы сняли допуск в город.");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,0,null,null);
		}
		else
		cr.Say((11),"Вы не можете снять допуск.");
	}
	else if(answerI==7)
	{
		if(citizenship.GetValue()<5&&(faction.GetValue()!=1)&&(faction.GetValue()!=2))
		{
			citizenship.opAssign(10);
			cr.Say((6),"ставит метку");
			cr.Say((11),"Вы поставили метку изгоя преступнику.");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,10,null,null);
		}
		else if(citizenship.GetValue()==10)
		{
			citizenship.opAssign(0);
			cr.Say((11),"Вы убрали метку изгоя.");
			asked.ParamBase[(800)]=cr.Id;
			Log_factions(cr,asked.Id,1,0,null,null);
		}
		else
		cr.Say((11),"Вы не можете поставить или убрать метку.");
	}
	else if(answerI==8)
	{
		if(asked.Stat[(72)]<0||asked.IsKnockout())
		{
			cr.Say((11),"Вы транспортировали цель в камеру.");
			Location@loc=GetLocationByPid(5,0);
			if(not(@loc!=null))
			{
				cr.Say((11),"Location not found");
				return;
			}
			Map@map=loc.GetMapByIndex(0);
			asked.TransitToMap(map.Id,0);
			asked.Say((11),"Вас выкинули из города.");
		}
		else
		cr.Say((11),"Цель не обездвижена.");
	}
	else if(answerI==9)
	{
		if(asked.Stat[(72)]<0||asked.IsKnockout())
		{
			cr.Say((11),"Вы выкинули цель из города.");
			Location@loc=GetLocationByPid(5,0);
			if(not(@loc!=null))
			{
				cr.Say((11),"Location not found");
				return;
			}
			Map@map=loc.GetMapByIndex(0);
			asked.TransitToMap(map.Id,0);
			asked.Say((11),"Вас выкинули из города.");
		}
		else
		cr.Say((11),"Цель не обездвижена.");
	}
	return;
}

void ToAskJoinPolice(Critter&crit,Critter@onCritter)
{
	string player;
	if(crit.IsPlayer())
	player=GetPlayerName(crit.Id);
	else
	player="Кто-то";
	onCritter.ShowScreen((2),1,"AnswerJoinPolice");
	onCritter.SayMsg((18),(3),12938,"$player"+player);
	onCritter.SayMsg((19+(0)),(3),12709);
}

void AnswerJoinPolice(Critter&cr,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		cr.Say((11),"Вы вступили в ряды полиции Модока, гордитесь.");
		cr.Say((6),"Принимает значек");
		cr.KarmaBase[(497)]=1;
		Item@badge=cr.AddItem((1454),1);
		badge.Val1=cr.Id;
		GameVar@citizenship=GetLocalVar((7300),cr.Id);
		GameVar@faction=GetLocalVar((9971),cr.Id);
		citizenship.opAssign(4);
		faction.opAssign(2);
		RestartFactions(cr,0,0,0);
		cr.ShowScreen((5),0,"handcuffs@BadgeLex");
		cr.Say((39),"Имя на значек");
		cr.StatBase[(93)]=badge.Id;
		Log_factions(cr,cr.Id,2,2,null,null);
	}
}

void BadgeLex(Critter&player,uint answerI,string&answerS)
{
	if(answerS.length()!=0)
	{
		Item@item=GetItem(player.StatBase[(93)]);
		item.SetLexems(""+answerS);
		player.Say((11),"На значке выбито имя: "+answerS);
		item.Update();
	}
}

void PassportLex(Critter&player,uint answerI,string&answerS)
{
	if(answerS.length()!=0)
	{
		Item@item=GetItem(player.StatBase[(93)]);
		item.SetLexems(""+answerS);
		item.SetLexems("$ModocRegistrationName"+answerS);
		player.Say((11),"Документ заполнен на имя: "+answerS);
		item.Update();
	}
} 

void GivePass(Critter&cr)
{
	Critter@Police=GetCritter(papik);
	Item@item=GetItem(Police.StatBase[(90)]);
	if(Police.Karma[(497)]==1)
	cr.PerkBase[(417)]=2;
	else if(Police.Karma[(497)]>=2)
	{
		if(item.Val1==0)
		{
			cr.PerkBase[(417)]=3;
			Police.Say((11),"Вы выдали постоянный пропуск.");
		}
		else
		{
			cr.PerkBase[(417)]=2;
			Police.Say((11),"Вы выдали временный пропуск.");
		}
	}
	Police.StatBase[(105)]+=1;
	cr.StatBase[(105)]=papik;
	Police.Say((11),"Вы выдали пропуск.");
	Police.Say((6),"выдает пропуск");
	cr.TimeoutBase[(234)]=__FullSecond+((2)*__TimeMultiplier*3600);
}

void _InitExileItem(Item&item,bool firstTime)
{
	item.SetEvent((2),"e_ExileUse");
}

bool e_ExileUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	if(!(@onCritter!=null)&&!(@onItem!=null)&&!(@onScenery!=null))
	return false;
	
	if(!(@onItem!=null)&&!(@onScenery!=null))
	{
		if(cr.IsPlayer()&&onCritter.IsPlayer()&&cr.Karma[(495)]>=2&&(!IsNotHuman(cr))&&(!IsNotHuman(onCritter)))
		{
			ToAskJoinExile(item,cr,onCritter);
			return true;
		}
	}
	if((@onItem!=null)&&!(@onCritter!=null)&&!(@onScenery!=null))
	{
		Map@map=cr.GetMap();
		if((@map!=null)&&(map.GetProtoId()==102||map.GetProtoId()==100)&&cr.Karma[(495)]>=2&&(((onItem.LockerCondition)&((0x20)))!=0)&&(onItem.GetType()==(9)||onItem.GetType()==(8)))
		{
			cr.ShowScreen((5),0,"handcuffs@ElectroDoorUseScreen");
			cr.StatBase[(90)]=onItem.Id;
			return true;
		}
	}
	else
	cr.Say((11),"это неуместно");
	return true;
}

import void setcodedoor(Critter&cr,int p0,int p1,int p3)from"debug";

void ElectroDoorUseScreen(Critter&player,uint answerI,string&answerS)
{
	Item@item=GetItem(player.StatBase[(90)]);
	if(answerS.length()>0)
	{
		int number=0;
		StrToInt(answerS,number);
		item.Val1=number;
		if(number>9999||number<1000)
		return;
		setcodedoor(player,player.StatBase[(90)],4,number);
	}
} 

void ToAskJoinExile(Item&item,Critter&crit,Critter@onCritter)
{
	string player;
	if(crit.IsPlayer())
	player=GetPlayerName(crit.Id);
	else
	player="Кто-то";
	
	papik=crit.Id;
	onCritter.ShowScreen((2),1,"AnswerJoinExile");
	onCritter.SayMsg((18),(3),12939,"$player"+player);
	onCritter.SayMsg((19+(0)),(3),12709);
}

void AnswerJoinExile(Critter&cr,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		cr.KarmaBase[(495)]=1;
		cr.Say((6),"принимает знак");
		cr.Say((11),"Вы примкнули к изгоям, отныне дорога в Модок для вас закрыта.");
		GameVar@faction=GetLocalVar((9971),cr.Id);
		faction.opAssign(5);
		RestartFactions(cr,0,0,0);
	}
}

void _InitEnslaveItem(Item&item,bool firstTime)
{
	item.SetEvent((2),"e_EnslaveUse");
}

bool e_EnslaveUse(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	bool onSelf=(!(@onCritter!=null)&&!(@onItem!=null)&&!(@onScenery!=null));
	if(onSelf&&(!IsNotHuman(cr)))
	{
		brass=item.Id;
		papik=cr.Id;
		Enslave(cr,cr);
		return true;
	}
	if(cr.IsPlayer()&&onCritter.IsPlayer()&&(!IsNotHuman(cr))&&(!IsNotHuman(onCritter)))
	{
		if(cr.Karma[(489)]==0)
		{
			cr.Say((11),"Вы не умеете обращаться с ошейником");
			return true;
		}
		else if(onCritter.Stat[(72)]<0||onCritter.IsKnockout())
		{
			brass=item.Id;
			papik=onCritter.Id;
			Enslave(cr,onCritter);
		}
		else
		ToAskEnslave(item,cr,onCritter);
		return true;
	}
	else
	cr.Say((11),"Это неуместно");
	return true;
}

void ToAskEnslave(Item&item,Critter&crit,Critter@onCritter)
{
	string player;
	if(crit.IsPlayer())
	player=GetPlayerName(crit.Id);
	else
	player="Кто-то";
	
	papik=crit.Id;
	brass=item.Id;
	onCritter.ShowScreen((2),1,"AnswerEnslave");
	onCritter.SayMsg((18),(3),12958,"$player"+player);
	onCritter.SayMsg((19+(0)),(3),12956);
}

void AnswerEnslave(Critter&cr,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		Enslave(GetCritter(papik),cr);
	}
}

void Enslave(Critter&cr,Critter@onCritter)
{
	Item@Precollar=GetItem(brass);
	
	Item@[]items;
	Item@[]items0;
	
	uint itemscount=onCritter.GetItems((1),items);
	uint itemscount0=onCritter.GetItems((2),items0);
	if(itemscount>0)
	{
		onCritter.MoveItem(items[0].Id,itemscount,(0));
	}
	if(itemscount0>0)
	{
		onCritter.MoveItem(items0[0].Id,itemscount0,(0));
	}
	Item@collar=onCritter.AddItem((1537),1);
	Item@collarswitch=cr.AddItem((1538),1);
	onCritter.MoveItem(collar.Id,1,(2));
	cr.Say((6),"Одевает ошейник на раба");
	cr.Say((11),"Вы одели ошейник на раба.");
	onCritter.Say((11),"На вас одели ошейник.");
	collarswitch.Val1=collar.Id;
	collarswitch.Val2=onCritter.Id;
	DeleteItem(Precollar);
}

void _InitUsedCollar(Item&item,bool firstTime)
{
	item.SetEvent((6),"_hellno2");
	item.SetEvent((5),"_hellno4");
	item.SetEvent((4),"e_used_collar_delete");
}

bool e_used_collar_delete(Item&item,Critter&cr,int skill)
{
	if((skill==(-1))&&(item.Accessory==(2)))
	DeleteItem(item);
	return true;
}

void _InitCollarSwitch(Item&item,bool firstTime)
{
	item.SetEvent((2),"e_shock");
	item.SetEvent((4),"e_collarunlock");
}

bool e_shock(Item&item,Critter&cr,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	Critter@Slave=GetCritter(item.Val2);
	Item@collar=GetItem(item.Val1);
	if((@Slave!=null))
	{
		if(!(@collar!=null))
		{
			Item@collar_new=Slave.AddItem((1537),1);
			item.Val1=collar_new.Id;
			cr.Say((11),"Раб пытался снять ошейник.");
		}
		cr.Say((11),"Вы наказали раба.");
		Slave.Say((11),"Шею обожгло огнем, все тело сотрясают судороги.");
		Slave.Say((6),"Корчится в агонии");
		Slave.StatBase[(72)]-=(Slave.Stat[(72)]/100)+1;
		Slave.ToKnockout(((true)?(82):(83)),((true)?(86):(87)),((true)?(88):(89)),100,Slave.HexX,Slave.HexY);
		return true;
	}
	return false;
}

bool e_collarunlock(Item&item,Critter&cr,int skill)
{
	Critter@Slave=GetCritter(item.Val2);
	Item@collar=GetItem(item.Val1);
	if(skill==(212))
	{
		cr.ShowScreen((5),0,"handcuffs@CollarNameScreen");
		cr.StatBase[(90)]=item.Id;
		return true;
	}
	else if(skill==(206))
	{
		if((@Slave!=null))
		{
			if(!(@collar!=null))
			{
				Item@collar_new=Slave.AddItem((1537),1);
				item.Val1=collar_new.Id;
				cr.Say((11),"Раб пытался снять ошейник.");
			}
			cr.Say((11),"Вы наказали раба.");
			Slave.Say((11),"Шею обожгло огнем, все тело сотрясают судороги.");
			Slave.Say((6),"Корчится в агонии");
			Slave.StatBase[(72)]-=Random(1,4);
			Slave.ToKnockout(((true)?(82):(83)),((true)?(86):(87)),((true)?(88):(89)),10,Slave.HexX,Slave.HexY);
			return true;
		}
		else
		cr.Say((11),"Ответный сигнал слишком слабый.");
		return true;
	}
	else if(skill==(207))
	{
		if((@Slave!=null))
		{
			if(!(@collar!=null))
			{
				Item@collar_new=Slave.AddItem((1537),1);
				item.Val1=collar_new.Id;
				cr.Say((11),"Раб пытался снять ошейник.");
			}
			cr.Say((11),"Ошейник раба отзывается.");
			Slave.Say((11),"Ошейник колется.");
			return true;
		}
		else
		cr.Say((11),"Ответный сигнал слишком слабый.");
		return true;
	}
	else if(skill==(213))
	{
		if((@Slave!=null))
		{
			DeleteItem(item);
			if((@collar!=null))
			DeleteItem(collar);
			cr.Say((11),"Вы казнили раба");
			Slave.Say((11),"Боль как от сотни расскаленных игл пронзила вас.");
			Slave.ToDead((113),cr);
		}
		else
		cr.Say((11),"Ответный сигнал слишком слабый.");
		return true;
	}
	if(skill==(211))
	{
		if((@Slave!=null))
		{
			DeleteItem(item);
			if((@collar!=null))
			DeleteItem(collar);
			cr.Say((11),"Вы освободили раба");
			Slave.Say((11),"Ошейник расстегнулся");
		}
		else
		cr.Say((11),"Ответный сигнал слишком слабый.");
		return true;
	}
	return false;
}

void CollarNameScreen(Critter&player,uint answerI,string&answerS)
{
	if(answerS.length()!=0)
	{
		Item@item=GetItem(player.StatBase[(90)]);
		item.SetLexems(""+answerS);
		item.Update();
	}
}

void brahminTie(Item&item,Critter&cr,Critter&brahmin){
	if(item.GetProtoId()==(127)&&brahmin.StatBase[(81)]==0){
		brahmin.StatBase[(81)]=cr.Id;
		brahmin.ModeBase[(517)]=1;
		brahmin.AddTimeEvent("cte_brahmin_follow",0,(64),0);
		cr.Say((11),"Вы привязали брамина.");
		
	}else if(brahmin.StatBase[(81)]==cr.Id){
		brahmin.ModeBase[(517)]=0;
		brahmin.SetHomePos(brahmin.HexX,brahmin.HexY,brahmin.Dir);
		brahmin.StatBase[(81)]=0;
		brahmin.EraseTimeEvents((64));
		cr.Say((11),"Вы отпустили брамина.");
	}
}

uint cte_brahmin_follow(Critter&cr,int identifier,uint&rate){
	int masterId=cr.Stat[(81)];
	if(masterId>0){
		Critter@master=GetCritter(masterId);
		if(master is null){
			cr.ModeBase[(517)]=0;
			cr.SetHomePos(cr.HexX,cr.HexY,cr.Dir);
			cr.StatBase[(81)]=0;
			return 0;
		}
		Map@myMap=cr.GetMap();
		Map@masterMap=master.GetMap();
		if(myMap.Id==masterMap.Id){
			AddWalkPlane(cr,0,master.HexX,master.HexY,GetDirection(cr.HexX,cr.HexY,master.HexX,master.HexY),false,1);
		}else{
			cr.TransitToMap(masterMap.Id,master.HexX,master.HexY,Random(0,5));
			cr.ErasePlane((2),true);
		}
	}
	return 2*__TimeMultiplier;
}
