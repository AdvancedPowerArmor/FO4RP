                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

bool hashes_inited=false;

uint[][]hashes_sand((8));

void init_hashes()
{
	string dir="art/tiles/",
	edg="edg",
	frm=".frm";
	
	for(uint type=0;type<(8);type++)
	{
		uint[]@data=hashes_sand[type];
		data.resize(0);
		uint i=0;
		
		switch(type)
		{
			case(0):
			{
				for(i=0;i<=4;i++)
				data.insertLast(GetStrHash(dir+"edgs00"+i+frm));
			}break;
			case(1):
			{
				for(i=1000;i<=1003;i++)
				data.insertLast(GetStrHash(dir+edg+i+frm));
			}break;
			case(2):
			{
				for(i=2000;i<=2003;i++)
				data.insertLast(GetStrHash(dir+edg+i+frm));
			}break;
			case(3):
			{
				for(i=3000;i<=3001;i++)
				data.insertLast(GetStrHash(dir+edg+i+frm));
			}break;
			case(4):
			{
				for(i=4000;i<=4008;i++)
				data.insertLast(GetStrHash(dir+edg+i+frm));
			}break;
			case(5):
			{
				for(i=5000;i<=5008;i++)
				data.insertLast(GetStrHash(dir+edg+i+frm));
			}break;
			case(6):
			{
				for(i=6000;i<=6011;i++)
				data.insertLast(GetStrHash(dir+edg+i+frm));
			}break;
			case(7):
			{
				for(i=7000;i<=7003;i++)
				data.insertLast(GetStrHash(dir+edg+i+frm));
			}break;
		}
	}
	
	hashes_inited=true;
}

uint[][]@GetSandHashes()
{
	if(!hashes_inited)
	init_hashes();
	
	return hashes_sand;
}                                                                                                               

