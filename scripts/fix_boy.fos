#define FIX_SUCCESS    ( FIXBOY_DEFAULT )
#define FIX_TIMEOUT    ( FIXBOY_DEFAULT ^ FIXBOY_SET_TIMEOUT )
#define FIX_FAIL       ( FIXBOY_DEFAULT ^ FIXBOY_ALLOW_CRAFT )


#include "_macros.fos"

int fix_Tribal( Critter& cr, int state, CraftItem& craft )
{
    if( state == FIXBOY_CRAFT ) 
	{
		if( cr.TimeoutBase[ TO_TIREDNESS ] <= __FullSecond + REAL_SECOND( 60 ) )
		{
			if( cr.TimeoutBase[ TO_TIREDNESS ] < __FullSecond )
				cr.TimeoutBase[ TO_TIREDNESS ] = __FullSecond;
			cr.TimeoutBase[ TO_TIREDNESS ] += REAL_SECOND( 10 );
		}
		else
		{
			int time = ( cr.TimeoutBase[ TO_TIREDNESS ] - __FullSecond ) / __TimeMultiplier;
			cr.Say( SAY_NETMSG, "Вы слишком устали, подождите ещё " + time + " секунд. Предельная усталость: 60 секунд" );
			return FIX_FAIL; 
		}
		
		cr.Say( SAY_EMOTE_ON_HEAD, "Что-то мастерит" );
		cr.StatBase[ST_EXPERIENCE] += 20;
		return FIX_TIMEOUT; 
	}
    return FIXBOY_DEFAULT; 
}

int fix_Ozher( Critter& cr, int state, CraftItem& craft )
{
    if( state == FIXBOY_CRAFT ) 
	{
		cr.Say( SAY_EMOTE_ON_HEAD, "Что-то мастерит" );
		uint count = cr.CountItem( PID_KLK );
		cr.DeleteItem( PID_KLK, count );
		cr.StatBase[ST_EXPERIENCE] += 100 * count;
		cr.Say( SAY_NETMSG, "Вы использовали все имеющиеся клыки." );
		//TODO: 
		//necklace.SetLexems( "$klik" + count );
		//necklace.Info += 1;
		return FIX_TIMEOUT; 
	}
    return FIXBOY_DEFAULT; 
}

int fix_Workbench( Critter& cr, int state, CraftItem& craft )
{
    if( state == FIXBOY_CRAFT ) 
	{
		cr.Say( SAY_EMOTE_ON_HEAD, "Что-то делает" );
		cr.StatBase[ST_EXPERIENCE] += 250;
		return FIX_TIMEOUT; 
	}
    return FIXBOY_DEFAULT; 
}

int fix_FreeHands( Critter& cr, int state, CraftItem& craft )
{
    if( state == FIXBOY_CRAFT ) 
	{
		cr.Say( SAY_EMOTE_ON_HEAD, "Что-то делает" );
		cr.StatBase[ST_EXPERIENCE] += 100;
		return FIX_TIMEOUT; 
	}
    return FIXBOY_DEFAULT; 
}

int fix_LowTier( Critter& cr, int state, CraftItem& craft )
{
    if( state == FIXBOY_CRAFT ) 
	{
		cr.StatBase[ST_EXPERIENCE] += 500;
		cr.TimeoutBase[ TO_SK_REPAIR ] = __FullSecond + REAL_SECOND( 10 );
		return FIX_TIMEOUT; 
	}
    return FIXBOY_DEFAULT; 
}

int fix_MidTier( Critter& cr, int state, CraftItem& craft )
{
    if( state == FIXBOY_CRAFT ) 
	{
		cr.StatBase[ST_EXPERIENCE] += 1000;
		cr.TimeoutBase[ TO_SK_REPAIR ] = __FullSecond + REAL_SECOND( 60 );
		return FIX_TIMEOUT; 
	}
    return FIXBOY_DEFAULT; 
}

int fix_HiTier( Critter& cr, int state, CraftItem& craft )
{
    if( state == FIXBOY_CRAFT ) 
	{
		cr.StatBase[ST_EXPERIENCE] += 5000;
		cr.TimeoutBase[ TO_SK_REPAIR ] = __FullSecond + REAL_SECOND( 180 );
		return FIX_TIMEOUT; 
	}
    return FIXBOY_DEFAULT; 
}