

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

void AffectPoison(Critter&cr,int value)
{
	int body=cr.Stat[(67)];
	
	if(body==(6)||body==(8)||body==(9)||body==(16)||body==(10))
	{
		if(cr.IsPlayer())
		cr.SayMsg((11),(3),12814);
		return;
	}
	
	if(cr.IsDead())
	return;
	uint[]indexes;
	uint[]durations;
	bool isActive=cr.GetTimeEvents((1),indexes,durations,null)!=0;
	int levelVal=cr.Stat[(73)];
	int resistVal=cr.Stat[(31)];
	
	if(value>0)
	value-=value*resistVal/100;
	else if(levelVal==0)
	return;
	cr.StatBase[(73)]=(((levelVal+value)>(2000))?(2000):(((levelVal+value)<(0))?(0):(levelVal+value)));
	levelVal=cr.Stat[(73)];
	
	uint strNum=0;
	if(levelVal==0)
	strNum=(12813);
	else if(value>0)
	strNum=(12810);
	else if(value<0)
	strNum=(12812);
	if(strNum!=0)
	cr.SayMsg((11),(3),strNum);
	
	if(levelVal>0)
	{
		if(cr.Damage[(500)]==0)
		cr.DamageBase[(500)]=1;
		
		if(levelVal>100)
		{
			int hp=levelVal-100;
			if(cr.StatBase[(72)]>=5)
			{
				cr.StatBase[(72)]-=hp;
			}
			cr.StatBase[(73)]=100;
		}
	}
	else
	{
		if(cr.Damage[(500)]!=0)
		cr.DamageBase[(500)]=0;
	}
	
	if(isActive)
	{
		if(levelVal==0)
		{
			cr.EraseTimeEvents((1));
		}
		else
		{
			uint oldDuration=durations[0];
			uint newDuration=GetPoisonDuration(cr);
			if(newDuration<oldDuration)
			cr.ChangeTimeEvent(indexes[0],newDuration,0);
		}
	}
	else
	{
		cr.AddTimeEvent("cte_Poison",GetPoisonDuration(cr),(1));
	}
}

void DropPoison(Critter&cr)
{
	cr.EraseTimeEvents((1));
	cr.StatBase[(73)]=0;
	if(cr.Damage[(500)]!=0)
	cr.DamageBase[(500)]=0;
}

uint cte_Poison(Critter&cr,int identifier,uint&rate)
{
	if(cr.IsDead())
	return 100;
	
	int levelVal=cr.Stat[(73)];
	if(levelVal>0)
	{
		cr.SayMsg((11),(3),(12811));
		cr.StatBase[(73)]=(((levelVal-2)>(2000))?(2000):(((levelVal-2)<(0))?(0):(levelVal-2)));
		cr.StatBase[(72)]--;
		if(cr.Stat[(72)]<=0)
		cr.ToDead(Random(0,1)==0?(102):(103),null);
	}
	
	if(cr.Stat[(73)]==0)
	{
		cr.SayMsg((11),(3),(12813));
		if(cr.Damage[(500)]!=0)
		cr.DamageBase[(500)]=0;
		return 0;
	}
	
	return GetPoisonDuration(cr);
}

uint GetPoisonDuration(Critter&cr)
{
	int duration=(((505)*__TimeMultiplier));
	int levelVal=cr.Stat[(73)];
	if(levelVal==0)
	return 0;
	duration-=levelVal*(((5)*__TimeMultiplier));
	if(duration<=0)
	duration=((1)*__TimeMultiplier);
	return duration;
} 

void AffectPoisonByCritter(Critter&cr,int value,Critter&atacker)
{
	int body=cr.Stat[(67)];
	
	if(body==(6)||body==(8)||body==(9)||body==(16))
	{
		if(cr.IsPlayer())
		cr.SayMsg((11),(3),12814);
		return;
	}
	
	if(cr.IsDead())
	return;
	
	uint[]indexes;
	uint[]durations;
	bool isActive=cr.GetTimeEvents((1),indexes,durations,null)!=0;
	int levelVal=cr.Stat[(73)];
	int resistVal=cr.Stat[(31)];
	
	if(value>0)
	value-=value*resistVal/100;
	else if(levelVal==0)
	return;
	cr.StatBase[(73)]=(((levelVal+value)>(2000))?(2000):(((levelVal+value)<(0))?(0):(levelVal+value)));
	levelVal=cr.Stat[(73)];
	
	uint strNum=0;
	if(levelVal==0)
	strNum=(12813);
	else if(value>0)
	strNum=(12810);
	else if(value<0)
	strNum=(12812);
	if(strNum!=0)
	cr.SayMsg((11),(3),strNum);
	
	if(levelVal>0)
	{
		if(cr.Damage[(500)]==0)
		cr.DamageBase[(500)]=1;
		
		if(levelVal>100)
		{
			int hp=(levelVal-100)/2;
			cr.StatBase[(72)]-=hp;
			if(cr.Stat[(72)]<=0)
			{
				cr.ToDead(Random(0,1)==0?(102):(103),null);
				if((@atacker!=null)&&cr.IsNpc())
				atacker.ParamBase[(76)]+=cr.Param[(66)];
			}
			cr.StatBase[(73)]=100;
		}
	}
	else
	{
		if(cr.Damage[(500)]!=0)
		cr.DamageBase[(500)]=0;
	}
	
	if(isActive)
	{
		if(levelVal==0)
		{
			cr.EraseTimeEvents((2));
		}
		else
		{
			uint oldDuration=durations[0];
			uint newDuration=GetPoisonDuration(cr);
			if(newDuration<oldDuration)
			cr.ChangeTimeEvent(indexes[0],newDuration,0);
		}
	}
	else
	{
		cr.AddTimeEvent("cte_Poison_By_Cr",GetPoisonDuration(cr),(2),atacker.Id);
	}
} 

uint cte_Poison_By_Cr(Critter&cr,int identifier,uint&rate)
{
	Critter@attacker=GetCritter(rate);
	if(cr.IsDead())
	return 100;
	
	int levelVal=cr.Stat[(73)];
	if(levelVal>0)
	{
		cr.SayMsg((11),(3),(12811));
		cr.StatBase[(73)]=(((levelVal-2)>(2000))?(2000):(((levelVal-2)<(0))?(0):(levelVal-2)));
		int damageCount=levelVal/6;
		if((@attacker!=null)&&damageCount>0&&attacker.Param[(703)]==(3)&&cr.Param[(703)]!=(3))
		attacker.ParamBase[(76)]+=damageCount*5;
		if(damageCount>0)
		cr.StatBase[(72)]-=damageCount;
		if(cr.Stat[(72)]<=-30)
		{
			cr.ToDead(Random(0,1)==0?(102):(103),null);
			if((@attacker!=null)&&cr.IsNpc())
			attacker.ParamBase[(76)]+=cr.Param[(66)];
			return 0;
		}
	}
	
	if(cr.Stat[(73)]==0)
	{
		cr.SayMsg((11),(3),(12813));
		if(cr.Damage[(500)]!=0)
		cr.DamageBase[(500)]=0;
		return 0;
	}
	return 0;
}                                                                                                

