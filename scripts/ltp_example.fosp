

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

funcdef uint PROCESS(Critter@,int&,int&,int&);                  

import bool RegisterProcess(uint8 type,any func)from"ltp";

import bool StartProcess(Critter&cr,uint8 type,int param0,int param1,int param2,uint time)from"ltp";
import bool StartProcess(Critter&cr,uint8 type,int param0,uint time)from"ltp";
import bool StartProcess(Critter&cr,uint8 type,uint time)from"ltp";

import bool StopProcess(Critter&cr)from"ltp";

import bool checkTDH(Critter&cr)from"ltp";
import bool checkTDH(Critter&cr,uint8 type)from"ltp";             

void ltp_init()
{
	
	PROCESS@___pfunc=@process_test;any ___pany;___pany.store(@___pfunc);RegisterProcess((0),___pany); 
	
} 

void procReg(Critter&player,int var,int con,int param2)
{
	ltp_init();
} 

void procStart(Critter&cr,int type,int time,int param)
{
	
	StartProcess(cr,uint8(type),param,uint(time));
} 

void procStop(Critter&cr,int type,int time,int param)
{
	StopProcess(cr);
}

uint process_test(Critter@cr,int&param0,int&param1,int&param2)
{
	
	if(param0==-1&&(cr is null)){param0=int((0));return(0xF035BCF3);}    
	
	cr.Say((5),"нкнкн ъ еас цсяеи"); 
	
	param0+=1; 
	
	if(param0>10)
	{
		param0=0;
		return 0;
	} 
	
	return Random(2000,5000);
}
