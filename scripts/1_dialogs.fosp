                                           

string@GetDateString()
{     
	
	return(__Year+"_"+__Month+"_"+__Day);
}

string@GetDateString(int delta)
{
	uint16 year=0,month=0,day_of_week=0,day=0,hour=0,minute=0,second=0;
	
	GetGameTime(__FullSecond+delta,year,month,day,day_of_week,hour,minute,second);
	
	return(year+"_"+month+"_"+day);
}                 

shared interface iManagerModule{
	bool manager_init();
}
shared interface iManager_loop{
	uint global_loop();
}
shared interface iManager_critter_init{
	bool global_critter_init(Critter&cr,bool firstTime);
}
shared interface iManager_critter_finish{
	bool global_critter_finish(Critter&cr,bool toDelete);
}
shared interface iManager_critter_idle{
	bool global_critter_idle(Critter&cr);
}
shared interface iManager_critter_dead{
	bool global_critter_dead(Critter&cr,Critter@killer);
}
shared interface iManager_critter_respawn{
	bool global_critter_respawn(Critter&cr);
}
shared interface iManager_map_critter_in{
	bool global_map_critter_in(Map&map,Critter&cr);
}
shared interface iManager_map_critter_out{
	bool global_map_critter_out(Map&map,Critter&cr);
}
shared interface iManager_world_save{
	bool global_world_save();
}
shared interface iManager_player_registration{
	bool global_player_registration(uint ip,string&name,uint&textMsg,uint&strNum);
}
shared interface iManager_player_login{
	bool global_player_login(uint ip,string&name,uint id,uint&textMsg,uint&strNum);
}
shared interface iManager_time{
	bool global_time(int8 type);
}
shared interface iManagerElement
{
	iManagerModule@GetLink();
	uint GetId();
	string&GetName();
	uint&GetEventFlags();
	int8&GetTimeChangeCall();
	uint8 GetPriority();
}                     

import iManagerElement@manager_add_module(iManagerModule@link,string&name,uint8 priority)from"manager

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

void npc_knock_100(Critter&cr,Critter@target){
	target.ToKnockout((((Random(0,1)==1?true:false))?(82):(83)),(((Random(0,1)==1?true:false))?(86):(87)),(((Random(0,1)==1?true:false))?(88):(89)),100,target.HexX,target.HexY);
}

void player_knock_100(Critter&cr,Critter@target){
	cr.ToKnockout((((Random(0,1)==1?true:false))?(82):(83)),(((Random(0,1)==1?true:false))?(86):(87)),(((Random(0,1)==1?true:false))?(88):(89)),100,cr.HexX,cr.HexY);
}

void dead_1(Critter&cr,Critter@target){
	target.ToDead((110),null);
}

void player_roll(Critter&cr,Critter@target){
	cr.ParamBase[(196)]=Random(1,100);
	cr.Say((11),"ролл игрока: "+cr.ParamBase[(196)]);
}

void npc_roll(Critter&cr,Critter@target){
	target.ParamBase[(196)]=Random(1,100);
	cr.Say((11),"ролл нпц: "+target.ParamBase[(196)]);
}

void npc_inv(Critter&cr,Critter@target){
	cr.ShowContainer(target,null,(8));
}            

