

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

import int NextLevelNeedExp(Critter&cr)from"parameters";  

bool PerkCheck(Critter&cr,uint perk)
{     
	
	switch(perk)
	{
		
		case(343):
		return(cr.ParamBase[(343)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(4)]>=4);
		case(301):
		return(cr.ParamBase[(301)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(1)]>=5);
		case(430):
		return(cr.ParamBase[(430)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(217)]>=50);
		case(302):
		return(cr.ParamBase[(302)]<1&&cr.ParamBase[(77)]>=15&&cr.ParamBase[(5)]>=6);
		case(303):
		return(cr.ParamBase[(303)]<2&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(5)]>=6&&cr.ParamBase[(0)]>=5);
		case(304):
		return(cr.ParamBase[(304)]<0&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(5)]>=5);
		case(305):
		return(cr.ParamBase[(305)]<0&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(5)]>=6&&cr.ParamBase[(6)]>=6);
		case(306):
		return(cr.ParamBase[(306)]<1&&cr.ParamBase[(77)]>=15&&cr.ParamBase[(5)]>=7&&cr.ParamBase[(4)]>=6&&cr.ParamBase[(1)]>=6);
		case(307):
		return(cr.ParamBase[(307)]<0&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(1)]>=6);
		case(308):
		return(cr.ParamBase[(308)]<3&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(2)]>=6);
		case(309):
		return(cr.ParamBase[(309)]<2&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(6)]>=6);
		case(312):
		return(cr.ParamBase[(312)]<2&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(2)]>=6&&cr.ParamBase[(4)]>=4);
		case(313):
		return(cr.ParamBase[(313)]<2&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(2)]>=6&&cr.ParamBase[(6)]>=6);
		case(314):
		return(cr.ParamBase[(314)]<3&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(0)]>=6&&cr.ParamBase[(2)]>=6);
		case(315):
		return(cr.ParamBase[(315)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(1)]>=7&&cr.ParamBase[(4)]>=5);
		case(316):
		return(cr.ParamBase[(316)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(5)]>=6&&cr.ParamBase[(208)]>=50);
		case(317):
		return(cr.ParamBase[(317)]<3&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(2)]>=5&&cr.ParamBase[(4)]>=5&&cr.ParamBase[(217)]>=30);
		case(318):
		return(cr.ParamBase[(318)]<0&&cr.ParamBase[(77)]>=9&&cr.ParamBase[(3)]>=7&&cr.ParamBase[(215)]>=60);
		case(319):
		return(cr.ParamBase[(319)]<3&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(4)]>=6);
		case(320):
		return(cr.ParamBase[(320)]<2&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(1)]>=7&&cr.ParamBase[(5)]>=6&&cr.ParamBase[(4)]>=5&&cr.ParamBase[(206)]>=40);
		case(322):
		return(cr.ParamBase[(322)]<0&&cr.ParamBase[(77)]>=9&&cr.ParamBase[(1)]>=6&&cr.ParamBase[(6)]>=6&&cr.ParamBase[(5)]>=4);
		case(324):
		return(cr.ParamBase[(324)]<1&&cr.ParamBase[(77)]>=24&&cr.ParamBase[(5)]>=8&&cr.ParamBase[(0)]>=8&&cr.ParamBase[(203)]>=80&&cr.ParamBase[(325)]==0&&cr.ParamBase[(420)]==0);
		case(325):
		return(cr.ParamBase[(325)]<1&&cr.ParamBase[(77)]>=24&&cr.ParamBase[(5)]>=8&&cr.ParamBase[(1)]>=8&&cr.ParamBase[(200)]>=80&&cr.ParamBase[(324)]==0&&cr.ParamBase[(420)]==0);
		case(326):
		return(cr.ParamBase[(326)]<1&&cr.ParamBase[(77)]>=18&&cr.ParamBase[(5)]>=10&&cr.ParamBase[(208)]>=80&&cr.ParamBase[(203)]>=80);
		case(327):
		return(cr.ParamBase[(327)]<1&&cr.ParamBase[(77)]>=9&&cr.ParamBase[(5)]>=6);
		case(329):
		return(cr.ParamBase[(329)]<1&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(2)]>=4);
		case(330):
		return(cr.ParamBase[(330)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(5)]>=6);
		case(331):
		return(cr.ParamBase[(331)]<2&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(2)]>=3);
		case(332):
		return(cr.ParamBase[(332)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(213)]>=40&&cr.ParamBase[(212)]>=20);
		case(333):
		return(cr.ParamBase[(333)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(206)]>=40&&cr.ParamBase[(207)]>=40);
		case(334):
		return(cr.ParamBase[(334)]<0&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(210)]>=50&&cr.ParamBase[(209)]>=50);
		case(335):
		return(cr.ParamBase[(335)]<1&&cr.ParamBase[(77)]>=9&&cr.ParamBase[(214)]>=50);
		case(336):
		return(cr.ParamBase[(336)]<3&&cr.ParamBase[(77)]>=6);
		case(338):
		return(cr.ParamBase[(338)]<0&&cr.ParamBase[(77)]>=15&&cr.ParamBase[(5)]>=8&&cr.ParamBase[(210)]>=80);
		case(339):
		return(cr.ParamBase[(339)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(208)]>=60);
		case(342):
		return(cr.ParamBase[(342)]<1&&cr.ParamBase[(77)]>=9);
		case(344):
		return(cr.ParamBase[(344)]<2&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(2)]>=5&&cr.ParamBase[(217)]>=40);
		case(346):
		return(cr.ParamBase[(346)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(1)]>=7);
		case(348):
		return(cr.ParamBase[(348)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(1)]>=6);
		case(349):
		return(cr.ParamBase[(349)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(5)]>=5);
		case(350):
		return(cr.ParamBase[(350)]<3&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(4)]>=4);
		case(351):
		return(cr.ParamBase[(351)]<3&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(4)]>=4);
		case(380):
		return(cr.ParamBase[(380)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(0)]<10);
		case(381):
		return(cr.ParamBase[(381)]<0&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(1)]>=6);
		case(382):
		return(cr.ParamBase[(382)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(4)]>=6);
		case(383):
		return(cr.ParamBase[(383)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(5)]>=4&&cr.ParamBase[(211)]>=35);
		case(384):
		return(cr.ParamBase[(384)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(216)]>=50);
		case(385):
		return(cr.ParamBase[(385)]<0&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(0)]<10);
		case(386):
		return(cr.ParamBase[(386)]<0&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(1)]<10);
		case(387):
		return(cr.ParamBase[(387)]<0&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(2)]<10);
		case(388):
		return(cr.ParamBase[(388)]<0&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(3)]<10);
		case(389):
		return(cr.ParamBase[(389)]<0&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(4)]<10);
		case(390):
		return(cr.ParamBase[(390)]<0&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(5)]<10);
		case(391):
		return(cr.ParamBase[(391)]<0&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(6)]<10);
		case(392):
		return(cr.ParamBase[(392)]<0&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(210)]>=50&&cr.ParamBase[(80)]>=50);
		case(393):
		return(cr.ParamBase[(393)]<0&&cr.ParamBase[(77)]>=9);
		case(394):
		return(cr.ParamBase[(394)]<1&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(3)]>=7);
		case(395):
		return(cr.ParamBase[(395)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(2)]>=5&&cr.ParamBase[(5)]>=5);
		case(396):
		return(cr.ParamBase[(396)]<1&&cr.ParamBase[(77)]>=9&&cr.ParamBase[(3)]>=6);
		case(397):
		return(cr.ParamBase[(397)]<1&&cr.ParamBase[(77)]>=9&&cr.ParamBase[(5)]>=5&&cr.ParamBase[(6)]>=5);
		case(398):
		return(cr.ParamBase[(398)]<1&&cr.ParamBase[(77)]>=9&&cr.ParamBase[(207)]>=60);
		case(399):
		return(cr.ParamBase[(399)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(3)]>=5);
		case(400):
		return(cr.ParamBase[(400)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(214)]>=50&&cr.ParamBase[(215)]>=50);
		case(401):
		return(cr.ParamBase[(401)]<1&&cr.ParamBase[(77)]>=6);
		case(402):
		return(cr.ParamBase[(402)]<1&&cr.ParamBase[(77)]>=9&&cr.ParamBase[(201)]>=75);
		case(403):
		return(cr.ParamBase[(403)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(5)]>=5);
		case(404):
		return(cr.ParamBase[(404)]<1&&cr.ParamBase[(77)]>=6&&cr.ParamBase[(215)]>=50);
		case(405):
		return(cr.ParamBase[(405)]<1&&cr.ParamBase[(77)]>=3&&cr.ParamBase[(0)]>=6);
		case(406):
		return(cr.ParamBase[(406)]<0&&cr.ParamBase[(77)]>=3);
		case(407):
		return(cr.ParamBase[(407)]<1&&cr.ParamBase[(77)]>=12&&cr.ParamBase[(5)]>=5);
		case(420):
		return(cr.ParamBase[(420)]<0&&cr.ParamBase[(77)]>=24&&cr.ParamBase[(0)]>=8&&cr.ParamBase[(2)]>=8&&cr.ParamBase[(207)]>=80&&cr.ParamBase[(325)]==0&&cr.ParamBase[(324)]==0);
		default:
		break;
	}
	return false;
} 

void PerkUp(Critter&cr,uint perk)
{ 
	
	switch(perk)
	{
		
		case(301):
		cr.StatBase[(1)]++;
		break;
		case(302):
		break;
		case(303):
		cr.StatBase[(10)]+=8;
		break;
		case(304):
		cr.StatBase[(87)]+=2;
		break;
		case(305):
		break;
		case(306):
		break;
		case(307):
		cr.StatBase[(12)]+=2;
		break;
		case(308):
		cr.StatBase[(13)]+=5;
		cr.SkillBase[(217)]+=35;if(cr.SkillBase[(217)]>(__SkillMaxValue))
		cr.SkillBase[(217)]=(__SkillMaxValue);
		break;
		case(309):
		cr.StatBase[(14)]+=10;
		break;
		case(312):
		cr.StatBase[(30)]+=15;
		break;
		case(313):
		cr.StatBase[(23)]+=10;
		cr.StatBase[(25)]+=10;
		cr.StatBase[(24)]+=10;
		cr.StatBase[(26)]+=10;
		cr.StatBase[(27)]+=10;
		cr.StatBase[(29)]+=10;
		break;
		case(314):
		cr.StatBase[(11)]+=((100)*453);
		break;
		case(315):
		cr.StatBase[(101)]+=6;break;
		case(316):
		break;
		case(317):
		cr.SkillBase[(217)]+=25;if(cr.SkillBase[(217)]>(__SkillMaxValue))
		cr.SkillBase[(217)]=(__SkillMaxValue);
		cr.StatBase[(7)]+=8;
		cr.StatBase[(13)]+=5;
		cr.SkillBase[(204)]+=25;if(cr.SkillBase[(204)]>(__SkillMaxValue))
		cr.SkillBase[(204)]=(__SkillMaxValue);
		break;
		case(318):
		break;
		case(319):
		cr.StatBase[(78)]+=30;break;
		case(320):
		break;
		case(322):
		cr.StatBase[(15)]+=20;
		break;
		case(324):
		break;
		case(325):
		break;
		case(326):
		break;
		case(327):
		cr.StatBase[(8)]+=2;
		break;
		case(329):
		cr.StatBase[(7)]+=15;
		break;
		case(330):
		cr.StatBase[(9)]+=10;
		cr.StatBase[(5)]+=1;
		break;
		case(331):
		cr.StatBase[(31)]+=45;
		cr.StatBase[(2)]+=1;
		cr.StatBase[(7)]+=5;
		break;
		case(332):
		cr.SkillBase[(213)]+=30;if(cr.SkillBase[(213)]>(__SkillMaxValue))
		cr.SkillBase[(213)]=(__SkillMaxValue);
		cr.SkillBase[(212)]+=30;if(cr.SkillBase[(212)]>(__SkillMaxValue))
		cr.SkillBase[(212)]=(__SkillMaxValue);
		break;
		case(333):
		cr.SkillBase[(206)]+=30;if(cr.SkillBase[(206)]>(__SkillMaxValue))
		cr.SkillBase[(206)]=(__SkillMaxValue);
		cr.SkillBase[(207)]+=30;if(cr.SkillBase[(207)]>(__SkillMaxValue))
		cr.SkillBase[(207)]=(__SkillMaxValue);
		break;
		case(334):
		cr.SkillBase[(210)]+=20;if(cr.SkillBase[(210)]>(__SkillMaxValue))
		cr.SkillBase[(210)]=(__SkillMaxValue);
		cr.SkillBase[(209)]+=20;if(cr.SkillBase[(209)]>(__SkillMaxValue))
		cr.SkillBase[(209)]=(__SkillMaxValue);
		break;
		case(335):
		cr.SkillBase[(214)]+=40;if(cr.SkillBase[(214)]>(__SkillMaxValue))
		cr.SkillBase[(214)]=(__SkillMaxValue);
		break;
		case(336):
		break;
		case(338):
		break;
		case(339):
		break;
		case(342):
		break;
		case(344):
		cr.SkillBase[(217)]+=20;if(cr.SkillBase[(217)]>(__SkillMaxValue))
		cr.SkillBase[(217)]=(__SkillMaxValue);
		break;
		case(346):
		cr.SkillBase[(217)]+=20;if(cr.SkillBase[(217)]>(__SkillMaxValue))
		cr.SkillBase[(217)]=(__SkillMaxValue);
		break;
		case(348):
		cr.SkillBase[(217)]+=25;if(cr.SkillBase[(217)]>(__SkillMaxValue))
		cr.SkillBase[(217)]=(__SkillMaxValue);
		break;
		case(349):
		break;
		case(350):
		break;
		case(351):
		break;
		case(380):
		break;
		case(381):
		cr.StatBase[(1)]++;
		break;
		case(382):
		break;
		case(383):
		cr.SkillBase[(211)]+=40;if(cr.SkillBase[(211)]>(__SkillMaxValue))
		cr.SkillBase[(211)]=(__SkillMaxValue);
		break;
		case(384):
		cr.SkillBase[(216)]+=40;if(cr.SkillBase[(216)]>(__SkillMaxValue))
		cr.SkillBase[(216)]=(__SkillMaxValue);
		break;
		case(385):
		cr.StatBase[(0)]++;
		break;
		case(386):
		cr.StatBase[(1)]++;
		break;
		case(387):
		cr.StatBase[(2)]++;
		break;
		case(388):
		cr.StatBase[(3)]++;
		break;
		case(389):
		cr.StatBase[(4)]++;
		break;
		case(390):
		cr.StatBase[(5)]++;
		break;
		case(391):
		cr.StatBase[(6)]++;
		break;
		case(392):
		cr.SkillBase[(210)]+=40;if(cr.SkillBase[(210)]>(__SkillMaxValue))
		cr.SkillBase[(210)]=(__SkillMaxValue);
		break;
		case(393):
		cr.StatBase[(76)]+=NextLevelNeedExp(cr)-cr.ParamBase[(76)];
		break;
		case(394):
		cr.StatBase[(9)]+=20;
		cr.StatBase[(8)]+=2;
		break;
		case(395):
		break;
		case(396):
		break;
		case(397):
		break;
		case(398):
		cr.SkillBase[(207)]+=20;if(cr.SkillBase[(207)]>(__SkillMaxValue))
		cr.SkillBase[(207)]=(__SkillMaxValue);
		cr.SkillBase[(206)]+=20;if(cr.SkillBase[(206)]>(__SkillMaxValue))
		cr.SkillBase[(206)]=(__SkillMaxValue);
		cr.SkillBase[(212)]+=20;if(cr.SkillBase[(212)]>(__SkillMaxValue))
		cr.SkillBase[(212)]=(__SkillMaxValue);
		cr.SkillBase[(204)]+=10;if(cr.SkillBase[(204)]>(__SkillMaxValue))
		cr.SkillBase[(204)]=(__SkillMaxValue);
		break;
		case(399):
		cr.StatBase[(3)]+=2;
		cr.StatBase[(9)]+=8;
		cr.SkillBase[(207)]+=20;if(cr.SkillBase[(207)]>(__SkillMaxValue))
		cr.SkillBase[(207)]=(__SkillMaxValue);
		cr.SkillBase[(206)]+=20;if(cr.SkillBase[(206)]>(__SkillMaxValue))
		cr.SkillBase[(206)]=(__SkillMaxValue);
		break;
		case(400):
		cr.SkillBase[(214)]+=20;if(cr.SkillBase[(214)]>(__SkillMaxValue))
		cr.SkillBase[(214)]=(__SkillMaxValue);
		cr.SkillBase[(215)]+=20;if(cr.SkillBase[(215)]>(__SkillMaxValue))
		cr.SkillBase[(215)]=(__SkillMaxValue);
		break;
		case(401):
		cr.StatBase[(11)]+=((100)*453);
		break;
		case(402):
		break;
		case(403):
		break;
		case(404):
		cr.SkillBase[(215)]+=40;if(cr.SkillBase[(215)]>(__SkillMaxValue))
		cr.SkillBase[(215)]=(__SkillMaxValue);
		break;
		case(405):
		break;
		case(406):
		cr.SkillBase[(208)]+=10;if(cr.SkillBase[(208)]>(__SkillMaxValue))
		cr.SkillBase[(208)]=(__SkillMaxValue);
		cr.SkillBase[(209)]+=10;if(cr.SkillBase[(209)]>(__SkillMaxValue))
		cr.SkillBase[(209)]=(__SkillMaxValue);
		cr.SkillBase[(210)]+=10;if(cr.SkillBase[(210)]>(__SkillMaxValue))
		cr.SkillBase[(210)]=(__SkillMaxValue);
		cr.SkillBase[(211)]+=10;if(cr.SkillBase[(211)]>(__SkillMaxValue))
		cr.SkillBase[(211)]=(__SkillMaxValue);
		break;
		case(407):
		break;
		case(442):
		cr.SkillBase[(203)]+=50;if(cr.SkillBase[(203)]>(__SkillMaxValue))
		cr.SkillBase[(203)]=(__SkillMaxValue);
		cr.SkillBase[(204)]+=50;if(cr.SkillBase[(204)]>(__SkillMaxValue))
		cr.SkillBase[(204)]=(__SkillMaxValue);
		cr.SkillBase[(200)]+=30;if(cr.SkillBase[(200)]>(__SkillMaxValue))
		cr.SkillBase[(200)]=(__SkillMaxValue);
		cr.SkillBase[(201)]+=30;if(cr.SkillBase[(201)]>(__SkillMaxValue))
		cr.SkillBase[(201)]=(__SkillMaxValue);
		cr.SkillBase[(202)]+=30;if(cr.SkillBase[(202)]>(__SkillMaxValue))
		cr.SkillBase[(202)]=(__SkillMaxValue);
		cr.SkillBase[(214)]+=50;if(cr.SkillBase[(214)]>(__SkillMaxValue))
		cr.SkillBase[(214)]=(__SkillMaxValue);
		cr.SkillBase[(206)]+=20;if(cr.SkillBase[(206)]>(__SkillMaxValue))
		cr.SkillBase[(206)]=(__SkillMaxValue);
		cr.SkillBase[(207)]+=20;if(cr.SkillBase[(207)]>(__SkillMaxValue))
		cr.SkillBase[(207)]=(__SkillMaxValue);
		cr.SkillBase[(213)]+=20;if(cr.SkillBase[(213)]>(__SkillMaxValue))
		cr.SkillBase[(213)]=(__SkillMaxValue);
		cr.SkillBase[(217)]+=20;if(cr.SkillBase[(217)]>(__SkillMaxValue))
		cr.SkillBase[(217)]=(__SkillMaxValue);
		cr.StatBase[(11)]+=10;
		break;
		case(443):
		cr.StatBase[(0)]++;
		cr.StatBase[(1)]++;
		cr.StatBase[(76)]++;
		cr.StatBase[(3)]++;
		cr.StatBase[(4)]++;
		cr.StatBase[(5)]++;
		cr.StatBase[(6)]++;
		break;
		case(444):
		cr.StatBase[(14)]+=5;
		cr.StatBase[(10)]+=5;
		cr.StatBase[(8)]+=1;
		cr.StatBase[(7)]+=10;
		cr.StatBase[(23)]+=5;
		cr.StatBase[(27)]+=5;
		cr.StatBase[(25)]+=5;
		cr.StatBase[(24)]+=5;
		cr.StatBase[(26)]+=5;
		break;
		case(445):
		cr.SkillBase[(203)]+=40;if(cr.SkillBase[(203)]>(__SkillMaxValue))
		cr.SkillBase[(203)]=(__SkillMaxValue);
		cr.SkillBase[(204)]+=40;if(cr.SkillBase[(204)]>(__SkillMaxValue))
		cr.SkillBase[(204)]=(__SkillMaxValue);
		cr.SkillBase[(200)]+=40;if(cr.SkillBase[(200)]>(__SkillMaxValue))
		cr.SkillBase[(200)]=(__SkillMaxValue);
		cr.SkillBase[(201)]+=40;if(cr.SkillBase[(201)]>(__SkillMaxValue))
		cr.SkillBase[(201)]=(__SkillMaxValue);
		cr.SkillBase[(202)]+=40;if(cr.SkillBase[(202)]>(__SkillMaxValue))
		cr.SkillBase[(202)]=(__SkillMaxValue);
		cr.SkillBase[(206)]+=20;if(cr.SkillBase[(206)]>(__SkillMaxValue))
		cr.SkillBase[(206)]=(__SkillMaxValue);
		cr.SkillBase[(213)]+=40;if(cr.SkillBase[(213)]>(__SkillMaxValue))
		cr.SkillBase[(213)]=(__SkillMaxValue);
		cr.SkillBase[(217)]+=50;if(cr.SkillBase[(217)]>(__SkillMaxValue))
		cr.SkillBase[(217)]=(__SkillMaxValue);
		cr.StatBase[(11)]+=30;
		break;
		case(446):
		cr.StatBase[(0)]++;
		cr.StatBase[(1)]++;
		cr.StatBase[(76)]++;
		cr.StatBase[(4)]++;
		cr.StatBase[(5)]++;
		cr.StatBase[(6)]++;
		break;
		case(447):
		cr.StatBase[(14)]+=5;
		cr.StatBase[(10)]+=5;
		cr.StatBase[(8)]+=1;
		cr.StatBase[(7)]+=20;
		cr.StatBase[(23)]+=10;
		cr.StatBase[(27)]+=10;
		cr.StatBase[(25)]+=10;
		cr.StatBase[(24)]+=10;
		cr.StatBase[(26)]+=10;
		break;
		case(448):
		cr.StatBase[(0)]=0;
		cr.StatBase[(1)]=0;
		cr.StatBase[(76)]=0;
		cr.StatBase[(3)]=0;
		cr.StatBase[(4)]=0;
		cr.StatBase[(5)]=0;
		cr.StatBase[(6)]=0;
		cr.StatBase[(7)]=1;
		cr.StatBase[(9)]=0;
		cr.StatBase[(8)]=0;
		cr.StatBase[(11)]=0;
		cr.StatBase[(10)]=0;
		cr.StatBase[(23)]=0;
		cr.StatBase[(27)]=0;
		cr.StatBase[(25)]=0;
		cr.StatBase[(24)]=0;
		cr.StatBase[(26)]=0;
		cr.StatBase[(29)]=0;
		cr.StatBase[(16)]=0;
		cr.StatBase[(20)]=0;
		cr.StatBase[(18)]=0;
		cr.StatBase[(17)]=0;
		cr.StatBase[(19)]=0;
		cr.StatBase[(22)]=0;
		cr.StatBase[(14)]=0;
		cr.StatBase[(7)]=0;
		cr.StatBase[(13)]=0;
		cr.SkillBase[(203)]=0;if(cr.SkillBase[(203)]>(__SkillMaxValue))
		cr.SkillBase[(203)]=(__SkillMaxValue);
		cr.SkillBase[(204)]=0;if(cr.SkillBase[(204)]>(__SkillMaxValue))
		cr.SkillBase[(204)]=(__SkillMaxValue);
		cr.SkillBase[(200)]=0;if(cr.SkillBase[(200)]>(__SkillMaxValue))
		cr.SkillBase[(200)]=(__SkillMaxValue);
		cr.SkillBase[(201)]=0;if(cr.SkillBase[(201)]>(__SkillMaxValue))
		cr.SkillBase[(201)]=(__SkillMaxValue);
		cr.SkillBase[(202)]=0;if(cr.SkillBase[(202)]>(__SkillMaxValue))
		cr.SkillBase[(202)]=(__SkillMaxValue);
		cr.SkillBase[(214)]=0;if(cr.SkillBase[(214)]>(__SkillMaxValue))
		cr.SkillBase[(214)]=(__SkillMaxValue);
		cr.SkillBase[(206)]=0;if(cr.SkillBase[(206)]>(__SkillMaxValue))
		cr.SkillBase[(206)]=(__SkillMaxValue);
		cr.SkillBase[(207)]=0;if(cr.SkillBase[(207)]>(__SkillMaxValue))
		cr.SkillBase[(207)]=(__SkillMaxValue);
		cr.SkillBase[(213)]=0;if(cr.SkillBase[(213)]>(__SkillMaxValue))
		cr.SkillBase[(213)]=(__SkillMaxValue);
		cr.SkillBase[(217)]=0;if(cr.SkillBase[(217)]>(__SkillMaxValue))
		cr.SkillBase[(217)]=(__SkillMaxValue);
		cr.SkillBase[(208)]=0;if(cr.SkillBase[(208)]>(__SkillMaxValue))
		cr.SkillBase[(208)]=(__SkillMaxValue);
		cr.SkillBase[(209)]=0;if(cr.SkillBase[(209)]>(__SkillMaxValue))
		cr.SkillBase[(209)]=(__SkillMaxValue);
		cr.SkillBase[(210)]=0;if(cr.SkillBase[(210)]>(__SkillMaxValue))
		cr.SkillBase[(210)]=(__SkillMaxValue);
		cr.SkillBase[(211)]=0;if(cr.SkillBase[(211)]>(__SkillMaxValue))
		cr.SkillBase[(211)]=(__SkillMaxValue);
		break;
		default:
		break;
	}
}

void PerkDown(Critter&cr,uint perk)
{ 
	
	switch(perk)
	{
		
		case(301):
		cr.StatBase[(1)]--;
		break;
		case(302):
		break;
		case(303):
		cr.StatBase[(10)]-=8;
		break;
		case(304):
		cr.StatBase[(87)]-=2;
		break;
		case(305):
		break;
		case(306):
		break;
		case(307):
		cr.StatBase[(12)]-=2;
		break;
		case(308):
		cr.StatBase[(13)]-=5;
		cr.SkillBase[(217)]-=35;if(cr.SkillBase[(217)]<-(__SkillMaxValue))
		cr.SkillBase[(217)]=-(__SkillMaxValue);
		break;
		case(309):
		cr.StatBase[(14)]-=10;
		break;
		case(312):
		cr.StatBase[(30)]-=15;
		break;
		case(313):
		cr.StatBase[(23)]-=10;
		cr.StatBase[(25)]-=10;
		cr.StatBase[(24)]-=10;
		cr.StatBase[(26)]-=10;
		cr.StatBase[(27)]-=10;
		cr.StatBase[(29)]-=10;
		break;
		case(314):
		cr.StatBase[(11)]-=((100)*453);
		break;
		case(315):
		cr.StatBase[(101)]-=6;
		break;
		case(316):
		break;
		case(317):
		cr.SkillBase[(217)]-=25;if(cr.SkillBase[(217)]<-(__SkillMaxValue))
		cr.SkillBase[(217)]=-(__SkillMaxValue);
		cr.StatBase[(7)]-=8;
		cr.StatBase[(13)]-=5;
		cr.SkillBase[(204)]-=25;if(cr.SkillBase[(204)]<-(__SkillMaxValue))
		cr.SkillBase[(204)]=-(__SkillMaxValue);
		break;
		case(318):
		break;
		case(319):
		cr.StatBase[(78)]-=30;
		break;
		case(320):
		break;
		case(322):
		cr.StatBase[(15)]-=20;
		break;
		case(324):
		break;
		case(325):
		break;
		case(326):
		break;
		case(327):
		cr.StatBase[(8)]-=2;
		break;
		case(329):
		cr.StatBase[(7)]-=15;
		break;
		case(330):
		cr.StatBase[(9)]-=10;
		cr.StatBase[(5)]-=1;
		break;
		case(331):
		cr.StatBase[(31)]-=45;
		cr.StatBase[(2)]-=1;
		cr.StatBase[(7)]-=5;
		break;
		case(332):
		cr.SkillBase[(213)]-=30;if(cr.SkillBase[(213)]<-(__SkillMaxValue))
		cr.SkillBase[(213)]=-(__SkillMaxValue);
		cr.SkillBase[(212)]-=30;if(cr.SkillBase[(212)]<-(__SkillMaxValue))
		cr.SkillBase[(212)]=-(__SkillMaxValue);
		break;
		case(333):
		cr.SkillBase[(206)]-=30;if(cr.SkillBase[(206)]<-(__SkillMaxValue))
		cr.SkillBase[(206)]=-(__SkillMaxValue);
		cr.SkillBase[(207)]-=30;if(cr.SkillBase[(207)]<-(__SkillMaxValue))
		cr.SkillBase[(207)]=-(__SkillMaxValue);
		break;
		case(334):
		cr.SkillBase[(210)]-=20;if(cr.SkillBase[(210)]<-(__SkillMaxValue))
		cr.SkillBase[(210)]=-(__SkillMaxValue);
		cr.SkillBase[(209)]-=20;if(cr.SkillBase[(209)]<-(__SkillMaxValue))
		cr.SkillBase[(209)]=-(__SkillMaxValue);
		break;
		case(335):
		cr.SkillBase[(214)]-=40;if(cr.SkillBase[(214)]<-(__SkillMaxValue))
		cr.SkillBase[(214)]=-(__SkillMaxValue);
		break;
		case(336):
		break;
		case(338):
		break;
		case(339):
		break;
		case(342):
		break;
		case(344):
		cr.SkillBase[(217)]-=20;if(cr.SkillBase[(217)]<-(__SkillMaxValue))
		cr.SkillBase[(217)]=-(__SkillMaxValue);
		break;
		case(346):
		cr.SkillBase[(217)]-=20;if(cr.SkillBase[(217)]<-(__SkillMaxValue))
		cr.SkillBase[(217)]=-(__SkillMaxValue);
		break;
		case(348):
		cr.SkillBase[(217)]-=25;if(cr.SkillBase[(217)]<-(__SkillMaxValue))
		cr.SkillBase[(217)]=-(__SkillMaxValue);
		break;
		case(349):
		break;
		case(350):
		break;
		case(351):
		break;
		case(380):
		break;
		case(381):
		cr.StatBase[(1)]--;
		break;
		case(382):
		break;
		case(383):
		cr.SkillBase[(211)]-=40;if(cr.SkillBase[(211)]<-(__SkillMaxValue))
		cr.SkillBase[(211)]=-(__SkillMaxValue);
		break;
		case(384):
		cr.SkillBase[(216)]-=40;if(cr.SkillBase[(216)]<-(__SkillMaxValue))
		cr.SkillBase[(216)]=-(__SkillMaxValue);
		break;
		case(385):
		cr.StatBase[(0)]--;
		break;
		case(386):
		cr.StatBase[(1)]--;
		break;
		case(387):
		cr.StatBase[(2)]--;
		break;
		case(388):
		cr.StatBase[(3)]--;
		break;
		case(389):
		cr.StatBase[(4)]--;
		break;
		case(390):
		cr.StatBase[(5)]--;
		break;
		case(391):
		cr.StatBase[(6)]--;
		break;
		case(392):
		cr.SkillBase[(210)]-=40;if(cr.SkillBase[(210)]<-(__SkillMaxValue))
		cr.SkillBase[(210)]=-(__SkillMaxValue);
		break;
		case(393):
		break;
		case(394):
		cr.StatBase[(9)]-=20;
		cr.StatBase[(8)]-=2;
		break;
		case(395):
		break;
		case(396):
		break;
		case(397):
		break;
		case(398):
		cr.SkillBase[(207)]-=20;if(cr.SkillBase[(207)]<-(__SkillMaxValue))
		cr.SkillBase[(207)]=-(__SkillMaxValue);
		cr.SkillBase[(212)]-=20;if(cr.SkillBase[(212)]<-(__SkillMaxValue))
		cr.SkillBase[(212)]=-(__SkillMaxValue);
		cr.SkillBase[(206)]-=20;if(cr.SkillBase[(206)]<-(__SkillMaxValue))
		cr.SkillBase[(206)]=-(__SkillMaxValue);
		cr.SkillBase[(204)]-=20;if(cr.SkillBase[(204)]<-(__SkillMaxValue))
		cr.SkillBase[(204)]=-(__SkillMaxValue);
		break;
		case(399):
		cr.StatBase[(3)]-=2;
		cr.StatBase[(9)]-=8;
		cr.SkillBase[(207)]-=20;if(cr.SkillBase[(207)]<-(__SkillMaxValue))
		cr.SkillBase[(207)]=-(__SkillMaxValue);
		cr.SkillBase[(206)]-=20;if(cr.SkillBase[(206)]<-(__SkillMaxValue))
		cr.SkillBase[(206)]=-(__SkillMaxValue);
		break;
		case(400):
		cr.SkillBase[(214)]-=20;if(cr.SkillBase[(214)]<-(__SkillMaxValue))
		cr.SkillBase[(214)]=-(__SkillMaxValue);
		cr.SkillBase[(215)]-=20;if(cr.SkillBase[(215)]<-(__SkillMaxValue))
		cr.SkillBase[(215)]=-(__SkillMaxValue);
		break;
		case(401):
		cr.StatBase[(11)]-=((100)*453);
		break;
		case(402):
		break;
		case(403):
		break;
		case(404):
		cr.SkillBase[(215)]-=40;if(cr.SkillBase[(215)]<-(__SkillMaxValue))
		cr.SkillBase[(215)]=-(__SkillMaxValue);
		break;
		case(405):
		break;
		case(406):
		cr.SkillBase[(208)]-=10;if(cr.SkillBase[(208)]<-(__SkillMaxValue))
		cr.SkillBase[(208)]=-(__SkillMaxValue);
		cr.SkillBase[(209)]-=10;if(cr.SkillBase[(209)]<-(__SkillMaxValue))
		cr.SkillBase[(209)]=-(__SkillMaxValue);
		cr.SkillBase[(210)]-=10;if(cr.SkillBase[(210)]<-(__SkillMaxValue))
		cr.SkillBase[(210)]=-(__SkillMaxValue);
		cr.SkillBase[(211)]-=10;if(cr.SkillBase[(211)]<-(__SkillMaxValue))
		cr.SkillBase[(211)]=-(__SkillMaxValue);
		break;
		case(407):
		break;
		case(442):
		cr.SkillBase[(203)]-=50;if(cr.SkillBase[(203)]<-(__SkillMaxValue))
		cr.SkillBase[(203)]=-(__SkillMaxValue);
		cr.SkillBase[(204)]-=50;if(cr.SkillBase[(204)]<-(__SkillMaxValue))
		cr.SkillBase[(204)]=-(__SkillMaxValue);
		cr.SkillBase[(200)]-=30;if(cr.SkillBase[(200)]<-(__SkillMaxValue))
		cr.SkillBase[(200)]=-(__SkillMaxValue);
		cr.SkillBase[(201)]-=30;if(cr.SkillBase[(201)]<-(__SkillMaxValue))
		cr.SkillBase[(201)]=-(__SkillMaxValue);
		cr.SkillBase[(202)]-=30;if(cr.SkillBase[(202)]<-(__SkillMaxValue))
		cr.SkillBase[(202)]=-(__SkillMaxValue);
		cr.SkillBase[(214)]-=50;if(cr.SkillBase[(214)]<-(__SkillMaxValue))
		cr.SkillBase[(214)]=-(__SkillMaxValue);
		cr.SkillBase[(206)]-=20;if(cr.SkillBase[(206)]<-(__SkillMaxValue))
		cr.SkillBase[(206)]=-(__SkillMaxValue);
		cr.SkillBase[(207)]-=20;if(cr.SkillBase[(207)]<-(__SkillMaxValue))
		cr.SkillBase[(207)]=-(__SkillMaxValue);
		cr.SkillBase[(213)]-=20;if(cr.SkillBase[(213)]<-(__SkillMaxValue))
		cr.SkillBase[(213)]=-(__SkillMaxValue);
		cr.SkillBase[(217)]-=20;if(cr.SkillBase[(217)]<-(__SkillMaxValue))
		cr.SkillBase[(217)]=-(__SkillMaxValue);
		cr.StatBase[(11)]-=10;
		break;
		case(443):
		cr.StatBase[(0)]--;
		cr.StatBase[(1)]--;
		cr.StatBase[(76)]--;
		cr.StatBase[(3)]--;
		cr.StatBase[(4)]--;
		cr.StatBase[(5)]--;
		cr.StatBase[(6)]--;
		break;
		case(444):
		cr.StatBase[(14)]-=5;
		cr.StatBase[(10)]-=5;
		cr.StatBase[(8)]-=1;
		cr.StatBase[(7)]-=10;
		cr.StatBase[(23)]-=5;
		cr.StatBase[(27)]-=5;
		cr.StatBase[(25)]-=5;
		cr.StatBase[(24)]-=5;
		cr.StatBase[(26)]-=5;
		break;
		case(445):
		cr.SkillBase[(203)]-=40;if(cr.SkillBase[(203)]<-(__SkillMaxValue))
		cr.SkillBase[(203)]=-(__SkillMaxValue);
		cr.SkillBase[(204)]-=40;if(cr.SkillBase[(204)]<-(__SkillMaxValue))
		cr.SkillBase[(204)]=-(__SkillMaxValue);
		cr.SkillBase[(200)]-=40;if(cr.SkillBase[(200)]<-(__SkillMaxValue))
		cr.SkillBase[(200)]=-(__SkillMaxValue);
		cr.SkillBase[(201)]-=40;if(cr.SkillBase[(201)]<-(__SkillMaxValue))
		cr.SkillBase[(201)]=-(__SkillMaxValue);
		cr.SkillBase[(202)]-=40;if(cr.SkillBase[(202)]<-(__SkillMaxValue))
		cr.SkillBase[(202)]=-(__SkillMaxValue);
		cr.SkillBase[(206)]-=20;if(cr.SkillBase[(206)]<-(__SkillMaxValue))
		cr.SkillBase[(206)]=-(__SkillMaxValue);
		cr.SkillBase[(213)]-=40;if(cr.SkillBase[(213)]<-(__SkillMaxValue))
		cr.SkillBase[(213)]=-(__SkillMaxValue);
		cr.SkillBase[(217)]-=50;if(cr.SkillBase[(217)]<-(__SkillMaxValue))
		cr.SkillBase[(217)]=-(__SkillMaxValue);
		cr.StatBase[(11)]-=30;
		break;
		case(446):
		cr.StatBase[(0)]--;
		cr.StatBase[(1)]--;
		cr.StatBase[(76)]--;
		cr.StatBase[(4)]--;
		cr.StatBase[(5)]--;
		cr.StatBase[(6)]--;
		break;
		case(447):
		cr.StatBase[(14)]-=5;
		cr.StatBase[(10)]-=5;
		cr.StatBase[(8)]-=1;
		cr.StatBase[(7)]-=20;
		cr.StatBase[(23)]-=10;
		cr.StatBase[(27)]-=10;
		cr.StatBase[(25)]-=10;
		cr.StatBase[(24)]-=10;
		cr.StatBase[(26)]-=10;
		break;
		default:
		break;
	}
}

