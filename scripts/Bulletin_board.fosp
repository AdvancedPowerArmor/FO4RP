                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

uint8[]BB_SPEC_SIMBOL_IGNORLIST={(35),(42)}; 

string[][]Bulletin_board_data;
int is_Bulletin_board_loaded=0;   

void s_do_Bulletin_board_finalize_page(Critter&player,Critter@npc)
{
	player.Say((6),("Дописывает обьявление до конца"));
	
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id);
	Bulletin_board_finalize_page(t.GetValue());
	
	Save_BB();
} 

bool s_is_Bulletin_board_need_finalize_page(Critter&player,Critter@npc)
{
	GameVar@index=GetUnicumVar((9943),player.Id,player.Id);
	int t=index.GetValue();
	int t_max=Bulletin_board_data.length();
	
	bool rez=false;
	if((t>-1)&&(t<t_max))
	{
		rez=(Bulletin_board_data[t].length()<(6));
	}
	
	return(rez);
} 

void Bulletin_board_finalize_page(int index)
{
	int max_index=Bulletin_board_data.length();
	if((index>-1)&&(index<max_index))
	{
		for(uint i=0;i<(6);i++)
		{
			Bulletin_board_data_new_line(index," ");
			
		}
	}
	;
}     

void Bulletin_board_data_new_page()
{
	Bulletin_board_data.resize(Bulletin_board_data.length()+1);
	;
}

void Bulletin_board_data_del_page(int index)
{
	string[][]temp_Bulletin_board_data;
	
	int i_max=Bulletin_board_data.length();
	for(int i=0;i<i_max;i++)
	{
		if(i!=index)
		{
			temp_Bulletin_board_data.resize(temp_Bulletin_board_data.length()+1);
			temp_Bulletin_board_data[temp_Bulletin_board_data.length()-1]=Bulletin_board_data[i];
			;
		}
	} 
	
	for(int i=0;i<i_max;i++)
	{
		Bulletin_board_data[i].resize(0);
	}
	Bulletin_board_data.resize(0);
	
	Bulletin_board_data=temp_Bulletin_board_data;
	;
}    

bool Bulletin_board_is_specsimbol(uint8 char_)
{
	bool rez=false;
	for(uint i=0;i<BB_SPEC_SIMBOL_IGNORLIST.length();i++)
	{
		if(char_==BB_SPEC_SIMBOL_IGNORLIST[i])
		{
			rez=true;
		}
	}
	return rez;
}

void Bulletin_board_kill_spec_simbol(string&str)
{
	string rez;
	rez="";
	for(uint i=0;i<str.length();i++)
	{
		if(not Bulletin_board_is_specsimbol(str[i]))
		{
			add_char_to_str(str[i],rez);
		}
	}
	str=rez;
}  

int Bulletin_board_data_new_line(int index,string text)
{
	Bulletin_board_kill_spec_simbol(text);
	if(text.length()==0)
	{
		return(4);
	} 
	
	int i_max=Bulletin_board_data.length();
	if((index>-1)&&(index<i_max))
	{
		if((Bulletin_board_data[index].length()+1)<=(6))
		{
			Bulletin_board_data[index].resize(Bulletin_board_data[index].length()+1);
			Bulletin_board_data[index][Bulletin_board_data[index].length()-1]=text;
			return(1);
		}
		else
		{
			return(2);
		}
	}
	else
	{
		return(3);
	}
}  

string Bulletin_board_data_get_page(int index)
{
	string rez="";
	string current_line_lex_name=""; 
	
	rez=rez+"$current"+(index+1);
	rez=rez+"$max"+Bulletin_board_data.length();
	
	int i_max=Bulletin_board_data.length();
	if((index>-1)&&(index<i_max))
	{
		for(uint i=0;i<(6);i++)
		{
			if(i<Bulletin_board_data[index].length())
			{
				current_line_lex_name="$line_"+(i+1);
				rez=rez+current_line_lex_name+Bulletin_board_data[index][i];
			}
			else
			{
				
				if(i==0)
				{
					current_line_lex_name="$line_"+(i+1);
					rez=rez+current_line_lex_name+("На обьявлении ничего не написано");
				}
				else
				{
					current_line_lex_name="$line_"+(i+1);
					rez=rez+current_line_lex_name+" ";
				}
			}
		}
	}
	else
	{
		
		for(uint i=0;i<(6);i++)
		{
			current_line_lex_name="$line_"+(i+1);
			rez=rez+current_line_lex_name+" ";
		}
	}
	return rez;
}    

bool s_is_prev_page(Critter&player,Critter@npc)
{
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id);
	return(t>0)&&(Bulletin_board_data.length()>0);
}

void s_prev_page(Critter&player,Critter@npc)
{
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id);
	if(t>0)
	{
		t=t-1;
	}
}  

bool s_is_next_page(Critter&player,Critter@npc)
{
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id);
	return(t<Bulletin_board_data.length()-1)&&(Bulletin_board_data.length()>0);
}

void s_next_page(Critter&player,Critter@npc)
{
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id);
	if(t<Bulletin_board_data.length()-1)
	{
		t=t+1;
	}
}    

bool s_is_page(Critter&player,Critter@npc)
{
	return(Bulletin_board_data.length()>0);
}
bool s_not_is_page(Critter&player,Critter@npc)
{
	return(not(Bulletin_board_data.length()>0));
}     

void s_Bulletin_board_data_dell(Critter&player,Critter@npc)
{
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id);
	
	if(s_is_page(player,npc))
	{
		player.Say((6),("Отрывает листок от доски"));
		Bulletin_board_data_del_page(t.GetValue());
		Save_BB();
	}
	
	t=t-1;
	if(t<0)
	{
		t=0;
	}
}   

void s_Bulletin_board_data_add_new_page(Critter&player,Critter@npc)
{
	Bulletin_board_data_new_page();
	player.Say((6),("Приклеевает новое обьявление"));
	
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id);
	t=Bulletin_board_data.length()-1;
	
	Save_BB();
	;
}     

void string_to_uint_array(string str,uint8[]&rez)
{
	rez.resize(0);
	for(uint i=0;i<str.length();i++)
	{
		rez.resize(rez.length()+1);
		rez[rez.length()-1]=str[i];
	}
} 

void string_array_to_uint_array(string[]str_array,uint8[]&rez)
{
	uint8[]str_line;
	
	rez.resize(0);
	for(uint i=0;i<str_array.length();i++)
	{ 
		
		string_to_uint_array(str_array[i],str_line);
		
		for(uint t=0;t<str_line.length();t++)
		{
			rez.resize(rez.length()+1);
			rez[rez.length()-1]=str_line[t];
		}
		
		rez.resize(rez.length()+1);
		rez[rez.length()-1]=(35);  
		
	}
} 

void string_2d_array_to_uint_array(string[][]str_array,uint8[]&rez)
{
	uint8[]str_line;
	
	rez.resize(0);
	for(uint i=0;i<str_array.length();i++)
	{ 
		
		rez.resize(rez.length()+1);
		rez[rez.length()-1]=(42);  
		
		string_array_to_uint_array(str_array[i],str_line);
		
		for(uint t=0;t<str_line.length();t++)
		{
			rez.resize(rez.length()+1);
			rez[rez.length()-1]=str_line[t];
		}
		
	}
}  

void Bulletin_board_data_clear()
{
	for(uint t=0;t<Bulletin_board_data.length();t++)
	{
		Bulletin_board_data[t].resize(0);
	}
	Bulletin_board_data.resize(0);
	;
} 

void add_char_to_str(uint8 char_,string&str)
{
	str.resize(str.length()+1);
	str[str.length()-1]=char_;
	;
}   

void Save_BB()
{
	uint8[]DATA;
	string_2d_array_to_uint_array(Bulletin_board_data,DATA);
	
	EraseAnyData(("Bulletin_board_data"));
	SetAnyData(("Bulletin_board_data"),DATA);
}  

void Load_BB()
{
	if((is_Bulletin_board_loaded==0)or((1)==1))
	{
		if(IsAnyData(("Bulletin_board_data")))
		{
			uint8[]DATA;
			GetAnyData(("Bulletin_board_data"),DATA);
			
			string text_buffer="";
			
			int bb_size_x=0;
			int bb_size_y=0;
			
			Bulletin_board_data_clear();
			
			string test7="";
			
			for(uint i=0;i<DATA.length();i++)
			{
				if(DATA[i]==(42))
				{
					
					Bulletin_board_data.resize(Bulletin_board_data.length()+1);
					;
				}
				
				if(DATA[i]==(35))
				{
					bb_size_x=Bulletin_board_data.length();
					bb_size_y=Bulletin_board_data[bb_size_x-1].length(); 
					
					Bulletin_board_data[bb_size_x-1].resize(bb_size_y+1);
					
					bb_size_y=Bulletin_board_data[bb_size_x-1].length();
					
					Bulletin_board_data[bb_size_x-1][bb_size_y-1]=text_buffer;
					
					text_buffer="";
				}
				
				if((DATA[i]!=(35))&&(DATA[i]!=(42)))
				{
					add_char_to_str(DATA[i],text_buffer);
				}
			}
		}
		is_Bulletin_board_loaded=1;
	}
}         

void s_dialog_init(Critter&player,Critter@npc)
{
	Load_BB();
	
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id);
	t=0;
}  

void s_dlg_Func_dell(Critter&player,Critter@npc,string@lexems)
{
	
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id); 
	
	if(not((@lexems!=null)&&lexems.length()>0))
	{
		
		string page=(t.GetValue()+1);
		lexems="$current"+page;
	}
}  

void s_dlg_Func(Critter&player,Critter@npc,string@lexems)
{
	
	GameVar@t=GetUnicumVar((9943),player.Id,player.Id); 
	
	if(((@lexems!=null)&&lexems.length()>0))
	{
		
		int rez=Bulletin_board_data_new_line(t.GetValue(),lexems);
		if(rez==(1))
		{
			player.Say((6),("Что то пишет на доске"));
			Save_BB();
		}
		if(rez==(2))
		{
			player.Say((6),("Понимает что место на листе кончилось"));
		}
		if(rez==(4))
		{
			player.Say((6),("Думает что бы написать"));
		}
		
		return;
	}
	else
	{
		
		lexems=Bulletin_board_data_get_page(t.GetValue());
	}
	
	return;
}
