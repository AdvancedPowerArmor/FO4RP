                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

import void CreateCell(uint16 x,uint16 y,uint mapId,uint8 type,int8 visibility)from"globalmap_group";
import int GetCellMap(uint16 x,uint16 y)from"globalmap_group";

void _MapInit(Map&map,bool firstTime)
{
	map.SetEvent((7),"_crOut");
	map.SetEvent((6),"_crIn");
	
}

void _KindmanInit(Critter&cr,bool firstTime)
{
	cr.ParamBase[(522)]=1;
	cr.ParamBase[(527)]=1;
	cr.ParamBase[(513)]=1;
	cr.ParamBase[(10)]=9999;
}

void r_toHex(Critter&master,Critter@slave,int val)
{
	Map@map=master.GetMap();
	
	if(map is null)
	return;
	
	uint16 hexX=0,hexY=0;
	
	if(!map.GetEntireCoords(val,0,hexX,hexY))
	return;
	
	master.TransitToHex(hexX,hexY,5);
}

void kind_tele(Critter&master,Critter@slave,int val)
{
	if(not(@master!=null))
	return;
	
	Map@map=GetMapByPid((92),0);
	
	if(not(@map!=null))
	{
		master.Say((11),"Map index not found");
		return;
	}
	
	_crOut(map,master);
	master.TransitToMap(map.Id,0);
	master.ParamBase[(703)]=(0);
}

void _crIn(Map&map,Critter&cr)
{
	if(cr.IsPlayer()&&cr.GetAccess()==(0))
	{
		cr.ParamBase[(514)]=1;
		cr.AddItem((1460),1);
		cr.AddItem((905),1);
	}
}

void _crOut(Map&map,Critter&cr)
{
	if(cr.IsPlayer()&&cr.GetAccess()==(0))
	{
		cr.ParamBase[(514)]=0;
		Item@[]items;
		cr.GetItems((0),items);
		cr.GetItems((1),items);
		cr.GetItems((2),items);
		DeleteItems(items);
	}
}
