                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

import uint EraseAttackPlane(Critter&npc,Critter&target)from"npc_planes";

void _MapInit(Map&map,bool firstTime)
{
	map.SetEvent((6),"_crIn");
	map.SetEvent((7),"_imLeaving");
	GameVar@cant_dig=GetLocalVar((31),map.Id);
	cant_dig=1;
}

bool entrance_Modoc(Location&loc,Critter@[]&critters,uint8 entrance)
{
	Critter@leader=critters[0];
	if(entrance==(1))
	return leader.Skill[(217)]>=50;
	return true;
}

void _crIn(Map&map,Critter&cr)
{
	int ck=cr.ParamBase[(703)];
	if(cr.Perk[(417)]<=1&&cr.Timeout[(234)]==0&&cr.HexY<=217&&cr.IsPlayer())
	{
		if(cr.HexX>=120&&cr.HexX<=130&&cr.HexY>=193&&cr.HexY<=201)
		return;
		cr.PerkBase[(417)]=0;
		cr.AddTimeEvent("cte_leave",5,(43),0);
	}
}

uint cte_leave(Critter&cr,int identifier,uint&rate)
{
	cr.TransitToHex(140+Random(-5,5),257+Random(-5,5),5);
	cr.Say((11),"Вас выкинули из города.");
	return 0;
} 

void _imLeaving(Map&map,Critter&cr)
{
	Critter@[]crits;
	uint npcCount=map.GetCritters(0,(0x01),crits);
	uint stop=0;
	while(stop!=npcCount)
	{
		if(crits[stop].IsNpc()&&crits[stop].Stat[(106)]==5&&crits[stop].CheckEnemyInStack(cr.Id))
		{
			crits[stop].EraseEnemyFromStack(cr.Id);
			EraseAttackPlane(crits[stop],cr);
		}
		stop++;
	}
}
