

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

import uint GetAllPlayers(Critter@[]&crs)from"manager";  

class Starter{
	Starter(string&module,string&func)
	{
		AddStartCallback(module,func);
	}
}  

Starter starter("speed","InitSpeedArray");;

int[]SpeedArray(2000,0);

void InitSpeedArray()
{
	file crTypes;
	if(crTypes.open("./data/CritterTypes.cfg","r")<0)
	return; 
	
	while(!crTypes.isEndOfFile())
	{
		string str;
		crTypes.readLine(str);
		if(str.length()<10||str[0]!=64)
		continue;
		
		string@[]@line=splitEx(str," ");
		
		int num=0,walk=0,run=0;
		if(!StrToInt(line[1],num)||num<0||num>999||!StrToInt(line[37],walk)||!StrToInt(line[38],run))
		continue;
		
		SpeedArray[num*2]=walk;
		SpeedArray[num*2+1]=run; 
		
	}
	
	crTypes.close();
}

void reset()
{
	Critter@[]crs;
	GetAllPlayers(crs);
	
	for(uint i=0,j=crs.length();i<j;i++)
	{
		ChangeCritterSpeed(crs[i]);
	}
}

void reset(Critter&cr,int p0,int p1,int)
{
	reset();
}

void testISA(Critter&cr,int p0,int p1,int)
{
	InitSpeedArray();
	reset();
} 

void ChangeCritterSpeed(Critter&cr)
{
	uint16 run=0,walk=0,healthMod=0;
	int curHp=cr.Stat[(72)],maxHp=cr.Stat[(7)];
	uint carry=cr.Stat[(11)],weight=cr.ItemsWeight(),carryMod=0;
	
	Item@armor=cr.GetItem(0,(3));
	bool apa=false;
	if(@armor!=null)
	{
		uint16 pid=armor.GetProtoId();
		
		apa=(pid==(3)||
		pid==(232)||
		pid==(348)||
		pid==(349));
	}
	
	if(carry==0)
	carry+=1;
	uint weight_cantRun=carry*0.5,
	weight_limitWalk=carry*0.75,
	weight_cantWalk=carry;
	
	bool CanRun=((SpeedArray[cr.CrType*2+1]!=0)&&(weight<weight_cantRun)&&!apa);
	cr.ModeBase[(540)]=(CanRun?0:1);  
	
	if(curHp<=0)
	curHp=1;
	healthMod=uint16(20*maxHp/curHp);   
	
	if(!apa)
	carryMod=uint(400*weight/(carry)); 
	
	uint8 speedMod=cr.StatBase[(120)];
	speedMod=(((speedMod)>(1000))?(1000):(((speedMod)<(1))?(1):(speedMod)));
	
	walk=uint16(SpeedArray[cr.CrType*2]+((weight>weight_limitWalk)?carryMod:0)+healthMod)/(speedMod*0.01);
	run=uint16(SpeedArray[cr.CrType*2+1]+carryMod+healthMod)/(speedMod*0.01); 
	
	walk=(((walk)>(1000))?(1000):(((walk)<(400))?(400):(walk)));
	run=(((run)>(walk))?(walk):(((run)<(200))?(200):(run)));
	
	cr.StatBase[(117)]=walk;
	cr.StatBase[(118)]=run;
}
