

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

import void CreateCell(uint16 x,uint16 y,uint mapId,uint8 type,int8 visibility)from"globalmap_group";
import int GetCellMap(uint16 x,uint16 y)from"globalmap_group";
import void unsafe_arcade(Critter&player,int param0,int param1,int param2,string@param3,int[]@param4)from"arcade_menu";
import string TimeToString(Critter&player)from"gm";
import void ShowInputBoxScreen(Critter&cr,string funcName,uint16 textLength,uint8 flags)from"main";

void _StartMapInit(Map&map,bool firstTime)
{
	map.SetEvent((7),"_crOut");
	map.SetEvent((6),"_crIn");
}

void _ArcadeKindmanInit(Critter&cr,bool firstTime)
{
	cr.StatBase[(104)]=331;
	cr.ModeBase[(539)]=1;
	cr.ModeBase[(540)]=1;
	cr.ModeBase[(511)]=1;
	cr.ModeBase[(514)]=1;
	cr.ModeBase[(527)]=1;
	cr.ModeBase[(536)]=1;
	cr.ModeBase[(513)]=1;
	cr.ModeBase[(537)]=1;
	cr.ParamBase[(701)]=40;
	cr.SetEvent((39),"_ArcadeKindman_talk");
	cr.SetEvent((4),"_Arcade_sight");
}

void _Arcade_sight(Critter&cr,Critter&showCr)
{
	Map@map=cr.GetMap();
	Critter@[]critters;
	if(showCr.IsPlayer()&&showCr.ParamBase[(703)]==(0)&&(map.GetCrittersHex(cr.HexX,cr.HexY,15,(0x03)|(0x10),critters)<=1))
	{
		uint16[]ArcadeSkins={15,16,19,22,23,24,25,51,52,55,58,59,60,65,67,68,80,81,86,97};
		cr.ChangeCrType(ArcadeSkins[Random(0,ArcadeSkins.length())]);
	}
}

bool _ArcadeKindman_talk(Critter&player,Critter&talkCr,bool attach,uint talkCount)
{
	if(talkCr.Param[(703)]==(0))
	{
		talkCr.ShowScreen((2),1,"answer_ArcadeKindman_talk");
		talkCr.Say((18),"НПЦ стоит временно без диалога");
		talkCr.Say((19+(0)),"Войти в игру аркадой");
		talkCr.Say((19+(1)),"Постоять пока тут");
		return false;
	}
	else
	talkCr.Say((11),"Ошибка, обратитесь к ГеймМастерам.");
	return false;
}

void answer_ArcadeKindman_talk(Critter&player,uint answerI,string&answerS)
{
	if(player.Param[(703)]!=(0))
	return;
	if(answerI==0)
	{
		Map@start=GetMapByPid((92),0);
		_crOut(start,player);
		unsafe_arcade(player,0,0,0,null,null);
	}
}

void _SurvivalKindmanInit(Critter&cr,bool firstTime)
{
	cr.StatBase[(104)]=331;
	cr.ModeBase[(539)]=1;
	cr.ModeBase[(540)]=1;
	cr.ModeBase[(511)]=1;
	cr.ModeBase[(514)]=1;
	cr.ModeBase[(527)]=1;
	cr.ModeBase[(536)]=1;
	cr.ModeBase[(513)]=1;
	cr.ModeBase[(537)]=1;
	cr.ParamBase[(701)]=40;
	cr.SetEvent((39),"_SurvivalKindman_talk");
	cr.SetEvent((4),"_Survival_sight");
}

bool _SurvivalKindman_talk(Critter&player,Critter&talkCr,bool attach,uint talkCount)
{
	if(talkCr.ParamBase[(703)]==(0))
	{
		talkCr.ShowScreen((2),1,"answer_SurvivalKindman_talk");
		talkCr.Say((18),"НПЦ стоит временно без диалога");
		talkCr.Say((19+(0)),"В Саттер(БЕТА)");
		talkCr.Say((19+(1)),"Постоять пока тут");
		return false;
	}
	else
	talkCr.Say((11),"Ошибка, обратитесь к ГеймМастерам.");
	return false;
}

void answer_SurvivalKindman_talk(Critter&player,uint answerI,string&answerS)
{
	if(player.ParamBase[(703)]!=(0))
	return;
	if(answerI==0)
	{
		player.ParamBase[(703)]=(2);
		uint LocPid=Random(21,24);
		
		kind_tele2(player,null,LocPid);
	}
}

void _Survival_sight(Critter&cr,Critter&showCr)
{
	Map@map=cr.GetMap();
	Critter@[]critters;
	if(showCr.IsPlayer()&&showCr.ParamBase[(703)]==(0)&&(map.GetCrittersHex(cr.HexX,cr.HexY,15,(0x03)|(0x10),critters)<=1))
	{
		uint16[]GMskins=
		{
			0,1,2,3,5,6,7,8,9,10,12,13,14,15,16,20,21,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,53,57,61,62,63,64,66,
			69,71,72,73,74,75,76,77,78,79,82,83,85,87,88,91,94,95,96,99,103,110,120
		};
		cr.ChangeCrType(GMskins[Random(0,GMskins.length())]);
	}
}

void _InitStartGM(Critter&cr,bool firstTime)
{
	cr.StatBase[(1)]=10;
	cr.StatBase[(104)]=331;
	cr.ShowCritterDist1=15;
	cr.ModeBase[(539)]=1;
	cr.ModeBase[(540)]=1;
	cr.ModeBase[(511)]=1;
	cr.ModeBase[(514)]=1;
	cr.ModeBase[(527)]=1;
	cr.ModeBase[(536)]=1;
	cr.ModeBase[(513)]=1;
	cr.ModeBase[(537)]=1;
	cr.ParamBase[(701)]=40;
	cr.SetEvent((39),"_StartGM_talk");
	cr.SetEvent((4),"_StartGM_sight");
}

void _StartGM_sight(Critter&cr,Critter&showCr)
{
	Map@map=cr.GetMap();
	Critter@[]critters;
	if(showCr.IsPlayer()&&showCr.ParamBase[(703)]==(0)&&(map.GetCrittersHex(cr.HexX,cr.HexY,15,(0x03)|(0x10),critters)<=1))
	{
		uint16[]GMskins=
		{
			0,1,2,3,5,6,7,8,9,10,12,13,14,15,16,20,21,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,53,57,61,62,63,64,66,
			69,71,72,73,74,75,76,77,78,79,82,83,85,87,88,91,94,95,96,99,103,110,120
		};
		cr.ChangeCrType(GMskins[Random(0,GMskins.length())]);
	}
}

bool _StartGM_talk(Critter&player,Critter&talkCr,bool attach,uint talkCount)
{
	if(talkCr.ParamBase[(703)]==(0))
	{
		talkCr.ShowScreen((2),4,"answer_StartGM_talk");
		talkCr.Say((18),"Выберите РЕЖИМ ИГРЫ, рекомендуется сперва посмотреть обучение");
		talkCr.Say((19+(0)),"Обучение");
		talkCr.Say((19+(1)),"Режим выживания");
		talkCr.Say((19+(2)),"Режим приключения");
		talkCr.Say((19+(3)),"Аркадный режим");
		return false;
	}
	else
	talkCr.Say((11),"Ошибка, обратитесь к ГеймМастерам.");
	return false;
}

void answer_StartGM_talk(Critter&player,uint answerI,string&answerS)
{
	if(player.ParamBase[(703)]!=(0))
	{
		player.Say((11),"У вас не стартовый режим.");
		return;
	}
	if(answerI==0)
	{
		Location@loc=GetLocationByPid(90,0);
		Map@map=loc.GetMapByIndex(0);
		Map@start=GetMapByPid((92),0);
		player.Say((11),"Вы выбрали режим обучения.");
		_crOut(start,player);
		player.TransitToMap(map.Id,0);
	}
	if(answerI==1)
	{
		bool tele=false;
		tele=player.TransitToHex(305+Random(-3,3),240+Random(-3,3),0);
		if(!tele)
		player.Say((11),"Попробуйте еще раз.");
		else
		player.Say((11),"Вы выбрали режим выживания.");
	}
	if(answerI==2)
	{
		bool tele2=false;
		tele2=player.TransitToHex(340+Random(-3,3),186+Random(-3,3),0);
		if(!tele2)
		player.Say((11),"Попробуйте еще раз.");
		else
		{
			player.Say((11),"Вы выбрали режим приключения.");
			player.ParamBase[(96)]=0;
			player.ParamBase[(97)]=300;
			player.ParamBase[(77)]=12;
			player.ParamBase[(78)]=0;
			player.ParamBase[(79)]=4;
			player.ParamBase[(7)]+=player.ParamBase[(2)]*4;
		}
	}
	if(answerI==3)
	{
		bool tele=false;
		tele=player.TransitToHex(300+Random(-3,3),140+Random(-3,3),5);
		if(!tele)
		player.Say((11),"Попробуйте еще раз.");
		else
		player.Say((11),"Вы выбрали Аркадный режим.");
	}
}

void _InitAdventureGM(Critter&cr,bool firstTime)
{
	cr.StatBase[(104)]=331;
	cr.ModeBase[(539)]=1;
	cr.ModeBase[(540)]=1;
	cr.ModeBase[(511)]=1;
	cr.ModeBase[(514)]=1;
	cr.ModeBase[(527)]=1;
	cr.ModeBase[(536)]=1;
	cr.ModeBase[(513)]=1;
	cr.ModeBase[(537)]=1;
	cr.ParamBase[(701)]=40;
	cr.SetEvent((39),"_StartAdventureGM_talk");
	
}

void _StartAdventureGM_sight(Critter&cr,Critter&showCr)
{
	Map@map=cr.GetMap();
	Critter@[]critters;
	if(showCr.IsPlayer()&&showCr.ParamBase[(703)]==(0)&&(map.GetCrittersHex(cr.HexX,cr.HexY,15,(0x03)|(0x10),critters)<=1))
	{
		uint16[]GMskins=
		{
			0,1,2,3,5,6,7,8,9,10,12,13,14,15,16,20,21,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,53,57,61,62,63,64,66,
			69,71,72,73,74,75,76,77,78,79,82,83,85,87,88,91,94,95,96,99,103,110,120
		};
		cr.ChangeCrType(GMskins[Random(0,GMskins.length())]);
	}
} 

bool _StartAdventureGM_talk(Critter&player,Critter&talkCr,bool attach,uint talkCount)
{
	GameVar@activation=GetLocalVar((6100),talkCr.Id);
	GameVar@request=GetLocalVar((6101),talkCr.Id);
	
	if(talkCr.ParamBase[(703)]==(0))
	{
		if(activation.GetValue()>request.GetValue())
		{
			talkCr.ShowScreen((2),3,"answer_StartAdventureGM_activ");
			talkCr.Say((18),"Вы АКТИВИРОВАННЫ");
			talkCr.Say((19+(0)),"В Модок");
			talkCr.Say((19+(1)),"В Саттер");
			talkCr.Say((19+(2)),"Править чарлист");
		}
		else if(activation.GetValue()==-1)
		{
			talkCr.ShowScreen((2),1,"answer_StartAdventureGM_unactiv");
			talkCr.Say((18),"Вам отказанно в активации и скорее всего повторно рассматривать не будут.");
			talkCr.Say((19+(0)),"Править чарлист");
			talkCr.Say((19+(1)),"Оставить как есть");
		}
		else if(talkCr.ParamBase[(98)]!=0)
		{
			talkCr.ShowScreen((2),1,"answer_StartAdventureGM_unactiv");
			talkCr.Say((18),"Вы уже подтвердили выбор, правки отзовут реквест активации.");
			talkCr.Say((19+(0)),"Править чарлист");
			talkCr.Say((19+(1)),"Оставить как есть");
		}
		else
		{
			talkCr.ShowScreen((2),10,"answer_StartAdventureGM_talk");
			talkCr.Say((18),"Выберите опцию");
			talkCr.Say((19+(0)),"Настроить персонажа");
			talkCr.Say((19+(1)),"Выбрать расу");
			talkCr.Say((19+(2)),"Ввести доп описание");
			talkCr.Say((19+(3)),"пропуск в Модок");
			talkCr.Say((19+(4)),"вещи");
			talkCr.Say((19+(5)),"особые вещи");
			talkCr.Say((19+(6)),"специальности");
			talkCr.Say((19+(7)),"перки");
			talkCr.Say((19+(8)),"справка");
			talkCr.Say((19+(9)),"Подтвердить");
		}
		return false;
	}
	else
	talkCr.Say((11),"Ошибка, обратитесь к ГеймМастерам.");
	return false;
}

void answer_StartAdventureGM_activ(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	if(answerI==0)
	{
		player.ParamBase[(703)]=(1);
		GameVar@citizenship=GetLocalVar((7300),player.Id);
		if(citizenship.GetValue()==11)
		citizenship.opAssign(2);
		else if(citizenship.GetValue()==12)
		citizenship.opAssign(3);
		else if(citizenship.GetValue()==13)
		{
			citizenship.opAssign(2);
			player.ParamBase[(703)]=(2);
		}
		else
		citizenship.opAssign(0);
		if(citizenship.GetValue()==3)
		{
			Item@pass=player.AddItem((910),1);
			string@name=GetPlayerName(player.Id);
			pass.SetLexems("$ModocRegistrationName"+name);
		}
		kind_tele2(player,null,(21));
	}
	if(answerI==1)
	{
		player.ParamBase[(703)]=(1);
		GameVar@citizenship=GetLocalVar((7300),player.Id);
		if(citizenship.GetValue()==11)
		citizenship.opAssign(2);
		else if(citizenship.GetValue()==12)
		citizenship.opAssign(3);
		else if(citizenship.GetValue()==13)
		{
			citizenship.opAssign(2);
			player.ParamBase[(703)]=(2);
		}
		else
		citizenship.opAssign(0);
		if(citizenship.GetValue()==3)
		{
			Item@pass=player.AddItem((910),1);
			string@name=GetPlayerName(player.Id);
			pass.SetLexems("$ModocRegistrationName"+name);
		}
		kind_tele2(player,null,(21));
	}
	if(answerI==2)
	{
		GameVar@request=GetLocalVar((6101),player.Id);
		request.opAddAssign(1);
		player.ParamBase[(98)]=0;
		file f;
		if(f.open("adventurers\\"+player.Id+".txt","w")>=0)
		{
			f.close();
		}
		player.ShowScreen((2),10,"answer_StartAdventureGM_talk");
		player.Say((18),"Выберите опцию");
		player.Say((19+(0)),"Настроить персонажа");
		player.Say((19+(1)),"Выбрать рассу");
		player.Say((19+(2)),"Ввести доп описание");
		player.Say((19+(3)),"пропуск в Модок");
		player.Say((19+(4)),"вещи");
		player.Say((19+(5)),"особые вещи");
		player.Say((19+(6)),"специальности");
		player.Say((19+(7)),"перки");
		player.Say((19+(8)),"справка");
		player.Say((19+(9)),"Подтвердить");
	}
}

void answer_StartAdventureGM_unactiv(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	if(answerI==0)
	{
		file f;
		if(f.open("adventurers\\"+player.Id+".txt","w")>=0)
		{
			f.close();
		}
		GameVar@request=GetLocalVar((6101),player.Id);
		request.opAddAssign(1);
		player.ParamBase[(98)]=0;
		player.ShowScreen((2),10,"answer_StartAdventureGM_talk");
		player.Say((18),"Выберите опцию");
		player.Say((19+(0)),"Настроить персонажа");
		player.Say((19+(1)),"Выбрать рассу");
		player.Say((19+(2)),"Ввести доп описание");
		player.Say((19+(3)),"пропуск в Модок");
		player.Say((19+(4)),"вещи");
		player.Say((19+(5)),"особые вещи");
		player.Say((19+(6)),"специальности");
		player.Say((19+(7)),"перки");
		player.Say((19+(8)),"справка");
		player.Say((19+(9)),"Подтвердить");
	}
}

void answer_StartAdventureGM_talk(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	if(answerI==0)
	{
		player.ShowScreen((2),4,"answer_StartAdventureGM_talk_STATS");
		player.Say((18),"Параметры игрока");
		player.Say((19+(1)),"SKILLS 0-9");
		player.Say((19+(2)),"SKILLS 10-20");
		player.Say((19+(3)),"Назад");
	}
	if(answerI==1)
	{
		player.ShowScreen((2),6,"answer_StartAdventureGM_talk_RACE");
		player.Say((18),"Выберите Рассу, при выборе человека сбросится на стандартный");
		player.Say((19+(0)),"Человек");
		player.Say((19+(1)),"Гуль-зеленый");
		player.Say((19+(2)),"Гуль-светлый");
		player.Say((19+(3)),"Гуль-светящийся");
		player.Say((19+(4)),"Супермутант");
		player.Say((19+(5)),"Назад");
	}
	if(answerI==2)
	{
		ShowInputBoxScreen(player,"map_start@unsafe_Description#Описание, приметы",0,(0x00000001));
	}
	if(answerI==3)
	{
		string post;
		GameVar@citizenship=GetLocalVar((7300),player.Id);
		if(citizenship.GetValue()==0)
		post="чужак";
		else if(citizenship.GetValue()==11)
		post="гость";
		else if(citizenship.GetValue()==12)
		post="гражданин";
		player.ShowScreen((2),4,"answer_StartAdventureGM_talk_MODOC");
		player.Say((18),"Сейчас вы - "+post);
		player.Say((19+(0)),"Не нужен пропуск");
		player.Say((19+(1)),"Нужен пропуск");
		player.Say((19+(2)),"Нужно гражданство");
		player.Say((19+(3)),"Назад");
	}
	if(answerI==4)
	{
		player.ShowScreen((2),6,"answer_StartAdventureGM_talk_ITEMS");
		player.Say((18),"Вещи для широкого круга ролей");
		player.Say((19+(0)),"оружие");
		player.Say((19+(1)),"броня");
		player.Say((19+(2)),"патроны и крышки");
		player.Say((19+(3)),"инструменты");
		player.Say((19+(4)),"разное");
		player.Say((19+(5)),"назад в меню");
	}
	if(answerI==5)
	{
		player.ShowScreen((2),4,"answer_StartAdventureGM_talk_SPECITEMS");
		player.Say((18),"Вещи для спец ролей, берите ТОЛЬКО если в курсе ограничений, иначе чарсет даже не будут рассматривать");
		player.Say((19+(0)),"экипировка");
		player.Say((19+(1)),"патроны и деньги");
		player.Say((19+(2)),"инструменты");
		player.Say((19+(3)),"назад в меню");
	}
	if(answerI==6)
	{
		player.ShowScreen((2),1,"answer_StartAdventureGM_talk_HELP");
		player.Say((18),"Еще в разработке");
		player.Say((19+(0)),"назад в меню");
	}
	if(answerI==7)
	{
		player.ShowScreen((2),1,"answer_StartAdventureGM_talk_HELP");
		player.Say((18),"Еще в разработке");
		player.Say((19+(0)),"назад в меню");
	}
	if(answerI==8)
	{
		player.ShowScreen((2),1,"answer_StartAdventureGM_talk_HELP");
		player.Say((18),"Форум - www.TNF.net.ru , IRC = forestnet канал #roleplay , обращение к ГМам $help [ваш текст]");
		player.Say((19+(0)),"назад в меню");
	}
	if(answerI==9)
	{
		player.ShowScreen((2),1,"answer_StartAdventureGM_talk_CONFIRM");
		player.Say((18),"Вы уверены в своем выборе?");
		player.Say((19+(0)),"Да, абсолютно");
		player.Say((19+(1)),"Нет.");
	}
}

void answer_StartAdventureGM_talk_HELP(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	if(answerI==0)
	{
		player.ShowScreen((2),10,"answer_StartAdventureGM_talk");
		player.Say((18),"Выберите опцию");
		player.Say((19+(0)),"Настроить персонажа");
		player.Say((19+(1)),"Выбрать рассу");
		player.Say((19+(2)),"Ввести доп описание");
		player.Say((19+(3)),"пропуск в Модок");
		player.Say((19+(4)),"вещи");
		player.Say((19+(5)),"особые вещи");
		player.Say((19+(6)),"специальности");
		player.Say((19+(7)),"перки");
		player.Say((19+(8)),"справка");
		player.Say((19+(9)),"Подтвердить");
	}
}

void answer_StartAdventureGM_talk_SPECITEMS(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	if(answerI==0)
	{
		OpenCrate(player,6);
	}
	if(answerI==1)
	{
		OpenCrate(player,7);
	}
	if(answerI==2)
	{
		OpenCrate(player,8);
	}
	if(answerI==3)
	{
		player.ShowScreen((2),10,"answer_StartAdventureGM_talk");
		player.Say((18),"Выберите опцию");
		player.Say((19+(0)),"Настроить персонажа");
		player.Say((19+(1)),"Выбрать рассу");
		player.Say((19+(2)),"Ввести доп описание");
		player.Say((19+(3)),"пропуск в Модок");
		player.Say((19+(4)),"вещи");
		player.Say((19+(5)),"особые вещи");
		player.Say((19+(6)),"специальности");
		player.Say((19+(7)),"перки");
		player.Say((19+(8)),"справка");
		player.Say((19+(9)),"Подтвердить");
	}
}

void answer_StartAdventureGM_talk_ITEMS(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	if(answerI==0)
	{
		OpenCrate(player,1);
	}
	if(answerI==1)
	{
		OpenCrate(player,2);
	}
	if(answerI==2)
	{
		OpenCrate(player,3);
	}
	if(answerI==3)
	{
		OpenCrate(player,4);
	}
	if(answerI==4)
	{
		OpenCrate(player,5);
	}
	if(answerI==5)
	{
		player.ShowScreen((2),10,"answer_StartAdventureGM_talk");
		player.Say((18),"Выберите опцию");
		player.Say((19+(0)),"Настроить персонажа");
		player.Say((19+(1)),"Выбрать рассу");
		player.Say((19+(2)),"Ввести доп описание");
		player.Say((19+(3)),"пропуск в Модок");
		player.Say((19+(4)),"вещи");
		player.Say((19+(5)),"особые вещи");
		player.Say((19+(6)),"специальности");
		player.Say((19+(7)),"перки");
		player.Say((19+(8)),"справка");
		player.Say((19+(9)),"Подтвердить");
	}
}

void OpenCrate(Critter&player,uint type)
{
	Map@map=GetMapByPid((92),0);
	uint16 x=0,y=0;
	switch(type)
	{
		case(1):
		map.GetEntireCoords(1,0,x,y);
		break;
		case(2):
		map.GetEntireCoords(2,0,x,y);
		break;
		case(3):
		map.GetEntireCoords(3,0,x,y);
		break;
		case(4):
		map.GetEntireCoords(4,0,x,y);
		break;
		case(5):
		map.GetEntireCoords(5,0,x,y);
		break;
		case(6):
		map.GetEntireCoords(6,0,x,y);
		break;
		case(7):
		map.GetEntireCoords(7,0,x,y);
		break;
		case(8):
		map.GetEntireCoords(8,0,x,y);
		break;
		case(9):
		map.GetEntireCoords(9,0,x,y);
		break;
		default:
		break;
	}
	Item@Cont=map.GetItem(x,y,245);
	CheckItems(Cont,type);
	player.ShowContainer(null,Cont,(7));
}

void CheckItems(Item&cont,uint type)
{
	Item@myitem;
	if(type==1)
	{
		uint[]items=
		{
			(1405),
			(1406),
			(1407),
			(1408),
			(1410),
			(1411),
			(1412),
			(1427),
			(1402),
			(1403),
			(299),
			(4),
			(319),
			(7),
			(320),
			(5),
			(20),
			(384),
			(6),
			(386),
			(21),
			(1425),
			(1426),
			(1423),
			(1420),
			(300)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],19,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
	else if(type==2)
	{
		uint[]items=
		{
			(74),
			(1),
			(379),
			(265),
			(1457),
			(113),
			(558),
			(559),
			(585),
			(602)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],19,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
	else if(type==3)
	{
		uint[]items=
		{
			(519),
			(1430),
			(1431),
			(1432),
			(1433),
			(1434),
			(1438)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],199,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
	else if(type==4)
	{
		uint[]items=
		{
			(19),
			(84),
			(597),
			(598),
			(289),
			(543),
			(101),
			(318),
			(127),
			(273),
			(125),
			(1321),
			(1322),
			(1323),
			(1324),
			(1325),
			(1326),
			(1320)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],19,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
	else if(type==5)
	{
		uint[]items=
		{
			(542),
			(532),
			(533),
			(1627),
			(125),
			(315),
			(325),
			(436),
			(333),
			(415),
			(433),
			(56),
			(690),
			(1527),
			(1528),
			(1529),
			(1530),
			(1548),
			(539),
			(541)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],49,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
	else if(type==6)
	{
		uint[]items=
		{
			(1428),
			(1520),
			(16),
			(3983),
			(3984),
			(3985),
			(1401),
			(122),
			(8),
			(18),
			(313),
			(10),
			(1039),
			(23),
			(400),
			(94),
			(385),
			(11),
			(1404),
			(1400),
			(236),
			(522),
			(160),
			(1033),
			(2),
			(380)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],19,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
	else if(type==7)
	{
		uint[]items=
		{
			(41),
			(29),
			(31),
			(111),
			(35),
			(360),
			(121),
			(33),
			(357),
			(34),
			(95),
			(908),
			(1435),
			(361),
			(38),
			(32)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],199,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
	else if(type==8)
	{
		uint[]items=
		{
			(75),
			(410),
			(565),
			(1317),
			(1318),
			(237),
			(102),
			(80),
			(86),
			(76),
			(73),
			(1547),
			(1522)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],49,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
	else if(type==9)
	{
		uint[]items=
		{
			(910),
			(100),
			(584),
			(1454),
			(1455),
			(1456),
			(1458),
			(329),
			(1317),
			(1318),
			(1319),
			(269),
			(308),
			(54),
			(52),
			(59),
			(1502),
			(1503),
			(1504),
			(1505),
			(1506),
			(1507),
			(1508),
			(1509),
			(1510),
			(1511),
			(1517),
			(1519),
			(1680),
			(1681),
			(439),
			(572),
			(1512),
			(356),
			(55),
			(377),
			(98),
			(475),
			(50)
		};
		
		for(uint i=0;i<items.length();i++)
		{
			if(!(@cont.GetItem(items[i],0)!=null))
			{
				@myitem=cont.AddItem(items[i],1,0);
				if(myitem.IsStackable())cont.AddItem(items[i],49,0);
			}
		}
		Item@[]allitems;
		cont.GetItems(-1,allitems);
		for(uint ii=0;ii<allitems.length();ii++)
		{
			if(items.find(allitems[ii].GetProtoId())==-1)DeleteItem(allitems[ii]);
		}
	}
}

void answer_StartAdventureGM_talk_STATS(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;            
	
	if(answerI==1)
	{
		player.ShowScreen((2),12,"answer_StartAdventureGM_talk_STATS_SKILL1");
		player.Say((18),"Навыки игрока, осталось "+player.ParamBase[(97)]+" очков навыков");
		player.Say((19+(0)),""+player.ParamBase[(200)]+" - легкое");
		player.Say((19+(1)),""+player.ParamBase[(201)]+" - тяжелое");
		player.Say((19+(2)),""+player.ParamBase[(202)]+" - энерго");
		player.Say((19+(3)),""+player.ParamBase[(203)]+" - рукопашная");
		player.Say((19+(4)),""+player.ParamBase[(204)]+" - холодное");
		player.Say((19+(5)),""+player.ParamBase[(205)]+" - метание");
		player.Say((19+(6)),""+player.ParamBase[(206)]+" - санитар");
		player.Say((19+(7)),""+player.ParamBase[(207)]+" - доктор");
		player.Say((19+(8)),""+player.ParamBase[(208)]+" - скрытность");
		player.Say((19+(9)),""+player.ParamBase[(209)]+" - взлом");
		player.Say((19+(10)),""+player.ParamBase[(210)]+" - кража");
		player.Say((19+(11)),"Назад");
	}
	if(answerI==2)
	{
		player.ShowScreen((2),8,"answer_StartAdventureGM_talk_STATS_SKILL2");
		player.Say((18),"Навыки игрока, осталось "+player.ParamBase[(97)]+" очков навыков");
		player.Say((19+(0)),""+player.ParamBase[(211)]+" - ловушки");
		player.Say((19+(1)),""+player.ParamBase[(212)]+" - наука");
		player.Say((19+(2)),""+player.ParamBase[(213)]+" - ремонт");
		player.Say((19+(3)),""+player.ParamBase[(214)]+" - разговор");
		player.Say((19+(4)),""+player.ParamBase[(215)]+" - торговля");
		player.Say((19+(5)),""+player.ParamBase[(216)]+" - игра");
		player.Say((19+(6)),""+player.ParamBase[(217)]+" - скиталец");
		player.Say((19+(7)),"Назад");
	}
	if(answerI==3)
	{
		player.ShowScreen((2),10,"answer_StartAdventureGM_talk");
		player.Say((18),"Выберите опцию");
		player.Say((19+(0)),"Настроить персонажа");
		player.Say((19+(1)),"Выбрать рассу");
		player.Say((19+(2)),"Ввести доп описание");
		player.Say((19+(3)),"пропуск в Модок");
		player.Say((19+(4)),"вещи");
		player.Say((19+(5)),"особые вещи");
		player.Say((19+(6)),"специальности");
		player.Say((19+(7)),"перки");
		player.Say((19+(8)),"справка");
		player.Say((19+(9)),"Подтвердить");
	}
}

void ask_StartAdventureGM_talk_STATS_SPECIAL(Critter&player,uint answerI,string&answerS)
{
	int parameter=player.Stat[(91)];
	if(!(@player!=null))
	return;
	if(answerS.length()>0)
	{
		int number=0;
		StrToInt(answerS,number);
		if(parameter>=0&&parameter<=6)
		{
			if(number>10||number<1)
			player.Say((11),"недопустимое значение");
			else if(player.ParamBase[(96)]-number+player.ParamBase[parameter]<0)
			player.Say((11),"недоcтаточно очков");
			else
			{
				player.ParamBase[(96)]-=number-player.ParamBase[parameter];
				player.ParamBase[parameter]=number;
				player.Say((11),"вы изменили параметр");
			}
		}
		if(parameter>=200&&parameter<=217)
		{
			if(number>300)
			player.Say((11),"недопустимое значение");
			else if(number<30)
			player.Say((11),"нельзя указывать значение навыка меньше 35");
			else if(player.ParamBase[(97)]-number+player.ParamBase[parameter]<0)
			player.Say((11),"недоcтаточно очков навыков");
			else
			{
				player.ParamBase[(97)]-=number-player.ParamBase[parameter];
				player.ParamBase[parameter]=number;
				player.Say((11),"вы изменили параметр");
			}
		}
		if(parameter==3&&player.ParamBase[parameter]<=3)
		{
			player.ShowScreen((2),1,"answer_StartAdventureGM_talk_STATS_SPECIAL_POWERBUILD");
			player.Say((18),"к персонажам с низкой харизмой другие игроки относятся с неприязнью, убедитесь что это соответствует роли");
			player.Say((19+(0)),"к параметрам");
		}
		else if(parameter>=0&&parameter<=6&&(player.ParamBase[parameter]>=9||player.ParamBase[parameter]<=2))
		{
			player.ShowScreen((2),1,"answer_StartAdventureGM_talk_POWERBUILD");
			player.Say((18),"значение параметра граничное, убедитесь что это важно по роли, иначе активация маловероятна");
			player.Say((19+(0)),"к параметрам");
		}
		else if(parameter==211&&player.ParamBase[parameter]>=50)
		{
			player.ShowScreen((2),1,"answer_StartAdventureGM_talk_POWERBUILD");
			player.Say((18),"навык ловушек больше 50, убедитесь что по роли вам это необходимо и история персонажа соответствует, иначе активация маловероятна");
			player.Say((19+(0)),"к параметрам");
		}
		else if(parameter==210&&player.ParamBase[parameter]>=50)
		{
			player.ShowScreen((2),1,"answer_StartAdventureGM_talk_POWERBUILD");
			player.Say((18),"воровство больше 50, убедитесь что по роли вам это необходимо и история персонажа соответствует, иначе активация маловероятна");
			player.Say((19+(0)),"к параметрам");
		}
		else if(parameter==209&&player.ParamBase[parameter]>=50)
		{
			player.ShowScreen((2),1,"answer_StartAdventureGM_talk_POWERBUILD");
			player.Say((18),"взлом больше 50, допустим только для ролей преступников и детективов, убедитесь что персонаж соответствует, иначе активация маловероятна");
			player.Say((19+(0)),"к параметрам");
		}
		else if(parameter==212&&player.ParamBase[parameter]>=80)
		{
			player.ShowScreen((2),1,"answer_StartAdventureGM_talk_POWERBUILD");
			player.Say((18),"значение науки больше 80, допустимо только для образованных персонажей, убедитесь что роль соответствует");
			player.Say((19+(0)),"к параметрам");
		}
		else if(parameter==213&&player.ParamBase[parameter]>=80)
		{
			player.ShowScreen((2),1,"answer_StartAdventureGM_talk_POWERBUILD");
			player.Say((18),"значение ремонта больше 80, допустимо только для профильных персонажей, часто занимающихся техникой, убедитесь что роль соответствует");
			player.Say((19+(0)),"к параметрам");
		}
		else if(parameter>=200&&parameter<=217&&player.ParamBase[parameter]>=160)
		{
			player.ShowScreen((2),1,"answer_StartAdventureGM_talk_POWERBUILD");
			player.Say((18),"значение навыка больше 160, допустимо только для узкоспециализированных в этой области персонажей, убедитесь что роль соответствует");
			player.Say((19+(0)),"к параметрам");
		}            
		
		else if(parameter>=200&&parameter<=210)
		{
			player.ShowScreen((2),12,"answer_StartAdventureGM_talk_STATS_SKILL1");
			player.Say((18),"Навыки игрока, осталось "+player.ParamBase[(97)]+" очков навыков");
			player.Say((19+(0)),""+player.ParamBase[(200)]+" - легкое");
			player.Say((19+(1)),""+player.ParamBase[(201)]+" - тяжолое");
			player.Say((19+(2)),""+player.ParamBase[(202)]+" - энерго");
			player.Say((19+(3)),""+player.ParamBase[(203)]+" - рукопашная");
			player.Say((19+(4)),""+player.ParamBase[(204)]+" - холодное");
			player.Say((19+(5)),""+player.ParamBase[(205)]+" - метание");
			player.Say((19+(6)),""+player.ParamBase[(206)]+" - санитар");
			player.Say((19+(7)),""+player.ParamBase[(207)]+" - доктор");
			player.Say((19+(8)),""+player.ParamBase[(208)]+" - скрытность");
			player.Say((19+(9)),""+player.ParamBase[(209)]+" - взлом");
			player.Say((19+(10)),""+player.ParamBase[(210)]+" - кража");
			player.Say((19+(11)),"Назад");
		}
		if(parameter>=211&&parameter<=217)
		{
			player.ShowScreen((2),8,"answer_StartAdventureGM_talk_STATS_SKILL2");
			player.Say((18),"Навыки игрока, осталось "+player.ParamBase[(97)]+" очков навыков");
			player.Say((19+(0)),""+player.ParamBase[(211)]+" - ловушки");
			player.Say((19+(1)),""+player.ParamBase[(212)]+" - наука");
			player.Say((19+(2)),""+player.ParamBase[(213)]+" - ремонт");
			player.Say((19+(3)),""+player.ParamBase[(214)]+" - разговор");
			player.Say((19+(4)),""+player.ParamBase[(215)]+" - торговля");
			player.Say((19+(5)),""+player.ParamBase[(216)]+" - игра");
			player.Say((19+(6)),""+player.ParamBase[(217)]+" - скиталец");
			player.Say((19+(7)),"Назад");
		}
	}
}

void answer_StartAdventureGM_talk_POWERBUILD(Critter&player,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		player.ShowScreen((2),4,"answer_StartAdventureGM_talk_STATS");
		player.Say((18),"Параметры игрока");
		
		player.Say((19+(1)),"SKILLS 0-9");
		player.Say((19+(2)),"SKILLS 10-20");
		player.Say((19+(3)),"Назад");
	}
} 

void answer_StartAdventureGM_talk_STATS_SKILL2(Critter&player,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		player.ParamBase[(91)]=211;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Ловушки");
	}
	if(answerI==1)
	{
		player.ParamBase[(91)]=212;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Наука");
	}
	if(answerI==2)
	{
		player.ParamBase[(91)]=213;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Ремонт");
	}
	if(answerI==3)
	{
		player.ParamBase[(91)]=214;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Разговор");
	}
	if(answerI==4)
	{
		player.ParamBase[(91)]=215;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Торговля");
	}
	if(answerI==5)
	{
		player.ParamBase[(91)]=216;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Азартные игры");
	}
	if(answerI==6)
	{
		player.ParamBase[(91)]=217;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Скиталец");
	}
	if(answerI==7)
	{
		player.ShowScreen((2),3,"answer_StartAdventureGM_talk_STATS");
		player.Say((18),"Параметры игрока");
		
		player.Say((19+(1)),"SKILLS 0-9");
		player.Say((19+(2)),"SKILLS 10-20");
		player.Say((19+(3)),"Назад");
	}
}

void answer_StartAdventureGM_talk_STATS_SKILL1(Critter&player,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		player.ParamBase[(91)]=200;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Легкоге");
	}
	if(answerI==1)
	{
		player.ParamBase[(91)]=201;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Тяжелое");
	}
	if(answerI==2)
	{
		player.ParamBase[(91)]=202;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Энерго");
	}
	if(answerI==3)
	{
		player.ParamBase[(91)]=203;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Рукопашная");
	}
	if(answerI==4)
	{
		player.ParamBase[(91)]=204;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Холодное");
	}
	if(answerI==5)
	{
		player.ParamBase[(91)]=205;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Метание");
	}
	if(answerI==6)
	{
		player.ParamBase[(91)]=206;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Санитар");
	}
	if(answerI==7)
	{
		player.ParamBase[(91)]=207;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Доктор");
	}
	if(answerI==8)
	{
		player.ParamBase[(91)]=208;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Скрытность");
	}
	if(answerI==9)
	{
		player.ParamBase[(91)]=209;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Взлом");
	}
	if(answerI==10)
	{
		player.ParamBase[(91)]=210;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Воровство");
	}
	if(answerI==11)
	{
		player.ShowScreen((2),3,"answer_StartAdventureGM_talk_STATS");
		player.Say((18),"Параметры игрока");
		
		player.Say((19+(1)),"SKILLS 0-9");
		player.Say((19+(2)),"SKILLS 10-20");
		player.Say((19+(3)),"Назад");
	}
}

void answer_StartAdventureGM_talk_STATS_SPECIAL(Critter&player,uint answerI,string&answerS)
{
	if(answerI==0)
	{
		player.ParamBase[(91)]=0;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Сила");
	}
	if(answerI==1)
	{
		player.ParamBase[(91)]=1;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Восприятие");
	}
	if(answerI==2)
	{
		player.ParamBase[(91)]=2;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Выносливость");
	}
	if(answerI==3)
	{
		player.ParamBase[(91)]=3;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Харизма");
	}
	if(answerI==4)
	{
		player.ParamBase[(91)]=4;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Интеллект");
	}
	if(answerI==5)
	{
		player.ParamBase[(91)]=5;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Ловкость");
	}
	if(answerI==6)
	{
		player.ParamBase[(91)]=6;
		player.ShowScreen((5),0,"map_start@ask_StartAdventureGM_talk_STATS_SPECIAL");
		player.Say((39),"Удача");
	}
	if(answerI==7)
	{
		player.ShowScreen((2),3,"answer_StartAdventureGM_talk_STATS");
		player.Say((18),"Параметры игрока");
		
		player.Say((19+(1)),"SKILLS 0-9");
		player.Say((19+(2)),"SKILLS 10-20");
		player.Say((19+(3)),"Назад");
	}
}

void unsafe_Description(Critter&player,int skill,int p1,int p2,string@message,int[]@p4)
{
	if(message.length()!=0)
	{
		player.SetLexems(message);
		player.ShowScreen((2),10,"answer_StartAdventureGM_talk");
		player.Say((18),"Выберите опцию");
		player.Say((19+(0)),"Настроить персонажа");
		player.Say((19+(1)),"Выбрать рассу");
		player.Say((19+(2)),"Ввести доп описание");
		player.Say((19+(3)),"пропуск в Модок");
		player.Say((19+(4)),"вещи");
		player.Say((19+(5)),"особые вещи");
		player.Say((19+(6)),"специальности");
		player.Say((19+(7)),"перки");
		player.Say((19+(8)),"справка");
		player.Say((19+(9)),"Подтвердить");
	}
}

void answer_StartAdventureGM_talk_CONFIRM(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	if(answerI==0)
	{
		ShowInputBoxScreen(player,"map_start@unsafe_Kventa#Ссылка на квенту",0,(0x00000001));
	}
}

void unsafe_Kventa(Critter&player,int skill,int p1,int p2,string@message,int[]@p4)
{
	if(message.length()!=0)
	{
		Item@[]allitems;
		player.GetItems(-1,allitems);
		
		string date=TimeToString(player);
		string race="";
		player.ParamBase[(98)]=1;
		if(player.ParamBase[(67)]==(4))
		race="Гуль";
		else if(player.ParamBase[(67)]==(3))
		race="Супермутант";
		else
		race="Человек";
		string pass="";
		GameVar@citizenship=GetLocalVar((7300),player.Id);
		if(citizenship.GetValue()==0)
		pass="чужак";
		else if(citizenship.GetValue()==11)
		pass="гость";
		else if(citizenship.GetValue()==12)
		pass="гражданин";
		GameVar@request=GetLocalVar((6101),player.Id);
		GameVar@TotalPlayers=GetGlobalVar((4));
		if(TotalPlayers.GetValue()<player.Id)
		TotalPlayers.opAssign(player.Id);
		request.opAddAssign(1);
		file f;
		if(f.open("adventurers\\"+player.Id+".txt","w")>=0)
		{
			f.writeString(request.GetValue()+"\n"+
			race+"\n"+
			date+"  -  "+pass+"\n"+
			GetPlayerName(player.Id)+"\n"+
			message+"\n"+
			player.ParamBase[0]+"\n"+
			player.ParamBase[1]+"\n"+
			player.ParamBase[2]+"\n"+
			player.ParamBase[3]+"\n"+
			player.ParamBase[4]+"\n"+
			player.ParamBase[5]+"\n"+
			player.ParamBase[6]+"\n"+"\n"+
			player.ParamBase[200]+"\n"+
			player.ParamBase[201]+"\n"+
			player.ParamBase[202]+"\n"+
			player.ParamBase[203]+"\n"+
			player.ParamBase[204]+"\n"+
			player.ParamBase[205]+"\n"+
			player.ParamBase[206]+"\n"+
			player.ParamBase[207]+"\n"+
			player.ParamBase[208]+"\n"+
			player.ParamBase[209]+"\n"+
			player.ParamBase[210]+"\n"+
			player.ParamBase[211]+"\n"+
			player.ParamBase[212]+"\n"+
			player.ParamBase[213]+"\n"+
			player.ParamBase[214]+"\n"+
			player.ParamBase[215]+"\n"+
			player.ParamBase[216]+"\n"+
			player.ParamBase[217]+"\n"+"\n"+"Инвентарь"+"\n");
			
			Item@[]items;
			player.GetItems((3),items);
			player.GetItems((1),items);
			player.GetItems((2),items);
			player.GetItems((0),items);
			for(uint i=0;i<items.length();i++)
			{
				f.writeString(items[i].GetCount()+"\n");
				f.writeString(items[i].GetProtoId()+"\n");
			}
			f.writeString(12345+"\n");
			f.close();
		}
	}
}

void answer_StartAdventureGM_talk_MODOC(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	GameVar@citizenship=GetLocalVar((7300),player.Id);
	if(answerI==0)
	{
		citizenship.opAssign(0);
		player.Say((11),"Теперь вы чужой в Модоке.");
	}
	if(answerI==1)
	{
		citizenship.opAssign(11);
		player.Say((11),"Теперь вы гость в Модоке.");
	}
	if(answerI==2)
	{
		citizenship.opAssign(12);
		player.Say((11),"Теперь вы гражданин Модока.");
	}
}

void answer_StartAdventureGM_talk_RACE(Critter&player,uint answerI,string&answerS)
{
	if(player is null)
	return;
	if(answerI==0)
	{
		Item@[]items;
		player.GetItems((3),items);
		player.GetItems((1),items);
		player.GetItems((2),items);
		DeleteItems(items);
		player.StatBase[(183)]=0;
		player.StatBase[(7)]=0;
		player.ParamBase[(314)]=0;
		if(player.Stat[(71)]==(0))
		{
			player.ParamBase[(67)]=(0);
			player.ChangeCrType(69);
		}
		else
		{
			player.ParamBase[(67)]=(1);
			player.ChangeCrType(74);
		}
		player.StatBase[(112)]=0;
		player.Say((11),"Теперь вы выглядите...  нормально.");
		
	}
	if(answerI==1)
	{
		Item@[]items;
		player.GetItems((3),items);
		player.GetItems((1),items);
		player.GetItems((2),items);
		DeleteItems(items);
		player.StatBase[(183)]=3;
		player.StatBase[(7)]=100;
		player.ParamBase[(314)]=0;
		player.ParamBase[(67)]=(4);
		player.ChangeCrType(28);
		player.StatBase[(112)]=28;
		player.Say((11),"Теперь вы выглядите...  страннее.");
	}
	if(answerI==2)
	{
		Item@[]items;
		player.GetItems((3),items);
		player.GetItems((1),items);
		player.GetItems((2),items);
		DeleteItems(items);
		player.StatBase[(183)]=3;
		player.StatBase[(7)]=100;
		player.ParamBase[(314)]=0;
		player.ParamBase[(67)]=(4);
		player.ChangeCrType(79);
		player.StatBase[(112)]=79;
		player.Say((11),"Теперь вы выглядите...  страннее.");
	}
	if(answerI==3)
	{
		Item@[]items;
		player.GetItems((3),items);
		player.GetItems((1),items);
		player.GetItems((2),items);
		DeleteItems(items);
		player.StatBase[(183)]=3;
		player.StatBase[(7)]=100;
		player.ParamBase[(314)]=0;
		player.ParamBase[(67)]=(4);
		player.ChangeCrType(29);
		player.StatBase[(112)]=29;
		player.Say((11),"Теперь вы выглядите...  страннее.");
	}
	if(answerI==4)
	{
		Item@[]items;
		player.GetItems((3),items);
		player.GetItems((1),items);
		player.GetItems((2),items);
		DeleteItems(items);
		player.StatBase[(183)]==3;
		player.StatBase[(7)]=100;
		player.ParamBase[(314)]=3;
		player.ParamBase[(67)]=(3);
		player.ChangeCrType(21);
		player.StatBase[(112)]=21;
		player.Say((11),"Теперь вы выглядите...  сильнее.");
	}
	if(answerI==5)
	{
		player.ShowScreen((2),10,"answer_StartAdventureGM_talk");
		player.Say((18),"Выберите опцию");
		player.Say((19+(0)),"Настроить персонажа");
		player.Say((19+(1)),"Выбрать рассу");
		player.Say((19+(2)),"Ввести доп описание");
		player.Say((19+(3)),"пропуск в Модок");
		player.Say((19+(4)),"вещи");
		player.Say((19+(5)),"особые вещи");
		player.Say((19+(6)),"специальности");
		player.Say((19+(7)),"перки");
		player.Say((19+(8)),"справка");
		player.Say((19+(9)),"Подтвердить");
	}
}

void r_toHex(Critter&master,Critter@slave,int val)
{
	Map@map=master.GetMap();
	
	if(map is null)
	return;
	
	uint16 hexX=0,hexY=0;
	
	if(!map.GetEntireCoords(val,0,hexX,hexY))
	return;
	
	master.TransitToHex(hexX,hexY,5);
}

void kind_tele2(Critter&master,Critter@slave,int val)
{
	if(not(@master!=null))
	return;
	
	Location@loc=GetLocationByPid(val,0);
	if(not(@loc!=null))
	{
		slave.Say((11),"Location not found");
		return;
	}
	
	Map@map=loc.GetMapByIndex(0);
	if(not(@map!=null))
	{
		master.Say((11),"Map index not found");
		return;
	}
	
	if(master.GetAccess()==(0))
	{
		Item@[]items;
		master.GetItems((0),items);
		master.GetItems((1),items);
		master.GetItems((2),items);
		DeleteItems(items);
	}
	
	if(master.ParamBase[(703)]==(1))
	{
		file f;
		if(f.open("adventurers\\"+master.Id+".txt","r")>=0)
		{
			Item@item;
			string text="";
			uint pos=0;
			uint line=0;
			int number=0;
			int count=0;
			bool isCount=true;
			f.setPos(0);
			while(!f.isEndOfFile())
			{
				line++;
				f.readLine(text);
				text.resize(text.length()-1);
				StrToInt(text,number);
				if(line>=6&&line<=12)
				{
					master.ParamBase[line-6]=number;
				}
				else if(line>=14&&line<=31)
				{
					master.ParamBase[line+186]=number;
				}
				else if(line>=34)
				{
					Log("line="+line+" , num="+number);
					if(number==12345)break;
					if(isCount)
					{
						count=number;
						isCount=false;
					}
					else
					{
						@item=master.AddItem(number,count);
						if(item.AmmoCount!=0)item.AmmoCount=0;
						isCount=true;
					}
				}
			}
			f.close();
		}
		else return;
	}
	
	master.ToKnockout((((Random(0,1)==1))?(82):(83)),(((Random(0,1)==1))?(86):(87)),(((Random(0,1)==1))?(88):(89)),10,master.HexX,master.HexY);
	
	uint16 hexX=0,hexY=0,hexX0=0,hexY0=0;
	map.GetEntireCoords(255,0,hexX0,hexY0);
	
	for(uint i=0;i<10;i++)
	{
		hexX=hexX0+Random(20,130);
		hexY=hexY0+Random(130,150);
		if(map.GetCrittersHex(hexX,hexY,10,(0x01)|(0x20),null)==0)break;
	}
	
	master.SetEvent((19),null);
	master.SetEvent((23),null);
	master.SetEvent((15),null);
	master.SetEvent((2),null);
	
	Map@start=GetMapByPid((92),0);
	master.TransitToMap(map.Id,hexX,hexY,0);
	master.Say((11),"Вы пришли в себя в руинах какого-то города. Чутье подсказывает, что в Центральном районе есть другие люди..");
}

void _crIn(Map&map,Critter&cr)
{
	if(cr.IsPlayer()&&cr.GetAccess()==(0))
	{
		
		cr.SetEvent((19),"_Start_Player_use");
		cr.SetEvent((23),"_Start_Player_drop");
		cr.SetEvent((15),"_Start_Player_attack");
		cr.SetEvent((2),"_Start_Player_dead");
	}
}

void _crOut(Map&map,Critter&cr)
{
	if(cr.IsPlayer()&&cr.GetAccess()>(0))
	{
		cr.SetEvent((19),null);
		cr.SetEvent((23),null);
		cr.SetEvent((15),null);
		cr.SetEvent((2),null);
		
	}
	else if(cr.ParamBase[(703)]==(0))
	{
		Item@[]items;
		cr.GetItems((0),items);
		cr.GetItems((1),items);
		cr.GetItems((2),items);
		DeleteItems(items);
	}
}

void _Start_Player_dead(Critter&cr,Critter@killer)
{
	Map@start=GetMapByPid((92),0);
	_crOut(start,cr);
	Item@[]items;
	cr.GetItems((3),items);
	cr.GetItems((0),items);
	cr.GetItems((1),items);
	cr.GetItems((2),items);
	DeleteItems(items);
}

void _Start_Player_drop(Critter&cr,Item&item)
{
	cr.Say((11),"Предмет был поглощен пустотой.");
	if((@item!=null))
	DeleteItem(item);
}

bool _Start_Player_attack(Critter&cr,Critter&target)
{
	cr.Say((11),"Вам кажется сейчас это неуместо.");
	return true;
}

bool _Start_Player_use(Critter&cr,Item&item,Critter@onCritter,Item@onItem,Scenery@onScenery)
{
	cr.Say((11),"Вам кажется сейчас это неуместо.");
	return true;
}
