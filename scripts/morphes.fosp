  

import bool IsHuman(Critter&cr)from"races

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

uint __GetColor(int r,int g,int b)
{
	r=(((r)>(255))?(255):(((r)<(0))?(0):(r)));
	g=(((g)>(255))?(255):(((g)<(0))?(0):(g)));
	b=(((b)>(255))?(255):(((b)<(0))?(0):(b)));
	return(uint((0xFF<<24)|(((r)&0xFF)<<16)|(((g)&0xFF)<<8)|((b)&0xFF)));
}

uint __GetGradient(uint colorStart,uint colorEnd,uint8 pos)
{
	pos=(((pos)>(100))?(100):(((pos)<(1))?(1):(pos)));
	
	int aS=(colorStart>>24)&0xFF,
	rS=((colorStart>>16)&0xFF),
	gS=((colorStart>>8)&0xFF),
	bS=((colorStart)&0xFF),
	
	aE=(colorEnd>>24)&0xFF,
	rE=((colorEnd>>16)&0xFF),
	gE=((colorEnd>>8)&0xFF),
	bE=((colorEnd)&0xFF); 
	
	rS=(((rE-int(rS*(pos*0.01)))>0)?(rE-int(rS*(pos*0.01))):-(rE-int(rS*(pos*0.01))));
	gS=(((gE-int(gS*(pos*0.01)))>0)?(gE-int(gS*(pos*0.01))):-(gE-int(gS*(pos*0.01))));
	bS=(((bE-int(bS*(pos*0.01)))>0)?(bE-int(bS*(pos*0.01))):-(bE-int(bS*(pos*0.01))));
	
	return __GetColor(rS,gS,bS);
}

uint __GetColor(uint8&a,uint8&r,uint8&g,uint8&b,uint color){
	a=(color>>24)&0xFF;
	r=((color>>16)&0xFF);
	g=((color>>8)&0xFF);
	b=((color)&0xFF);
	
	return 0;
}                                          

import void DropRadiation(Critter&cr)from"radiation";
import void FlushScreen(Critter&cr,uint fromColor,uint toColor,uint timeMs)from"effects"; 

void ApplyMutation(Critter&cr)
{
	if(!IsHuman(cr))
	return;
	uint roll=Random(1,100)-cr.Stat[(6)];
	if(cr.Stat[(183)]>2)
	return;
	if(roll==51)
	{
		cr.AddTimeEvent("cte_superman",60*60,(7));
	}
	else if(roll<100)
	{
		cr.AddTimeEvent("cte_mutation",60*60,(7));
	}
	else
	cr.AddTimeEvent("cte_deadman",60*60,(7));
}

void GM_ApplyDesease(Critter&player,int param0,int param1,int param2,string@param3,int[]@param4)
{
	Critter@cr=GetCritter(param0);
	GameVar@strain=GetGlobalVar((9970));
	if(cr.Stat[(187)]>=strain.GetValue()&&cr.Stat[(64)]==0)
	{
		player.Say((11),"игрок иммунен");
		return;
	}
	if(cr.GetTimeEvents((7),null,null,null)==0)
	{
		cr.AddTimeEvent("cte_desease",60,(7));
		cr.StatBase[(187)]=strain.GetValue();
		cr.StatBase[(64)]+=1;
		player.Say((11),"Заражен персонаж "+cr.Id);
	}
	else
	player.Say((11),"игрок уже заражен");
}

void ApplyDesease(Critter&player,int param0,int param1)
{
	Critter@cr=GetCritter(param0);
	GameVar@strain=GetGlobalVar((9970));
	if(param1==0)
	param1=strain.GetValue();
	if(cr.Stat[(187)]>=param1&&cr.Stat[(64)]==0)
	return;
	if(cr.GetTimeEvents((7),null,null,null)==0)
	{
		cr.StatBase[(187)]=param1;
		cr.StatBase[(64)]+=1;
		cr.AddTimeEvent("cte_desease",60,(7));
	}
}

void GM_ApplyFastMutation(Critter&player,int param0,int param1,int param2,string@param3,int[]@param4)
{
	Critter@cr=GetCritter(param0);
	if(!IsHuman(cr)||!(@cr!=null))
	return;
	if(cr.Stat[(183)]>2)
	return;
	cr.StatBase[(0)]+=Random(0,3);
	cr.StatBase[(4)]-=Random(0,2);
	cr.StatBase[(7)]+=Random(0,50);
	cr.StatBase[(3)]-=Random(0,2);
	cr.StatBase[(5)]-=Random(0,1);
	cr.StatBase[(0)]+=Random(0,3);
	cr.StatBase[(4)]-=Random(0,2);
	cr.StatBase[(7)]+=Random(0,50);
	cr.StatBase[(3)]-=Random(0,2);
	cr.StatBase[(5)]-=Random(0,1);
	cr.ParamBase[(201)]+=Random(50,100);
	cr.ParamBase[(203)]+=Random(50,100);
	cr.StatBase[(0)]+=Random(1,5);
	cr.StatBase[(4)]-=Random(1,4);
	cr.StatBase[(2)]+=Random(4,8);
	cr.StatBase[(7)]+=Random(50,150);
	cr.StatBase[(3)]-=Random(1,4);
	cr.StatBase[(72)]=cr.Stat[(7)];
	cr.StatBase[(11)]+=Random(5000,15000);
	cr.StatBase[(5)]-=Random(1,2);
	FlushScreen(cr,((uint((0xFF<<24)|(((0xFF)&0xFF)<<16)|(((0xFF)&0xFF)<<8)|((0xFF)&0xFF)))),((uint((0xFF<<24)|(((0xFF)&0xFF)<<16)|(((0xFF)&0xFF)<<8)|((0xFF)&0xFF)))),10000);
	cr.ParamBase[(67)]=(3);
	cr.ChangeCrType(21);
	cr.StatBase[(112)]=21;
	cr.SayMsg((11),(3),12960);
	cr.StatBase[(183)]==3;
}

void GM_ApplyGhoul(Critter&player,int param0,int param1,int param2,string@param3,int[]@param4)
{
	Critter@cr=GetCritter(param0);
	if(!IsHuman(cr)||!(@cr!=null))
	return;
	ApplyGhoul(cr);
}

void ApplyGhoul(Critter&cr)
{
	uint newSkin=Random(28,29);
	if(newSkin==29)
	newSkin+=50;
	FlushScreen(cr,((uint((0xFF<<24)|(((0xFF)&0xFF)<<16)|(((0xFF)&0xFF)<<8)|((0xFF)&0xFF)))),((uint((0xFF<<24)|(((0xFF)&0xFF)<<16)|(((0xFF)&0xFF)<<8)|((0xFF)&0xFF)))),10000);
	cr.StatBase[(183)]=3;
	cr.StatBase[(0)]-=Random(1,4);
	cr.StatBase[(1)]+=Random(3,6);
	cr.StatBase[(11)]-=Random(10,50);
	cr.StatBase[(3)]-=Random(1,4);
	cr.StatBase[(2)]+=Random(4,8);
	cr.StatBase[(5)]-=Random(1,3);
	cr.ParamBase[(67)]=(4);
	cr.ChangeCrType(newSkin);
	cr.StatBase[(112)]=newSkin;
	cr.SayMsg((11),(3),12960);
	DropRadiation(cr);
}

uint cte_mutation(Critter&cr,int identifier,uint&rate)
{
	if((cr.Stat[(74)]+Random(0,400))>800)
	{
		ApplyGhoul(cr);
		return 0;
	}
	if((cr.Stat[(2)]+cr.Stat[(6)]+Random(1,10))>24)
	{
		cr.SayMsg((11),(3),12970);
		return 0;
	}
	else
	{
		if(cr.Stat[(183)]<2)
		{
			cr.StatBase[(0)]+=Random(0,3);
			cr.StatBase[(4)]-=Random(0,2);
			cr.StatBase[(7)]+=Random(0,50);
			cr.StatBase[(3)]-=Random(0,2);
			cr.StatBase[(72)]=cr.Stat[(7)];
			cr.StatBase[(5)]-=Random(0,1);
			cr.SayMsg((11),(3),Random(12971,12975));
			cr.StatBase[(183)]++;
			return Random(120,240)*60;
		}
		else
		{
			cr.ParamBase[(201)]+=Random(50,100);
			cr.ParamBase[(203)]+=Random(50,100);
			cr.StatBase[(0)]+=Random(1,5);
			cr.StatBase[(4)]-=Random(1,4);
			cr.StatBase[(2)]+=Random(4,8);
			cr.StatBase[(7)]+=Random(50,150);
			cr.StatBase[(3)]-=Random(1,4);
			cr.StatBase[(72)]=cr.Stat[(7)];
			cr.StatBase[(11)]+=Random(5000,15000);
			cr.StatBase[(5)]-=Random(1,2);
			FlushScreen(cr,((uint((0xFF<<24)|(((0xFF)&0xFF)<<16)|(((0xFF)&0xFF)<<8)|((0xFF)&0xFF)))),((uint((0xFF<<24)|(((0xFF)&0xFF)<<16)|(((0xFF)&0xFF)<<8)|((0xFF)&0xFF)))),10000);
			cr.ParamBase[(67)]=(3);
			cr.ChangeCrType(21);
			cr.StatBase[(112)]=21;
			cr.SayMsg((11),(3),12960);
			cr.StatBase[(183)]==3;
			return 0;
		}
	}
}

uint cte_desease(Critter&cr,int identifier,uint&rate)
{
	GameVar@strain=GetGlobalVar((9970));
	if(cr.Stat[(187)]-1>strain.GetValue())
	cr.StatBase[(187)]=strain.GetValue();
	
	if(cr.Stat[(64)]==0)
	{
		cr.SayMsg((11),(3),12970);
		return 0;
	}
	else if((cr.Stat[(65)])>0&&(cr.Stat[(65)])<6)
	{
		cr.SayMsg((11),(3),12824);
		cr.StatBase[(72)]-=((cr.Stat[(72)])/100);
		if(!cr.IsDead())
		cr.Say((6),"кашляет");
		cr.StatBase[(65)]-=1;
		return Random(40,60)*60;
	}
	else if(cr.Stat[(64)]<10)
	{
		cr.SayMsg((11),(3),Random(12815,12817));
		cr.StatBase[(64)]+=1;
		return Random(3,10)*60;
	}
	else if(cr.Stat[(64)]<50)
	{
		cr.StatBase[(72)]-=((cr.Stat[(72)])/50-1);
		if(!cr.IsDead())
		cr.Say((6),"кашляет");
		cr.SayMsg((11),(3),Random(12815,12817));
		cr.StatBase[(64)]+=1;
		Map@map=cr.GetMap();
		Critter@[]persons;
		if(map.GetCrittersHex(cr.HexX,cr.HexY,2,(0x03)|(0x10),persons)>0)
		{
			for(uint i=0,ii=persons.length();i<ii;i++)
			{
				if((persons[i].Stat[(2)]<Random(0,12))&&persons[i].Stat[(67)]<=(2))
				ApplyDesease(cr,persons[i].Id,cr.Stat[(187)]);
			}
		}
		return Random(3,10)*60;
	}
	else if(cr.Stat[(64)]<300)
	{
		cr.StatBase[(72)]-=((cr.Stat[(72)])/20-1);
		if(!cr.IsDead())
		cr.Say((6),"хрипло кашляет");
		cr.SayMsg((11),(3),Random(12815,12820));
		cr.StatBase[(64)]+=1;
		Map@map=cr.GetMap();
		Critter@[]persons;
		if(map.GetCrittersHex(cr.HexX,cr.HexY,3,(0x03)|(0x10),persons)>0)
		{
			for(uint i=0,ii=persons.length();i<ii;i++)
			{
				if((persons[i].Stat[(2)]<Random(0,14))&&persons[i].Stat[(67)]<=(2))
				ApplyDesease(cr,persons[i].Id,cr.Stat[(187)]);
			}
		}
		return Random(3,10)*60;
	}
	else
	{
		cr.StatBase[(72)]-=((cr.Stat[(72)])/10-1);
		if(!cr.IsDead())
		cr.Say((6),"кашляет кровью");
		cr.SayMsg((11),(3),Random(12815,12823));
		if(cr.Stat[(64)]<999)
		cr.StatBase[(64)]+=1;
		if(cr.Stat[(74)]/100>Random(5,100)&&cr.Stat[(187)]==strain.GetValue())
		cr.StatBase[(187)]+=1;
		Map@map=cr.GetMap();
		Critter@[]persons;
		if(map.GetCrittersHex(cr.HexX,cr.HexY,5,(0x03)|(0x10),persons)>0)
		{
			for(uint i=0,ii=persons.length();i<ii;i++)
			{
				if((persons[i].Stat[(2)]<Random(0,18))&&persons[i].Stat[(67)]<=(2))
				ApplyDesease(cr,persons[i].Id,cr.Stat[(187)]);
			}
		}
		return Random(3,10)*60;
	}
}

uint cte_superman(Critter&cr,int identifier,uint&rate)
{
	if((cr.Stat[(74)]+Random(0,400))>800)
	{
		ApplyGhoul(cr);
		return 0;
	}
	else
	{
		cr.StatBase[(0)]+=Random(1,5);
		cr.StatBase[(4)]+=Random(1,4);
		cr.StatBase[(2)]+=Random(1,8);
		cr.StatBase[(7)]+=Random(50,200);
		cr.StatBase[(3)]+=Random(1,4);
		cr.StatBase[(72)]=cr.Stat[(7)];
		cr.StatBase[(11)]+=Random(50,150);
		cr.StatBase[(30)]+=Random(10,100);
		cr.StatBase[(31)]+=Random(10,100);
		cr.StatBase[(8)]+=Random(1,2);
		cr.StatBase[(5)]+=Random(1,2);
		cr.SayMsg((11),(3),12980);
		cr.StatBase[(183)]=3;
		return 0;
	}
	
}

uint cte_deadman(Critter&cr,int identifier,uint&rate)
{
	if((cr.Stat[(74)]+Random(0,400))>800)
	{
		ApplyGhoul(cr);
		return 0;
	}
	else
	{
		FlushScreen(cr,((uint((0xFF<<24)|(((0)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF)))),((uint((0xFF<<24)|(((0)&0xFF)<<16)|(((0)&0xFF)<<8)|((0)&0xFF)))),2000);
		cr.ChangeCrType(115);
		cr.ToDead(1,null);
		cr.SayMsg((11),(3),12981);
		return 0;
	}
}
