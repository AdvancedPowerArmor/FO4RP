

bool LocIsModoc(uint locPid)
{
	return(locPid<=(6));
}

bool LocIsCity(uint locPid)
{
	return(locPid<=(25)||locPid==(40)||locPid==(42)||locPid==26||locPid==27||locPid==29||locPid>=96);
}

bool LocIsMasked(uint locPid)
{
	return(locPid==(41));
}

bool LocIsHidden(uint locPid)
{
	return false;
}

bool hashes_inited=false;  

uint[][]hashes_coast(6);  

void init_hashes()
{
	string dir="art/tiles/",
	seas0="seas0",
	SHORE="SHORE",
	shor="shor",
	frm=".frm";
	
	uint[]@data=null;
	
	@data=hashes_coast[(0)];
	data.resize(0);
	for(uint i=1;i<=7;i++)
	data.insertLast(GetStrHash(dir+SHORE+"0"+i+frm));
	
	for(uint i=1;i<=9;i++)
	data.insertLast(GetStrHash(dir+"brick0"+i+".frm"));
	for(uint i=10;i<=16;i++)
	data.insertLast(GetStrHash(dir+"brick"+i+".frm"));   
	
	@data=hashes_coast[(1)];
	data.resize(0);
	data.insertLast(GetStrHash(dir+shor+22+frm));
	for(uint i=10;i<=18;i++)
	data.insertLast(GetStrHash(dir+seas0+i+frm));
	
	for(uint i=1;i<=9;i++)
	data.insertLast(GetStrHash(dir+"brick0"+i+".frm"));
	for(uint i=10;i<=16;i++)
	data.insertLast(GetStrHash(dir+"brick"+i+".frm"));    
	
	@data=hashes_coast[(2)];
	data.resize(0);
	for(uint i=5;i<=11;i++)
	data.insertLast(GetStrHash(dir+shor+((i<10)?"0":"")+i+frm));
	
	for(uint i=1;i<=9;i++)
	data.insertLast(GetStrHash(dir+"brick0"+i+".frm"));
	for(uint i=10;i<=16;i++)
	data.insertLast(GetStrHash(dir+"brick"+i+".frm"));    
	
	@data=hashes_coast[(3)];
	data.resize(0);
	for(uint i=1;i<=3;i++)
	data.insertLast(GetStrHash(dir+shor+"0"+i+frm));
	
	for(uint i=1;i<=9;i++)
	data.insertLast(GetStrHash(dir+"brick0"+i+".frm"));
	for(uint i=10;i<=16;i++)
	data.insertLast(GetStrHash(dir+"brick"+i+".frm"));    
	
	@data=hashes_coast[(4)];
	data.resize(0);
	data.insertLast(GetStrHash(dir+shor+"19"+frm));
	data.insertLast(GetStrHash(dir+shor+"21"+frm));
	data.insertLast(GetStrHash(dir+shor+"04"+frm));
	data.insertLast(GetStrHash(dir+shor+"20"+frm));
	
	for(uint i=1;i<=9;i++)
	data.insertLast(GetStrHash(dir+"brick0"+i+".frm"));
	for(uint i=10;i<=16;i++)
	data.insertLast(GetStrHash(dir+"brick"+i+".frm"));    
	
	@data=hashes_coast[(5)];
	data.resize(0);
	data.insertLast(GetStrHash(dir+shor+"16"+frm));
	data.insertLast(GetStrHash(dir+shor+"18"+frm));
	data.insertLast(GetStrHash(dir+shor+"15"+frm));
	data.insertLast(GetStrHash(dir+shor+"17"+frm));
	
	for(uint i=1;i<=9;i++)
	data.insertLast(GetStrHash(dir+"brick0"+i+".frm"));
	for(uint i=10;i<=16;i++)
	data.insertLast(GetStrHash(dir+"brick"+i+".frm"));    
	
	hashes_inited=true;
} 

uint8 checkCoast(Map&map,uint16 tx,uint16 ty)
{
	if(!hashes_inited)
	init_hashes();    
	
	uint hash=map.GetTile(tx,ty);
	if(hash==0)
	return 0;
	
	uint8 answer=0;
	
	for(uint i=0;i<6;i++)
	{
		uint[]@data=hashes_coast[i];
		for(uint k=0,len=data.length();k<len;k++)
		{
			if(data[k]!=hash)
			continue;
			answer|=((0x01)<<i);
			if(i>3&&len<5)
			{
				answer|=((0x01)<<(k|0x01))|((0x01)<<((k+1)&0x02));
			}
			return answer;
		}
	}
	return 0;
}
